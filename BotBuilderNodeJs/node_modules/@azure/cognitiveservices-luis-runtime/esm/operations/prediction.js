/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import * as msRest from "@azure/ms-rest-js";
import * as Mappers from "../models/predictionMappers";
import * as Parameters from "../models/parameters";
/** Class representing a Prediction. */
var Prediction = /** @class */ (function () {
    /**
     * Create a Prediction.
     * @param {LUISRuntimeClientContext} client Reference to the service client.
     */
    function Prediction(client) {
        this.client = client;
    }
    Prediction.prototype.resolve = function (appId, query, options, callback) {
        return this.client.sendOperationRequest({
            appId: appId,
            query: query,
            options: options
        }, resolveOperationSpec, callback);
    };
    return Prediction;
}());
export { Prediction };
// Operation Specifications
var serializer = new msRest.Serializer(Mappers);
var resolveOperationSpec = {
    httpMethod: "POST",
    path: "apps/{appId}",
    urlParameters: [
        Parameters.endpoint,
        Parameters.appId
    ],
    queryParameters: [
        Parameters.timezoneOffset,
        Parameters.verbose,
        Parameters.staging,
        Parameters.spellCheck,
        Parameters.bingSpellCheckSubscriptionKey,
        Parameters.log
    ],
    requestBody: {
        parameterPath: "query",
        mapper: {
            required: true,
            serializedName: "query",
            constraints: {
                MaxLength: 500
            },
            type: {
                name: "String"
            }
        }
    },
    responses: {
        200: {
            bodyMapper: Mappers.LuisResult
        },
        default: {
            bodyMapper: Mappers.APIError
        }
    },
    serializer: serializer
};
//# sourceMappingURL=prediction.js.map