import { TokenCredential } from "@azure/core-auth";
import { BaseRequestPolicy, RequestPolicy, RequestPolicyOptions, RequestPolicyFactory } from "../policies/requestPolicy";
import { HttpOperationResponse } from "../httpOperationResponse";
import { WebResourceLike } from "../webResource";
import { AccessTokenCache } from "../credentials/accessTokenCache";
import { AccessTokenRefresher } from "../credentials/accessTokenRefresher";
/**
 * Creates a new BearerTokenAuthenticationPolicy factory.
 *
 * @param credential The TokenCredential implementation that can supply the bearer token.
 * @param scopes The scopes for which the bearer token applies.
 */
export declare function bearerTokenAuthenticationPolicy(credential: TokenCredential, scopes: string | string[]): RequestPolicyFactory;
/**
 *
 * Provides a RequestPolicy that can request a token from a TokenCredential
 * implementation and then apply it to the Authorization header of a request
 * as a Bearer token.
 *
 */
export declare class BearerTokenAuthenticationPolicy extends BaseRequestPolicy {
    private tokenCache;
    private tokenRefresher;
    /**
     * Creates a new BearerTokenAuthenticationPolicy object.
     *
     * @param nextPolicy The next RequestPolicy in the request pipeline.
     * @param options Options for this RequestPolicy.
     * @param credential The TokenCredential implementation that can supply the bearer token.
     * @param scopes The scopes for which the bearer token applies.
     * @param tokenCache The cache for the most recent AccessToken returned from the TokenCredential.
     */
    constructor(nextPolicy: RequestPolicy, options: RequestPolicyOptions, tokenCache: AccessTokenCache, tokenRefresher: AccessTokenRefresher);
    /**
     * Applies the Bearer token to the request through the Authorization header.
     * @param webResource
     */
    sendRequest(webResource: WebResourceLike): Promise<HttpOperationResponse>;
    /**
     * Attempts a token update if any other time related conditionals have been reached based on the tokenRefresher class.
     */
    private updateTokenIfNeeded;
    private getToken;
}
//# sourceMappingURL=bearerTokenAuthenticationPolicy.d.ts.map
