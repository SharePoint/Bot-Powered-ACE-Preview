import * as Enums from "./enums";
import * as Shared from "./shared";
import { HostConfig } from "./host-config";
export declare function generateUniqueId(): string;
export declare function isNullOrEmpty(value: string): boolean;
export declare function appendChild(node: Node, child: Node): void;
export declare function getStringValue(obj: any, defaultValue?: string): string;
export declare function getNumberValue(obj: any, defaultValue?: number): number;
export declare function getBoolValue(value: any, defaultValue: boolean): boolean;
export declare function getEnumValue(targetEnum: {
    [s: number]: string;
}, name: string, defaultValue: number): number;
export declare function setProperty(target: object, propertyName: string, propertyValue: any, defaultValue?: any): void;
export declare function setNumberProperty(target: object, propertyName: string, propertyValue: number, defaultValue?: number): void;
export declare function setEnumProperty(enumType: {
    [s: number]: string;
}, target: object, propertyName: string, propertyValue: number, defaultValue?: number): void;
export declare function setArrayProperty(target: object, propertyName: string, propertyValue: any[]): void;
export declare function parseHostConfigEnum(targetEnum: {
    [s: number]: string;
}, value: string | number, defaultValue: any): any;
export declare function renderSeparation(hostConfig: HostConfig, separationDefinition: Shared.ISeparationDefinition, orientation: Enums.Orientation): HTMLElement;
export declare function stringToCssColor(color: string): string;
export declare function truncate(element: HTMLElement, maxHeight: number, lineHeight?: number): void;
export declare function getFitStatus(element: HTMLElement, containerEnd: number): Enums.ContainerFitStatus;
