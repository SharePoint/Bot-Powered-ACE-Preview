{"version":3,"sources":["webpack://AdaptiveCards/webpack/universalModuleDefinition","webpack://AdaptiveCards/webpack/bootstrap","webpack://AdaptiveCards/./src/enums.ts","webpack://AdaptiveCards/./src/shared.ts","webpack://AdaptiveCards/./src/utils.ts","webpack://AdaptiveCards/./src/host-config.ts","webpack://AdaptiveCards/./src/adaptivecards.ts","webpack://AdaptiveCards/./src/card-elements.ts","webpack://AdaptiveCards/./src/text-formatters.ts"],"names":["root","factory","exports","module","define","amd","window","enumerable","get","getter","value","key","bind","Object","prototype","hasOwnProperty","call","object","property","Default","Positive","Destructive","ActionStyle","Size","SizeUnit","TextSize","TextWeight","FontType","Spacing","TextColor","HorizontalAlignment","VerticalAlignment","ActionAlignment","ImageStyle","ShowCardActionMode","Orientation","FillMode","ActionIconPlacement","InputTextStyle","InputValidationNecessity","Emphasis","Accent","Good","Attention","Warning","ContainerStyle","ValidationError","ContainerFitStatus","setTabIndexAtCardRoot","GlobalSettings","ContentTypes","applicationJson","applicationXWwwFormUrlencoded","_isProcessed","_original","_processed","getReferencedInputs","inputs","referencedInputs","Error","input","RegExp","id","exec","this","substituteInputValues","contentType","matches","regEx","matchedInput","keys","toLowerCase","valueForReplace","JSON","stringify","slice","encodeURIComponent","replace","getOriginal","set","StringWithSubstitutions","top","right","bottom","left","SpacingDefinition","Enums","None","PaddingDefinition","physicalSize","unit","parse","requireUnitSpecifier","result","SizeAndUnit","Weight","expectedMatchCount","length","parseInt","Pixel","generate","d0","Math","random","d1","d2","d3","UUID","lut","initialize","i","toString","isNullOrEmpty","getEnumValue","targetEnum","name","defaultValue","setProperty","target","propertyName","propertyValue","stringToCssColor","color","a","findNextCharacter","html","currIdx","Shared","node","child","undefined","appendChild","obj","isNaN","enumType","targetValue","canDeleteTarget","items","item","push","toJSON","Array","isArray","hostConfig","separationDefinition","orientation","spacing","lineThickness","separator","document","createElement","className","makeCssClassName","Horizontal","style","paddingTop","marginBottom","borderBottom","lineColor","height","paddingLeft","marginRight","borderRight","width","overflow","element","maxHeight","lineHeight","fits","scrollHeight","fullText","innerHTML","truncateAt","idx","substring","breakableIndices","results","findBreakableIndices","lo","hi","bestBreakIdx","mid","floor","containerEnd","start","offsetTop","clientHeight","FullyInContainer","Overflowing","FullyOutOfContainer","defaultColor","subtleColor","default","subtle","ColorDefinition","highlightColors","TextColorDefinition","allowCustomStyle","AdaptiveCardConfig","imageSize","Medium","maxImageHeight","Utils","getNumberValue","ImageSetConfig","allowInlinePlayback","defaultPoster","MediaConfig","size","isSubtle","weight","wrap","parseHostConfigEnum","getDefaultWeight","FactTextDefinition","maxWidth","Bolder","FactTitleDefinition","title","FactSetConfig","actionMode","Inline","inlineTopMargin","ShowCardActionConfig","maxActions","buttonSpacing","showCard","preExpandSingleShowCardAction","actionsOrientation","actionAlignment","Left","iconPlacement","LeftOfTitle","allowTitleToWrap","iconSize","getBoolValue","sizeAndUnit","e","ActionsConfig","dark","light","accent","good","warning","attention","parseSingleColor","ColorSetDefinition","foregroundColors","backgroundColor","highlightBackgroundColor","highlightForegroundColor","ContainerStyleDefinition","_allStyles","BuiltInContainerStyleDefinition","customStyleArray","customStyle","styleName","forEach","isBuiltIn","emphasis","customStyles","getStyleByName","ContainerStyleSet","major","minor","label","_isValid","_major","_minor","_label","versionString","errors","Version","_versionString","error","InvalidPropertyValue","message","compareTo","otherVersion","isValid","capabilities","setCapability","version","json","jsonVersion","hasCapability","areAllMet","hostCapabilities","capabilityName","HostCapabilities","fontFamily","fontSizes","small","medium","large","extraLarge","fontWeights","lighter","bolder","monospace","FontTypeDefinition","getStyleDefinition","Monospace","FontTypeSet","choiceSetInputValueSeparator","supportsInteractivity","fontTypes","padding","imageSizes","containerStyles","actions","adaptiveCard","imageSet","media","factSet","cssClassNamePrefix","alwaysAllowBleed","String","_legacyFontType","lineHeights","getFontTypeDefinition","getEffectiveSpacing","Small","Large","ExtraLarge","Padding","paddingDefinitionToSpacingDefinition","paddingDefinition","makeCssClassNames","classNames","join","HostConfig","InstanceCreationErrorType","invokeSetCollection","action","collection","isActionAllowed","forbiddenActionTypes","getJsonTypeName","createCardObjectInstance","parent","forbiddenTypeNames","allowFallback","createInstanceCallback","createValidationErrorCallback","tryToFallback","typeName","getStringValue","indexOf","raiseParseError","ForbiddenType","setParent","shouldFallback","UnknownType","fallback","setShouldFallback","createActionInstance","AdaptiveCard","actionTypeRegistry","createInstance","errorType","UnknownActionType","ActionTypeNotAllowed","createElementInstance","elementTypeRegistry","UnknownElementType","ElementTypeNotAllowed","_rawProperties","enableFullJsonRoundTrip","setCustomProperty","getCustomProperty","SerializableObject","cardObject","ValidationFailure","allIds","failures","getFailureIndex","addFailure","failure","index","ValidationResults","internalValidateProperties","context","DuplicateId","validateProperties","CardObject","_shouldFallback","_lang","_hostConfig","_parent","_renderedElement","_separatorElement","_isVisible","_truncatedDueToOverflow","_defaultRenderedElementDisplayMode","_padding","requires","horizontalAlignment","customCssSelector","minPixelHeight","internalRenderSeparator","renderedSeparator","renderSeparation","separatorOrientation","alwaysBleedSeparators","parentContainer","getParentContainer","getEffectivePadding","parentPhysicalPadding","marginLeft","updateRenderedElementVisibility","displayMode","isDesignMode","isVisible","display","isFirstElement","hideElementDueToOverflow","visibility","raiseElementVisibilityChangedEvent","showElementHiddenDueToOverflow","handleOverflow","isHiddenDueToOverflow","handled","truncateOverflow","resetOverflow","sizeChanged","undoOverflowTruncation","createPlaceholderElement","border","minHeight","fontSize","innerText","adjustRenderedElementSize","renderedElement","flex","overrideInternalRender","internalRender","applyPadding","separatorElement","isBleeding","getImmediateSurroundingPadding","physicalPadding","getDefaultPadding","getHasBackground","getPadding","setPadding","asString","setEnumProperty","supportsMinHeight","getEffectiveStyle","defaultStyle","getForbiddenElementTypes","getForbiddenActionTypes","processTop","processRight","processBottom","processLeft","doProcessTop","isTopElement","doProcessRight","isRightMostElement","doProcessBottom","isBottomElement","doProcessLeft","isLeftMostElement","effectivePadding","card","getRootElement","onParseElementHandler","onParseElement","raiseParseElementEvent","jsonSeparation","Deprecated","jsonHeight","jsonMinHeight","getActionCount","getActionAt","remove","CardElementContainer","removeItem","render","classList","add","boxSizing","updateLayout","processChildren","cardElement","rootElement","designMode","isRendered","offsetHeight","isLastElement","isAtTheVeryLeft","isAtTheVeryRight","isAtTheVeryTop","isAtTheVeryBottom","isBleedingAtTop","isBleedingAtBottom","currentElement","Container","getAllInputs","getResourceInformation","getElementById","getActionById","allowCustomPadding","lang","defaultHostConfig","useAdvancedCardBottomTruncation","CardElement","_selectAction","fontType","getEffectiveStyleDefinition","getFontSize","getColorDefinition","colorSet","Dark","Light","setText","_text","text","applyStylesTo","targetElement","fontWeight","colorDefinition","effectiveColor","Lighter","sizeString","weightString","BaseTextBlock","_processedText","_treatAsPlainText","useMarkdown","restoreOriginalContent","maxLines","_computedLineHeight","_originalInnerHtml","truncateIfSupported","children","isTextOnly","tagName","truncate","getRenderedDomElementType","selectAction","onclick","preventDefault","cancelBubble","execute","tabIndex","setAttribute","getAriaRole","formattedText","TextFormatters","formatText","allowMarkForTextHighlighting","markdownProcessingResult","applyMarkdown","didProcess","outputHtml","markStyle","effectiveStyle","firstElementChild","HTMLElement","marginTop","textOverflow","lastElementChild","anchors","getElementsByTagName","anchor","raiseAnchorClickedEvent","wordWrap","whiteSpace","useAdvancedTextBlockTruncation","setNumberProperty","isRtl","Center","textAlign","Right","TextBlock","forElementId","htmlFor","italic","strikethrough","highlight","href","getHref","fontStyle","textDecoration","ShowCardAction","JsonTypeName","TextRun","_inlines","internalAddInline","inline","forceAdd","isInline","renderedInlines","renderedInline","jsonInline","textRun","jsonInlines","getInlineCount","getInlineAt","addInline","removeInline","splice","RichTextBlock","Fact","facts","borderWidth","borderSpacing","borderStyle","borderCollapse","trElement","tdElement","verticalAlign","textBlock","setArrayProperty","jsonFacts","jsonFact","fact","FactSet","Auto","pixelWidth","pixelHeight","altText","parseDimension","applySize","Stretch","url","alignItems","onkeypress","keyCode","justifyContent","imageElement","onload","raiseImageLoadedEvent","onerror","errorElement","minWidth","Person","borderRadius","backgroundPosition","backgroundRepeat","src","alt","styleString","mimeType","Image","allowVerticalOverflow","isElementAllowed","forbiddenElementTypes","isInteractive","forbiddenElementType","paddingRight","paddingBottom","getSelectAction","setSelectAction","isSelectable","getItemCount","getItemAt","InteractivityNotAllowed","overflowX","overflowY","concat","_images","flexWrap","renderedImage","margin","getFirstVisibleRenderedItem","getLastVisibleRenderedItem","itemIndex","images","image","jsonImages","addImage","ImageSet","MediaSource","sources","getPosterUrl","poster","processSources","_selectedSources","_selectedMediaType","source","mimeComponents","split","Media","supportedMediaTypes","renderPoster","posterRootElement","position","posterUrl","parentNode","removeChild","playButtonOuterElement","mediaPlayerElement","renderMediaPlayer","play","onPlay","playButtonInnerElement","playButtonArrowWidth","playButtonArrowHeight","borderTopWidth","borderBottomWidth","borderLeftWidth","borderRightWidth","borderTopColor","borderRightColor","borderBottomColor","transform","playButtonContainer","mediaElement","videoPlayer","controls","preload","type","jsonSource","mediaSource","necessity","Optional","errorMessage","InputValidationOptions","validation","_renderedInputControlElement","_inputControlContainerElement","_outerContainerElement","flexDirection","useBuiltInInputValidation","isNullable","RequiredWithVisualCue","valueChanged","onInputValueChangedHandler","resetValidationFailureCue","onValueChanged","onInputValueChanged","_errorMessageElement","showValidationErrorMessage","displayInputValidationErrors","textContent","parseInputValue","PropertyCantBeNull","validateValue","jsonValidation","_defaultValue","Input","isMultiline","Text","textareaElement","placeholder","maxLength","oninput","inlineAction","inputElement","renderedInputControl","iconUrl","removeProperty","inputControlContainerElement","_inlineAction","renderedInputControlElement","TextInput","valueOn","valueOff","_checkboxInputElement","generateUniqueId","checked","onchange","Label","useMarkdownInRadioButtonAndCheckbox","labelElement","spacerElement","ToggleInput","Choice","choices","isCompact","isMultiSelect","getUniqueCategoryName","uniqueCwtegoryName","ChoiceSetInput","uniqueCategoryCounter","internalApplyAriaCurrent","options","_selectElement","selected","removeAttribute","defaultValues","_toggleInputs","checkboxInput","compoundInput","option","disabled","hidden","uniqueCategoryName","radioInput","CollectionCantBeEmpty","choice","jsonChoice","selectedIndex","_numberInputElement","min","max","_min","_max","valueAsNumber","NumberInput","_dateInputElement","DateInput","ActionButtonState","_timeInputElement","test","TimeInput","parentContainerStyle","_state","Normal","onClick","_parentContainerStyle","updateCssStyle","Expanded","Subdued","click","_actionCollection","setCollection","actionCollection","addCssClasses","internalGetReferencedInputs","allInputs","internalPrepareForExecution","internalValidateInputs","ignoreInputValidation","baseCssClass","buttonElement","hasTitle","titleElement","AboveTitle","iconElement","onExecuteActionHandler","onExecute","onExecuteAction","prepareForExecution","onParseActionHandler","onParseAction","raiseParseActionEvent","removeAction","validateInputs","Action","_isPrepared","_ignoreInputValidation","_originalData","_processedData","SubmitAction","data","OpenUrlAction","targetElements","ToggleVisibilityAction","elementId","jsonTargetElements","jsonElementId","addTargetElement","removeTargetElement","_value","newValue","HttpHeader","_url","_body","_headers","header","HttpAction","method","headers","body","jsonHeader","httpHeader","InlineAdaptiveCard","jsonCard","owner","_expandedAction","_renderedActionCount","_actionCard","buttons","_owner","refreshContainer","_actionCardContainer","layoutChanged","hideActionCard","previouslyExpandedAction","raiseInlineCardExpandedEvent","showActionCard","suppressStyle","raiseEvent","renderedCard","collapseExpandedAction","state","expandShowCardAction","actionClicked","actionButton","Popup","findActionButton","clear","jsonAction","addAction","TooManyActions","buttonStrip","ActionButton","ab","spacer","buttonStripContainer","expandedAction","actionIndex","ActionCollection","renderedActionCount","jsonOrientation","ActionSet","_style","_bleed","applyBackground","styleDefinition","surroundingPadding","currentElementHasBackgroundImage","backgroundImage","StylableCardElementContainer","hasExplicitStyle","getHasExpandedAction","getBleed","setBleed","fillMode","BackgroundImage","defaultFillMode","defaultHorizontalAlignment","verticalAlignment","defaultVerticalAlignment","reset","apply","Repeat","RepeatHorizontally","RepeatVertically","Cover","backgroundSize","backgroundPositionX","backgroundPositionY","Bottom","Top","_items","_renderedItems","verticalContentAlignment","rtl","insertItemAt","forceInsert","isStandalone","supportsExcplitiHeight","getItemsCollectionPropertyName","dir","placeholderElement","boundary","handleElement","elt","getFitStatus","elements","bleed","firstRenderedItem","lastRenderedItem","jsonBackgroundImage","addItem","insertItemBefore","insertBefore","insertItemAfter","insertAfter","_computedWeight","Vertical","jsonWidth","invalidWidth","ColumnSet","Column","_columns","createColumnInstance","_renderedColumns","totalWeight","column","computedWeight","renderedColumn","columns","getCount","getColumnAt","jsonColumns","weightedColumns","stretchedColumns","Hint","addColumn","onImageLoadedHandler","onImageLoaded","onAnchorClickedHandler","onAnchorClicked","isExpanded","onInlineCardExpandedHandler","onInlineCardExpanded","shouldUpdateLayout","onElementVisibilityChangedHandler","onElementVisibilityChanged","onParseError","renderedActions","renderIfEmpty","ContainerWithActions","findTypeRegistration","registerType","registrationInfo","unregisterType","TypeRegistry","ElementTypeRegistry","ActionTypeRegistry","_cardTypeName","_fallbackCard","onProcessMarkdown","console","warn","isVersionSupported","bypassVersionCheck","currentVersion","fallbackText","speak","MissingCardType","UnsupportedCardVersion","langId","fallbackElement","regularExpression","_regularExpression","format","internalFormat","date","Date","toLocaleDateString","day","weekday","month","year","AbstractTextFormatter","toLocaleTimeString","hour","minute","formatters","DateFormatter","TimeFormatter"],"mappings":"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","file":"adaptivecards.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"AdaptiveCards\"] = factory();\n\telse\n\t\troot[\"AdaptiveCards\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\n// Note the \"weird\" way these readonly fields are declared is to work around\r\n// a breaking change introduced in TS 3.1 wrt d.ts generation. DO NOT CHANGE\r\n// and adopt this syntax for all other static readonly fields.\r\nexport class ActionStyle {\r\n    static readonly Default: \"default\" = \"default\";\r\n    static readonly Positive: \"positive\" = \"positive\";\r\n    static readonly Destructive: \"destructive\" = \"destructive\";\r\n}\r\n\r\nexport enum Size {\r\n    Auto,\r\n    Stretch,\r\n    Small,\r\n    Medium,\r\n    Large\r\n}\r\n\r\nexport enum SizeUnit {\r\n    Weight,\r\n    Pixel\r\n}\r\n\r\nexport enum TextSize {\r\n    Small,\r\n    Default,\r\n    Medium,\r\n    Large,\r\n    ExtraLarge\r\n}\r\n\r\nexport enum TextWeight {\r\n    Lighter,\r\n    Default,\r\n    Bolder\r\n}\r\n\r\nexport enum FontType {\r\n    Default,\r\n    Monospace\r\n}\r\n\r\nexport enum Spacing {\r\n    None,\r\n    Small,\r\n    Default,\r\n    Medium,\r\n    Large,\r\n    ExtraLarge,\r\n    Padding\r\n}\r\n\r\nexport enum TextColor {\r\n    Default,\r\n    Dark,\r\n    Light,\r\n    Accent,\r\n    Good,\r\n    Warning,\r\n    Attention\r\n}\r\n\r\nexport enum HorizontalAlignment {\r\n    Left,\r\n    Center,\r\n    Right\r\n}\r\n\r\nexport enum VerticalAlignment {\r\n    Top,\r\n    Center,\r\n    Bottom\r\n}\r\n\r\nexport enum ActionAlignment {\r\n    Left,\r\n    Center,\r\n    Right,\r\n    Stretch\r\n}\r\n\r\nexport enum ImageStyle {\r\n    Default,\r\n    Person\r\n}\r\n\r\nexport enum ShowCardActionMode {\r\n    Inline,\r\n    Popup\r\n}\r\n\r\nexport enum Orientation {\r\n    Horizontal,\r\n    Vertical\r\n}\r\n\r\nexport enum FillMode {\r\n    Cover,\r\n    RepeatHorizontally,\r\n    RepeatVertically,\r\n    Repeat\r\n}\r\n\r\nexport enum ActionIconPlacement {\r\n    LeftOfTitle,\r\n    AboveTitle\r\n}\r\n\r\nexport enum InputTextStyle {\r\n    Text,\r\n    Tel,\r\n    Url,\r\n    Email\r\n}\r\n\r\nexport enum InputValidationNecessity {\r\n    Optional,\r\n    Required,\r\n    RequiredWithVisualCue\r\n}\r\n\r\n/*\r\n    This should really be a string enum, e.g.\r\n\r\n        export enum ContainerStyle {\r\n            Default = \"default\",\r\n            Emphasis = \"emphasis\"\r\n        }\r\n\r\n    However, some hosts do not use a version of TypeScript\r\n    recent enough to understand string enums. This is\r\n    a compatible construct that does not require using\r\n    a more recent version of TypeScript.\r\n\r\n    Also note the \"weird\" way these readonly fields are declared is to work around\r\n    a breaking change introduced in TS 3.1 wrt d.ts generation. DO NOT CHANGE\r\n    and adopt this syntax for all other static readonly fields.\r\n*/\r\nexport class ContainerStyle {\r\n    static readonly Default: \"default\" = \"default\";\r\n    static readonly Emphasis: \"emphasis\" = \"emphasis\";\r\n    static readonly Accent: \"accent\" = \"accent\";\r\n    static readonly Good: \"good\" = \"good\";\r\n    static readonly Attention: \"attention\" = \"attention\";\r\n    static readonly Warning: \"warning\" = \"warning\";\r\n}\r\n\r\nexport enum ValidationError {\r\n    Hint,\r\n    ActionTypeNotAllowed,\r\n    CollectionCantBeEmpty,\r\n    Deprecated,\r\n    ElementTypeNotAllowed,\r\n    InteractivityNotAllowed,\r\n    InvalidPropertyValue,\r\n    MissingCardType,\r\n    PropertyCantBeNull,\r\n    TooManyActions,\r\n    UnknownActionType,\r\n    UnknownElementType,\r\n    UnsupportedCardVersion,\r\n    DuplicateId\r\n}\r\n\r\nexport enum ContainerFitStatus {\r\n    FullyInContainer,\r\n    Overflowing,\r\n    FullyOutOfContainer\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as Enums from \"./enums\";\r\n\r\nexport class GlobalSettings {\r\n    static setTabIndexAtCardRoot: boolean = true;\r\n}\r\n\r\nexport const ContentTypes = {\r\n\tapplicationJson: \"application/json\",\r\n\tapplicationXWwwFormUrlencoded: \"application/x-www-form-urlencoded\"\r\n}\r\n\r\nexport interface ISeparationDefinition {\r\n\tspacing: number,\r\n\tlineThickness?: number,\r\n\tlineColor?: string\r\n}\r\n\r\nexport interface IInput {\r\n\tid: string;\r\n    value: string;\r\n    validateValue(): boolean;\r\n}\r\n\r\nexport type Dictionary<T> = { [key: string]: T };\r\n\r\nexport class StringWithSubstitutions {\r\n\tprivate _isProcessed: boolean = false;\r\n\tprivate _original: string = null;\r\n    private _processed: string = null;\r\n\r\n    getReferencedInputs(inputs: IInput[], referencedInputs: Dictionary<IInput>) {\r\n        if (!referencedInputs) {\r\n            throw new Error(\"The referencedInputs parameter cannot be null.\")\r\n        }\r\n\r\n        for (let input of inputs) {\r\n            let matches = new RegExp(\"\\\\{{2}(\" + input.id + \").value\\\\}{2}\", \"gi\").exec(this._original);\r\n\r\n            if (matches != null) {\r\n                referencedInputs[input.id] = input;\r\n            }\r\n        }\r\n    }\r\n\r\n\tsubstituteInputValues(inputs: Dictionary<IInput>, contentType: string) {\r\n\t\tthis._processed = this._original;\r\n\r\n\t\tlet regEx = /\\{{2}([a-z0-9_$@]+).value\\}{2}/gi;\r\n\t\tlet matches;\r\n\r\n\t\twhile ((matches = regEx.exec(this._original)) != null) {\r\n\t\t\tlet matchedInput: IInput = null;\r\n\r\n\t\t\tfor (let key of Object.keys(inputs)) {\r\n\t\t\t\tif (key.toLowerCase() == matches[1].toLowerCase()) {\r\n\t\t\t\t\tmatchedInput = inputs[key];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n            }\r\n\r\n            if (matchedInput) {\r\n\t\t\t\tvar valueForReplace = \"\";\r\n\r\n\t\t\t\tif (matchedInput.value) {\r\n\t\t\t\t\tvalueForReplace = matchedInput.value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (contentType === ContentTypes.applicationJson) {\r\n\t\t\t\t\tvalueForReplace = JSON.stringify(valueForReplace);\r\n\t\t\t\t\tvalueForReplace = valueForReplace.slice(1, -1);\r\n\t\t\t\t}\r\n\t\t\t\telse if (contentType === ContentTypes.applicationXWwwFormUrlencoded) {\r\n\t\t\t\t\tvalueForReplace = encodeURIComponent(valueForReplace);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._processed = this._processed.replace(matches[0], valueForReplace);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis._isProcessed = true;\r\n\t}\r\n\r\n\tgetOriginal(): string {\r\n\t\treturn this._original;\r\n\t}\r\n\r\n\tget(): string {\r\n\t\tif (!this._isProcessed) {\r\n\t\t\treturn this._original;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._processed;\r\n\t\t}\r\n\t}\r\n\r\n\tset(value: string) {\r\n\t\tthis._original = value;\r\n\t\tthis._isProcessed = false;\r\n\t}\r\n}\r\n\r\nexport class SpacingDefinition {\r\n\tleft: number = 0;\r\n\ttop: number = 0;\r\n\tright: number = 0;\r\n\tbottom: number = 0;\r\n\r\n\tconstructor(top: number = 0,\r\n\t\tright: number = 0,\r\n\t\tbottom: number = 0,\r\n\t\tleft: number = 0) {\r\n\t\tthis.top = top;\r\n\t\tthis.right = right;\r\n\t\tthis.bottom = bottom;\r\n\t\tthis.left = left;\r\n\t}\r\n}\r\n\r\nexport class PaddingDefinition {\r\n\ttop: Enums.Spacing = Enums.Spacing.None;\r\n\tright: Enums.Spacing = Enums.Spacing.None;\r\n\tbottom: Enums.Spacing = Enums.Spacing.None;\r\n\tleft: Enums.Spacing = Enums.Spacing.None;\r\n\r\n\tconstructor(top: Enums.Spacing = Enums.Spacing.None,\r\n\t\tright: Enums.Spacing = Enums.Spacing.None,\r\n\t\tbottom: Enums.Spacing = Enums.Spacing.None,\r\n\t\tleft: Enums.Spacing = Enums.Spacing.None) {\r\n\t\tthis.top = top;\r\n\t\tthis.right = right;\r\n\t\tthis.bottom = bottom;\r\n\t\tthis.left = left;\r\n\t}\r\n}\r\n\r\nexport class SizeAndUnit {\r\n\tphysicalSize: number;\r\n\tunit: Enums.SizeUnit;\r\n\r\n\tstatic parse(input: any, requireUnitSpecifier: boolean = false): SizeAndUnit {\r\n\t\tlet result = new SizeAndUnit(0, Enums.SizeUnit.Weight);\r\n\r\n        if (typeof input === \"number\") {\r\n            result.physicalSize = input;\r\n\r\n            return result;\r\n        }\r\n        else if (typeof input === \"string\") {\r\n            let regExp = /^([0-9]+)(px|\\*)?$/g;\r\n            let matches = regExp.exec(input);\r\n            let expectedMatchCount = requireUnitSpecifier ? 3 : 2;\r\n\r\n            if (matches && matches.length >= expectedMatchCount) {\r\n                result.physicalSize = parseInt(matches[1]);\r\n\r\n                if (matches.length == 3) {\r\n                    if (matches[2] == \"px\") {\r\n                        result.unit = Enums.SizeUnit.Pixel;\r\n                    }\r\n                }\r\n\r\n                return result;\r\n            }\r\n        }\r\n\r\n\t\tthrow new Error(\"Invalid size: \" + input);\r\n\t}\r\n\r\n\tconstructor(physicalSize: number, unit: Enums.SizeUnit) {\r\n\t\tthis.physicalSize = physicalSize;\r\n\t\tthis.unit = unit;\r\n\t}\r\n}\r\n\r\nexport interface IResourceInformation {\r\n\turl: string;\r\n\tmimeType: string;\r\n}\r\n\r\n/**\r\n * Fast UUID generator, RFC4122 version 4 compliant.\r\n * @author Jeff Ward (jcward.com).\r\n * @license MIT license\r\n * @link http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\r\n **/\r\nexport class UUID {\r\n\tprivate static lut = [];\r\n\r\n\tstatic generate(): string {\r\n\t\tlet d0 = Math.random() * 0xffffffff | 0;\r\n\t\tlet d1 = Math.random() * 0xffffffff | 0;\r\n\t\tlet d2 = Math.random() * 0xffffffff | 0;\r\n\t\tlet d3 = Math.random() * 0xffffffff | 0;\r\n\r\n\t\treturn UUID.lut[d0 & 0xff] + UUID.lut[d0 >> 8 & 0xff] + UUID.lut[d0 >> 16 & 0xff] + UUID.lut[d0 >> 24 & 0xff] + '-' +\r\n\t\t\tUUID.lut[d1 & 0xff] + UUID.lut[d1 >> 8 & 0xff] + '-' + UUID.lut[d1 >> 16 & 0x0f | 0x40] + UUID.lut[d1 >> 24 & 0xff] + '-' +\r\n\t\t\tUUID.lut[d2 & 0x3f | 0x80] + UUID.lut[d2 >> 8 & 0xff] + '-' + UUID.lut[d2 >> 16 & 0xff] + UUID.lut[d2 >> 24 & 0xff] +\r\n\t\t\tUUID.lut[d3 & 0xff] + UUID.lut[d3 >> 8 & 0xff] + UUID.lut[d3 >> 16 & 0xff] + UUID.lut[d3 >> 24 & 0xff];\r\n\t}\r\n\r\n\tstatic initialize() {\r\n\t\tfor (let i = 0; i < 256; i++) {\r\n\t\t\tUUID.lut[i] = (i < 16 ? '0' : '') + i.toString(16);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nUUID.initialize();\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as Enums from \"./enums\";\r\nimport * as Shared from \"./shared\";\r\nimport { HostConfig } from \"./host-config\";\r\n\r\nexport function generateUniqueId(): string {\r\n    return \"__ac-\" + Shared.UUID.generate();\r\n}\r\n\r\nexport function isNullOrEmpty(value: string): boolean {\r\n    return value === undefined || value === null || value === \"\";\r\n}\r\n\r\nexport function appendChild(node: Node, child: Node) {\r\n    if (child != null && child != undefined) {\r\n        node.appendChild(child);\r\n    }\r\n}\r\n\r\nexport function getStringValue(obj: any, defaultValue: string = undefined): string {\r\n    return typeof obj === \"string\" ? obj.toString() : defaultValue;\r\n}\r\n\r\nexport function getNumberValue(obj: any, defaultValue: number = undefined): number {\r\n    return typeof obj === \"number\" ? obj : defaultValue;\r\n}\r\n\r\nexport function getBoolValue(value: any, defaultValue: boolean): boolean {\r\n    if (typeof value === \"boolean\") {\r\n        return value;\r\n    }\r\n    else if (typeof value === \"string\") {\r\n        switch (value.toLowerCase()) {\r\n            case \"true\":\r\n                return true;\r\n            case \"false\":\r\n                return false;\r\n            default:\r\n                return defaultValue;\r\n        }\r\n    }\r\n\r\n    return defaultValue;\r\n}\r\n\r\nexport function getEnumValue(targetEnum: { [s: number]: string }, name: string, defaultValue: number): number {\r\n    if (isNullOrEmpty(name)) {\r\n        return defaultValue;\r\n    }\r\n\r\n    for (var key in targetEnum) {\r\n        let isValueProperty = parseInt(key, 10) >= 0\r\n\r\n        if (isValueProperty) {\r\n            let value = targetEnum[key];\r\n\r\n            if (value && typeof value === \"string\") {\r\n                if (value.toLowerCase() === name.toLowerCase()) {\r\n                    return parseInt(key, 10);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return defaultValue;\r\n}\r\n\r\nexport function setProperty(target: object, propertyName: string, propertyValue: any, defaultValue: any = undefined) {\r\n    if (propertyValue === null || propertyValue === undefined || propertyValue === defaultValue) {\r\n        delete target[propertyName];\r\n    }\r\n    else {\r\n        target[propertyName] = propertyValue;\r\n    }\r\n}\r\n\r\nexport function setNumberProperty(target: object, propertyName: string, propertyValue: number, defaultValue: number = undefined) {\r\n    if (propertyValue === null || propertyValue === undefined || propertyValue === defaultValue || isNaN(propertyValue)) {\r\n        delete target[propertyName];\r\n    }\r\n    else {\r\n        target[propertyName] = propertyValue;\r\n    }\r\n}\r\n\r\nexport function setEnumProperty(enumType: { [s: number]: string }, target: object, propertyName: string, propertyValue: number, defaultValue: number = undefined) {\r\n    let targetValue = target[propertyName];\r\n\r\n    let canDeleteTarget = targetValue == undefined ? true : enumType[targetValue] !== undefined;\r\n\r\n    if (propertyValue == defaultValue) {\r\n        if (canDeleteTarget) {\r\n            delete target[propertyName];\r\n        }\r\n    }\r\n    else {\r\n        if (propertyValue == undefined) {\r\n            if (canDeleteTarget) {\r\n                delete target[propertyName];\r\n            }\r\n        }\r\n        else {\r\n            target[propertyName] = enumType[propertyValue];\r\n        }\r\n    }\r\n}\r\n\r\nexport function setArrayProperty(target: object, propertyName: string, propertyValue: any[]) {\r\n    let items = [];\r\n\r\n    if (propertyValue) {\r\n        for (let item of propertyValue) {\r\n            items.push(item.toJSON());\r\n        }\r\n    }\r\n\r\n    if (items.length == 0) {\r\n        if (target.hasOwnProperty(propertyName) && Array.isArray(target[propertyName])) {\r\n            delete target[propertyName];\r\n        }\r\n    }\r\n    else {\r\n        setProperty(target, propertyName, items);\r\n    }\r\n}\r\n\r\nexport function parseHostConfigEnum(targetEnum: { [s: number]: string }, value: string | number, defaultValue: any): any {\r\n    if (typeof value === \"string\") {\r\n        return getEnumValue(targetEnum, value, defaultValue);\r\n    }\r\n    else if (typeof value === \"number\") {\r\n        return value;\r\n    }\r\n    else {\r\n        return defaultValue;\r\n    }\r\n}\r\n\r\nexport function renderSeparation(hostConfig: HostConfig, separationDefinition: Shared.ISeparationDefinition, orientation: Enums.Orientation): HTMLElement {\r\n    if (separationDefinition.spacing > 0 || separationDefinition.lineThickness > 0) {\r\n        let separator = document.createElement(\"div\");\r\n        separator.className = hostConfig.makeCssClassName(\"ac-\" + (orientation == Enums.Orientation.Horizontal ? \"horizontal\" : \"vertical\") + \"-separator\");\r\n\r\n        if (orientation == Enums.Orientation.Horizontal) {\r\n            if (separationDefinition.lineThickness) {\r\n                separator.style.paddingTop = (separationDefinition.spacing / 2) + \"px\";\r\n                separator.style.marginBottom = (separationDefinition.spacing / 2) + \"px\";\r\n                separator.style.borderBottom = separationDefinition.lineThickness + \"px solid \" + stringToCssColor(separationDefinition.lineColor);\r\n            }\r\n            else {\r\n                separator.style.height = separationDefinition.spacing + \"px\";\r\n            }\r\n        }\r\n        else {\r\n            if (separationDefinition.lineThickness) {\r\n                separator.style.paddingLeft = (separationDefinition.spacing / 2) + \"px\";\r\n                separator.style.marginRight = (separationDefinition.spacing / 2) + \"px\";\r\n                separator.style.borderRight = separationDefinition.lineThickness + \"px solid \" + stringToCssColor(separationDefinition.lineColor);\r\n            }\r\n            else {\r\n                separator.style.width = separationDefinition.spacing + \"px\";\r\n            }\r\n        }\r\n\r\n        separator.style.overflow = \"hidden\";\r\n\r\n        return separator;\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport function stringToCssColor(color: string): string {\r\n    var regEx = /#([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})?/gi;\r\n\r\n    var matches = regEx.exec(color);\r\n\r\n    if (matches && matches[4]) {\r\n        var a = parseInt(matches[1], 16) / 255;\r\n        var r = parseInt(matches[2], 16);\r\n        var g = parseInt(matches[3], 16);\r\n        var b = parseInt(matches[4], 16);\r\n\r\n        return \"rgba(\" + r + \",\" + g + \",\" + b + \",\" + a + \")\";\r\n    }\r\n    else {\r\n        return color;\r\n    }\r\n}\r\n\r\nexport function truncate(element: HTMLElement,\r\n    maxHeight: number,\r\n    lineHeight?: number) {\r\n    var fits = () => {\r\n        // Allow a one pixel overflow to account for rounding differences\r\n        // between browsers\r\n        return maxHeight - element.scrollHeight >= -1.0;\r\n    };\r\n\r\n    if (fits()) return;\r\n\r\n    var fullText = element.innerHTML;\r\n    var truncateAt = (idx) => {\r\n        element.innerHTML = fullText.substring(0, idx) + '...';\r\n    }\r\n\r\n    var breakableIndices = findBreakableIndices(fullText);\r\n    var lo = 0;\r\n    var hi = breakableIndices.length;\r\n    var bestBreakIdx = 0;\r\n\r\n    // Do a binary search for the longest string that fits\r\n    while (lo < hi) {\r\n        var mid = Math.floor((lo + hi) / 2);\r\n        truncateAt(breakableIndices[mid]);\r\n\r\n        if (fits()) {\r\n            bestBreakIdx = breakableIndices[mid];\r\n            lo = mid + 1;\r\n        }\r\n        else {\r\n            hi = mid;\r\n        }\r\n    }\r\n\r\n    truncateAt(bestBreakIdx);\r\n\r\n    // If we have extra room, try to expand the string letter by letter\r\n    // (covers the case where we have to break in the middle of a long word)\r\n    if (lineHeight && maxHeight - element.scrollHeight >= lineHeight - 1.0) {\r\n        let idx = findNextCharacter(fullText, bestBreakIdx);\r\n\r\n        while (idx < fullText.length) {\r\n            truncateAt(idx);\r\n\r\n            if (fits()) {\r\n                bestBreakIdx = idx;\r\n                idx = findNextCharacter(fullText, idx);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        truncateAt(bestBreakIdx);\r\n    }\r\n}\r\n\r\nfunction findBreakableIndices(html: string): Array<number> {\r\n    var results: Array<number> = [];\r\n    var idx = findNextCharacter(html, -1);\r\n\r\n    while (idx < html.length) {\r\n        if (html[idx] == ' ') {\r\n            results.push(idx);\r\n        }\r\n\r\n        idx = findNextCharacter(html, idx);\r\n    }\r\n\r\n    return results;\r\n}\r\n\r\nfunction findNextCharacter(html: string, currIdx: number): number {\r\n    currIdx += 1;\r\n\r\n    // If we found the start of an HTML tag, keep advancing until we get\r\n    // past it, so we don't end up truncating in the middle of the tag\r\n    while (currIdx < html.length && html[currIdx] == '<') {\r\n        while (currIdx < html.length && html[currIdx++] != '>');\r\n    }\r\n\r\n    return currIdx;\r\n}\r\n\r\nexport function getFitStatus(element: HTMLElement, containerEnd: number): Enums.ContainerFitStatus {\r\n    var start = element.offsetTop;\r\n    var end = start + element.clientHeight;\r\n\r\n    if (end <= containerEnd) {\r\n        return Enums.ContainerFitStatus.FullyInContainer;\r\n    }\r\n    else if (start < containerEnd) {\r\n        return Enums.ContainerFitStatus.Overflowing;\r\n    }\r\n    else {\r\n        return Enums.ContainerFitStatus.FullyOutOfContainer;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as Enums from \"./enums\";\r\nimport * as Utils from \"./utils\";\r\nimport * as Shared from \"./shared\";\r\n\r\nexport interface IValidationError {\r\n    error: Enums.ValidationError,\r\n    message: string;\r\n}\r\n\r\nexport class ColorDefinition {\r\n    default: string = \"#000000\";\r\n    subtle: string = \"#666666\";\r\n\r\n    constructor(defaultColor?: string, subtleColor?: string) {\r\n        if (defaultColor) {\r\n            this.default = defaultColor;\r\n        }\r\n\r\n        if (subtleColor) {\r\n            this.subtle = subtleColor;\r\n        }\r\n    }\r\n\r\n    parse(obj?: any) {\r\n        if (obj) {\r\n            this.default = obj[\"default\"] || this.default;\r\n            this.subtle = obj[\"subtle\"] || this.subtle;\r\n        }\r\n    }\r\n}\r\n\r\nexport class TextColorDefinition extends ColorDefinition {\r\n    readonly highlightColors = new ColorDefinition(\"#22000000\", \"#11000000\");\r\n\r\n    parse(obj?: any) {\r\n        super.parse(obj);\r\n\r\n        if (obj) {\r\n            this.highlightColors.parse(obj[\"highlightColors\"]);\r\n        }\r\n    }\r\n}\r\n\r\nexport class AdaptiveCardConfig {\r\n    allowCustomStyle: boolean = false;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.allowCustomStyle = obj[\"allowCustomStyle\"] || this.allowCustomStyle;\r\n        }\r\n    }\r\n}\r\n\r\nexport class ImageSetConfig {\r\n    imageSize: Enums.Size = Enums.Size.Medium;\r\n    maxImageHeight: number = 100;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.imageSize = obj[\"imageSize\"] != null ? obj[\"imageSize\"] : this.imageSize;\r\n            this.maxImageHeight = Utils.getNumberValue(obj[\"maxImageHeight\"], 100);\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            imageSize: Enums.Size[this.imageSize],\r\n            maxImageHeight: this.maxImageHeight\r\n        }\r\n    }\r\n}\r\n\r\nexport class MediaConfig {\r\n    defaultPoster: string;\r\n    allowInlinePlayback: boolean = true;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.defaultPoster = obj[\"defaultPoster\"];\r\n            this.allowInlinePlayback = obj[\"allowInlinePlayback\"] || this.allowInlinePlayback;\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            defaultPoster: this.defaultPoster,\r\n            allowInlinePlayback: this.allowInlinePlayback\r\n        }\r\n    }\r\n}\r\n\r\nexport class FactTextDefinition {\r\n    size: Enums.TextSize = Enums.TextSize.Default;\r\n    color: Enums.TextColor = Enums.TextColor.Default;;\r\n    isSubtle: boolean = false;\r\n    weight: Enums.TextWeight = Enums.TextWeight.Default;\r\n    wrap: boolean = true;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.size = Utils.parseHostConfigEnum(Enums.TextSize, obj[\"size\"], Enums.TextSize.Default);\r\n            this.color = Utils.parseHostConfigEnum(Enums.TextColor, obj[\"color\"], Enums.TextColor.Default);\r\n            this.isSubtle = obj[\"isSubtle\"] || this.isSubtle;\r\n            this.weight = Utils.parseHostConfigEnum(Enums.TextWeight, obj[\"weight\"], this.getDefaultWeight());\r\n            this.wrap = obj[\"wrap\"] != null ? obj[\"wrap\"] : this.wrap;\r\n        }\r\n    }\r\n\r\n    getDefaultWeight() {\r\n\t\treturn Enums.TextWeight.Default;\r\n    }\r\n\r\n    toJSON(): any {\r\n        return {\r\n            size: Enums.TextSize[this.size],\r\n            color: Enums.TextColor[this.color],\r\n            isSubtle: this.isSubtle,\r\n            weight: Enums.TextWeight[this.weight],\r\n            wrap: this.wrap\r\n        }\r\n    }\r\n}\r\n\r\nexport class FactTitleDefinition extends FactTextDefinition {\r\n    maxWidth?: number = 150;\r\n    weight: Enums.TextWeight = Enums.TextWeight.Bolder;\r\n\r\n    constructor(obj?: any) {\r\n        super(obj);\r\n\r\n        if (obj) {\r\n            this.maxWidth = obj[\"maxWidth\"] != null ? obj[\"maxWidth\"] : this.maxWidth;\r\n\t\t\tthis.weight = Utils.parseHostConfigEnum(Enums.TextWeight, obj[\"weight\"], Enums.TextWeight.Bolder);\r\n        }\r\n    }\r\n\r\n    getDefaultWeight() {\r\n        return Enums.TextWeight.Bolder;\r\n    }\r\n}\r\n\r\nexport class FactSetConfig {\r\n    readonly title: FactTitleDefinition = new FactTitleDefinition();\r\n    readonly value: FactTextDefinition = new FactTextDefinition();\r\n    spacing: number = 10;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.title = new FactTitleDefinition(obj[\"title\"]);\r\n            this.value = new FactTextDefinition(obj[\"value\"]);\r\n            this.spacing = obj.spacing && obj.spacing != null ? obj.spacing && obj.spacing : this.spacing;\r\n        }\r\n    }\r\n}\r\n\r\nexport class ShowCardActionConfig {\r\n    actionMode: Enums.ShowCardActionMode = Enums.ShowCardActionMode.Inline;\r\n    inlineTopMargin: number = 16;\r\n    style?: string = Enums.ContainerStyle.Emphasis;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.actionMode = Utils.parseHostConfigEnum(Enums.ShowCardActionMode, obj[\"actionMode\"], Enums.ShowCardActionMode.Inline);\r\n            this.inlineTopMargin = obj[\"inlineTopMargin\"] != null ? obj[\"inlineTopMargin\"] : this.inlineTopMargin;\r\n            this.style = obj[\"style\"] && typeof obj[\"style\"] === \"string\" ? obj[\"style\"] : Enums.ContainerStyle.Emphasis;\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            actionMode: Enums.ShowCardActionMode[this.actionMode],\r\n            inlineTopMargin: this.inlineTopMargin,\r\n            style: this.style\r\n        }\r\n    }\r\n}\r\n\r\nexport class ActionsConfig {\r\n    maxActions: number = 5;\r\n    spacing: Enums.Spacing = Enums.Spacing.Default;\r\n    buttonSpacing: number = 20;\r\n    readonly showCard: ShowCardActionConfig = new ShowCardActionConfig();\r\n    preExpandSingleShowCardAction?: boolean = false;\r\n    actionsOrientation: Enums.Orientation = Enums.Orientation.Horizontal;\r\n    actionAlignment: Enums.ActionAlignment = Enums.ActionAlignment.Left;\r\n    iconPlacement: Enums.ActionIconPlacement = Enums.ActionIconPlacement.LeftOfTitle;\r\n    allowTitleToWrap: boolean = false;\r\n    iconSize: number = 24;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.maxActions = obj[\"maxActions\"] != null ? obj[\"maxActions\"] : this.maxActions;\r\n            this.spacing = Utils.parseHostConfigEnum(Enums.Spacing, obj.spacing && obj.spacing, Enums.Spacing.Default);\r\n            this.buttonSpacing = obj[\"buttonSpacing\"] != null ? obj[\"buttonSpacing\"] : this.buttonSpacing;\r\n            this.showCard = new ShowCardActionConfig(obj[\"showCard\"]);\r\n            this.preExpandSingleShowCardAction = Utils.getBoolValue(obj[\"preExpandSingleShowCardAction\"], false);\r\n            this.actionsOrientation = Utils.parseHostConfigEnum(Enums.Orientation, obj[\"actionsOrientation\"], Enums.Orientation.Horizontal);\r\n            this.actionAlignment = Utils.parseHostConfigEnum(Enums.ActionAlignment, obj[\"actionAlignment\"], Enums.ActionAlignment.Left);\r\n            this.iconPlacement = Utils.parseHostConfigEnum(Enums.ActionIconPlacement, obj[\"iconPlacement\"], Enums.ActionIconPlacement.LeftOfTitle);\r\n            this.allowTitleToWrap = obj[\"allowTitleToWrap\"] != null ? obj[\"allowTitleToWrap\"] : this.allowTitleToWrap;\r\n\r\n            try {\r\n                let sizeAndUnit = Shared.SizeAndUnit.parse(obj[\"iconSize\"]);\r\n\r\n                if (sizeAndUnit.unit == Enums.SizeUnit.Pixel) {\r\n                    this.iconSize = sizeAndUnit.physicalSize;\r\n                }\r\n            }\r\n            catch (e) {\r\n                // Swallow this, keep default icon size\r\n            }\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            maxActions: this.maxActions,\r\n            spacing: Enums.Spacing[this.spacing],\r\n            buttonSpacing: this.buttonSpacing,\r\n            showCard: this.showCard,\r\n            preExpandSingleShowCardAction: this.preExpandSingleShowCardAction,\r\n            actionsOrientation: Enums.Orientation[this.actionsOrientation],\r\n            actionAlignment: Enums.ActionAlignment[this.actionAlignment]\r\n        }\r\n    }\r\n}\r\n\r\nexport class ColorSetDefinition {\r\n    private parseSingleColor(obj: any, propertyName: string) {\r\n        if (obj) {\r\n            (this[propertyName] as TextColorDefinition).parse(obj[propertyName]);\r\n        }\r\n    }\r\n\r\n    default: TextColorDefinition = new TextColorDefinition();\r\n    dark: TextColorDefinition = new TextColorDefinition();\r\n    light: TextColorDefinition = new TextColorDefinition();\r\n    accent: TextColorDefinition = new TextColorDefinition();\r\n    good: TextColorDefinition = new TextColorDefinition();\r\n    warning: TextColorDefinition = new TextColorDefinition();\r\n    attention: TextColorDefinition = new TextColorDefinition();\r\n\r\n    constructor(obj?: any) {\r\n        this.parse(obj);\r\n    }\r\n\r\n    parse(obj: any) {\r\n        if (obj) {\r\n            this.parseSingleColor(obj, \"default\");\r\n            this.parseSingleColor(obj, \"dark\");\r\n            this.parseSingleColor(obj, \"light\");\r\n            this.parseSingleColor(obj, \"accent\");\r\n            this.parseSingleColor(obj, \"good\");\r\n            this.parseSingleColor(obj, \"warning\");\r\n            this.parseSingleColor(obj, \"attention\");\r\n        }\r\n    }\r\n}\r\n\r\nexport class ContainerStyleDefinition {\r\n    backgroundColor?: string;\r\n\r\n    readonly foregroundColors: ColorSetDefinition = new ColorSetDefinition(\r\n        {\r\n            \"default\": { default: \"#333333\", subtle: \"#EE333333\" },\r\n            \"dark\": { default: \"#000000\", subtle: \"#66000000\" },\r\n            \"light\": { default: \"#FFFFFF\", subtle: \"#33000000\" },\r\n            \"accent\": { default: \"#2E89FC\", subtle: \"#882E89FC\" },\r\n            \"good\": { default: \"#54A254\", subtle: \"#DD54A254\" },\r\n            \"warning\": { default: \"#E69500\", subtle: \"#DDE69500\" },\r\n            \"attention\": { default: \"#CC3300\", subtle: \"#DDCC3300\" }\r\n        }\r\n    );\r\n\r\n    highlightBackgroundColor?: string;\r\n    highlightForegroundColor?: string;\r\n\r\n    parse(obj: any) {\r\n        if (obj) {\r\n            this.backgroundColor = obj[\"backgroundColor\"];\r\n\r\n            this.foregroundColors.parse(obj[\"foregroundColors\"]);\r\n\r\n            this.highlightBackgroundColor = obj[\"highlightBackgroundColor\"];\r\n            this.highlightForegroundColor = obj[\"highlightForegroundColor\"];\r\n        }\r\n    }\r\n\r\n    constructor(obj?: any) {\r\n        this.parse(obj);\r\n    }\r\n\r\n    get isBuiltIn(): boolean {\r\n        return false;\r\n    }\r\n}\r\n\r\nclass BuiltInContainerStyleDefinition extends ContainerStyleDefinition {\r\n    get isBuiltIn(): boolean {\r\n        return true;\r\n    }\r\n}\r\n\r\nexport interface ILineHeightDefinitions {\r\n    small: number;\r\n    medium: number;\r\n    default: number;\r\n    large: number;\r\n    extraLarge: number;\r\n}\r\n\r\nexport class ContainerStyleSet {\r\n    private _allStyles: object = {};\r\n\r\n    constructor(obj?: any) {\r\n        this._allStyles[Enums.ContainerStyle.Default] = new BuiltInContainerStyleDefinition();\r\n        this._allStyles[Enums.ContainerStyle.Emphasis] = new BuiltInContainerStyleDefinition();\r\n        this._allStyles[Enums.ContainerStyle.Accent] = new BuiltInContainerStyleDefinition();\r\n        this._allStyles[Enums.ContainerStyle.Good] = new BuiltInContainerStyleDefinition();\r\n        this._allStyles[Enums.ContainerStyle.Attention] = new BuiltInContainerStyleDefinition();\r\n        this._allStyles[Enums.ContainerStyle.Warning] = new BuiltInContainerStyleDefinition();\r\n\r\n        if (obj) {\r\n            this._allStyles[Enums.ContainerStyle.Default].parse(obj[Enums.ContainerStyle.Default]);\r\n            this._allStyles[Enums.ContainerStyle.Emphasis].parse(obj[Enums.ContainerStyle.Emphasis]);\r\n            this._allStyles[Enums.ContainerStyle.Accent].parse(obj[Enums.ContainerStyle.Accent]);\r\n            this._allStyles[Enums.ContainerStyle.Good].parse(obj[Enums.ContainerStyle.Good]);\r\n            this._allStyles[Enums.ContainerStyle.Attention].parse(obj[Enums.ContainerStyle.Attention]);\r\n            this._allStyles[Enums.ContainerStyle.Warning].parse(obj[Enums.ContainerStyle.Warning]);\r\n\r\n            const customStyleArray = obj[\"customStyles\"];\r\n\r\n            if (customStyleArray && Array.isArray(customStyleArray)) {\r\n                for (var customStyle of customStyleArray) {\r\n                    if (customStyle) {\r\n                        var styleName = customStyle[\"name\"];\r\n\r\n                        if (styleName && typeof styleName === \"string\") {\r\n                            if (this._allStyles.hasOwnProperty(styleName)) {\r\n                                this._allStyles[styleName].parse(customStyle[\"style\"]);\r\n                            }\r\n                            else {\r\n                                this._allStyles[styleName] = new ContainerStyleDefinition(customStyle[\"style\"]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        var customStyleArray: Array<any> = [];\r\n\r\n        Object.keys(this._allStyles).forEach(\r\n            (key) => {\r\n                if (!this._allStyles[key].isBuiltIn) {\r\n                    customStyleArray.push({\r\n                        name: key,\r\n                        style: this._allStyles[key]\r\n                    });\r\n                }\r\n            });\r\n\r\n        var result: any = {\r\n            default: this.default,\r\n            emphasis: this.emphasis\r\n        }\r\n\r\n        if (customStyleArray.length > 0) {\r\n            result.customStyles = customStyleArray;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getStyleByName(name: string, defaultValue: ContainerStyleDefinition = null): ContainerStyleDefinition {\r\n        return this._allStyles.hasOwnProperty(name) ? this._allStyles[name] : defaultValue;\r\n    }\r\n\r\n    get default(): ContainerStyleDefinition {\r\n        return this._allStyles[Enums.ContainerStyle.Default];\r\n    }\r\n\r\n    get emphasis(): ContainerStyleDefinition {\r\n        return this._allStyles[Enums.ContainerStyle.Emphasis];\r\n    }\r\n}\r\n\r\nexport class Version {\r\n    private _versionString: string;\r\n    private _major: number;\r\n    private _minor: number;\r\n    private _isValid: boolean = true;\r\n    private _label: string;\r\n\r\n    constructor(major: number = 1, minor: number = 1, label?: string) {\r\n        this._major = major;\r\n        this._minor = minor;\r\n        this._label = label;\r\n    }\r\n\r\n    static parse(versionString: string, errors?: Array<IValidationError>): Version {\r\n        if (!versionString) {\r\n            return null;\r\n        }\r\n\r\n        var result = new Version();\r\n        result._versionString = versionString;\r\n\r\n        var regEx = /(\\d+).(\\d+)/gi;\r\n        var matches = regEx.exec(versionString);\r\n\r\n        if (matches != null && matches.length == 3) {\r\n            result._major = parseInt(matches[1]);\r\n            result._minor = parseInt(matches[2]);\r\n        }\r\n        else {\r\n            result._isValid = false;\r\n        }\r\n\r\n        if (!result._isValid && errors) {\r\n            errors.push(\r\n                {\r\n                    error: Enums.ValidationError.InvalidPropertyValue,\r\n                    message: \"Invalid version string: \" + result._versionString\r\n                }\r\n            );\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    toString(): string {\r\n        return !this._isValid ? this._versionString : this._major + \".\" + this._minor;\r\n    }\r\n\r\n    compareTo(otherVersion: Version): number {\r\n        if (!this.isValid || !otherVersion.isValid) {\r\n            throw new Error(\"Cannot compare invalid version.\");\r\n        }\r\n\r\n        if (this.major > otherVersion.major) {\r\n            return 1;\r\n        }\r\n        else if (this.major < otherVersion.major) {\r\n            return -1;\r\n        }\r\n        else if (this.minor > otherVersion.minor) {\r\n            return 1;\r\n        }\r\n        else if (this.minor < otherVersion.minor) {\r\n            return -1;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    get label(): string {\r\n        return this._label ? this._label : this.toString();\r\n    }\r\n\r\n    get major(): number {\r\n        return this._major;\r\n    }\r\n\r\n    get minor(): number {\r\n        return this._minor;\r\n    }\r\n\r\n    get isValid(): boolean {\r\n        return this._isValid;\r\n    }\r\n}\r\n\r\nexport type HostCapabilityVersion = Version | \"*\";\r\nexport type HostCapabilityMap = { [key: string]: HostCapabilityVersion };\r\n\r\nexport class HostCapabilities {\r\n    private setCapability(name: string, version: HostCapabilityVersion) {\r\n        if (!this.capabilities) {\r\n            this.capabilities = { };\r\n        }\r\n\r\n        this.capabilities[name] = version;\r\n    }\r\n\r\n    capabilities: HostCapabilityMap = null;\r\n\r\n    parse(json: any, errors?: Array<IValidationError>) {\r\n        if (json) {\r\n            for (let name in json) {\r\n                let jsonVersion = json[name];\r\n\r\n                if (typeof jsonVersion === \"string\") {\r\n                    if (jsonVersion == \"*\") {\r\n                        this.setCapability(name, \"*\");\r\n                    }\r\n                    else {\r\n                        let version = Version.parse(jsonVersion, errors);\r\n\r\n                        if (version.isValid) {\r\n                            this.setCapability(name, version);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    hasCapability(name: string, version: HostCapabilityVersion): boolean {\r\n        if (this.capabilities && this.capabilities.hasOwnProperty(name)) {\r\n            if (version == \"*\" || this.capabilities[name] == \"*\") {\r\n                return true;\r\n            }\r\n\r\n            return version.compareTo(<Version>this.capabilities[name]) <= 0;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    areAllMet(hostCapabilities: HostCapabilities): boolean {\r\n        if (this.capabilities) {\r\n            for (let capabilityName in this.capabilities) {\r\n                if (!hostCapabilities.hasCapability(capabilityName, this.capabilities[capabilityName])) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n}\r\n\r\nexport interface IFontSizeDefinitions {\r\n    small: number;\r\n    default: number;\r\n    medium: number;\r\n    large: number;\r\n    extraLarge: number;\r\n}\r\n\r\nexport interface IFontWeightDefinitions {\r\n    lighter: number;\r\n    default: number;\r\n    bolder: number;\r\n}\r\n\r\nexport class FontTypeDefinition {\r\n    static readonly monospace =  new FontTypeDefinition(\"'Courier New', Courier, monospace\");\r\n\r\n    fontFamily?: string = \"Segoe UI,Segoe,Segoe WP,Helvetica Neue,Helvetica,sans-serif\";\r\n\r\n    fontSizes: IFontSizeDefinitions = {\r\n        small: 12,\r\n        default: 14,\r\n        medium: 17,\r\n        large: 21,\r\n        extraLarge: 26\r\n    };\r\n\r\n    fontWeights: IFontWeightDefinitions = {\r\n        lighter: 200,\r\n        default: 400,\r\n        bolder: 600\r\n    };\r\n\r\n    constructor(fontFamily?: string) {\r\n        if (fontFamily) {\r\n            this.fontFamily = fontFamily;\r\n        }\r\n    }\r\n\r\n    parse(obj?: any) {\r\n        this.fontFamily = obj[\"fontFamily\"] || this.fontFamily;\r\n        this.fontSizes = {\r\n            small: obj.fontSizes && obj.fontSizes[\"small\"] || this.fontSizes.small,\r\n            default: obj.fontSizes && obj.fontSizes[\"default\"] || this.fontSizes.default,\r\n            medium: obj.fontSizes && obj.fontSizes[\"medium\"] || this.fontSizes.medium,\r\n            large: obj.fontSizes && obj.fontSizes[\"large\"] || this.fontSizes.large,\r\n            extraLarge: obj.fontSizes && obj.fontSizes[\"extraLarge\"] || this.fontSizes.extraLarge\r\n        };\r\n        this.fontWeights = {\r\n            lighter: obj.fontWeights && obj.fontWeights[\"lighter\"] || this.fontWeights.lighter,\r\n            default: obj.fontWeights && obj.fontWeights[\"default\"] || this.fontWeights.default,\r\n            bolder: obj.fontWeights && obj.fontWeights[\"bolder\"] || this.fontWeights.bolder\r\n        };\r\n    }\r\n}\r\n\r\nexport class FontTypeSet {\r\n    default: FontTypeDefinition;\r\n    monospace: FontTypeDefinition;\r\n\r\n    constructor(obj?: any) {\r\n        this.default = new FontTypeDefinition();\r\n        this.monospace = new FontTypeDefinition(\"'Courier New', Courier, monospace\");\r\n\r\n        if (obj) {\r\n            this.default.parse(obj[\"default\"]);\r\n            this.monospace.parse(obj[\"monospace\"]);\r\n        }\r\n    }\r\n\r\n    getStyleDefinition(style: Enums.FontType): FontTypeDefinition {\r\n        switch (style) {\r\n            case Enums.FontType.Monospace:\r\n                return this.monospace;\r\n            case Enums.FontType.Default:\r\n            default:\r\n                return this.default;\r\n        }\r\n    }\r\n}\r\n\r\nexport class HostConfig {\r\n    readonly hostCapabilities = new HostCapabilities();\r\n\r\n    private _legacyFontType: FontTypeDefinition;\r\n\r\n    choiceSetInputValueSeparator: string = \",\";\r\n    supportsInteractivity: boolean = true;\r\n    lineHeights?: ILineHeightDefinitions;\r\n    fontTypes: FontTypeSet = null;\r\n\r\n    readonly spacing = {\r\n        small: 3,\r\n        default: 8,\r\n        medium: 20,\r\n        large: 30,\r\n        extraLarge: 40,\r\n        padding: 15\r\n    };\r\n\r\n    readonly separator = {\r\n        lineThickness: 1,\r\n        lineColor: \"#EEEEEE\"\r\n    };\r\n\r\n    readonly imageSizes = {\r\n        small: 40,\r\n        medium: 80,\r\n        large: 160\r\n    };\r\n\r\n    readonly containerStyles: ContainerStyleSet = new ContainerStyleSet();\r\n    readonly actions: ActionsConfig = new ActionsConfig();\r\n    readonly adaptiveCard: AdaptiveCardConfig = new AdaptiveCardConfig();\r\n    readonly imageSet: ImageSetConfig = new ImageSetConfig();\r\n    readonly media: MediaConfig = new MediaConfig();\r\n    readonly factSet: FactSetConfig = new FactSetConfig();\r\n\r\n    cssClassNamePrefix: string = null;\r\n    alwaysAllowBleed: boolean = false;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            if (typeof obj === \"string\" || obj instanceof String) {\r\n                obj = JSON.parse(obj as string);\r\n            }\r\n\r\n            this.choiceSetInputValueSeparator = (obj && typeof obj[\"choiceSetInputValueSeparator\"] === \"string\") ? obj[\"choiceSetInputValueSeparator\"] : this.choiceSetInputValueSeparator;\r\n            this.supportsInteractivity = (obj && typeof obj[\"supportsInteractivity\"] === \"boolean\") ? obj[\"supportsInteractivity\"] : this.supportsInteractivity;\r\n\r\n            this._legacyFontType = new FontTypeDefinition();\r\n            this._legacyFontType.parse(obj);\r\n\r\n            if (obj.fontTypes) {\r\n                this.fontTypes = new FontTypeSet(obj.fontTypes);\r\n            }\r\n\r\n            if (obj.lineHeights) {\r\n                this.lineHeights = {\r\n                    small: obj.lineHeights[\"small\"],\r\n                    default: obj.lineHeights[\"default\"],\r\n                    medium: obj.lineHeights[\"medium\"],\r\n                    large: obj.lineHeights[\"large\"],\r\n                    extraLarge: obj.lineHeights[\"extraLarge\"]\r\n                };\r\n            };\r\n\r\n            this.imageSizes = {\r\n                small: obj.imageSizes && obj.imageSizes[\"small\"] || this.imageSizes.small,\r\n                medium: obj.imageSizes && obj.imageSizes[\"medium\"] || this.imageSizes.medium,\r\n                large: obj.imageSizes && obj.imageSizes[\"large\"] || this.imageSizes.large,\r\n            };\r\n\r\n            this.containerStyles = new ContainerStyleSet(obj[\"containerStyles\"]);\r\n            this.spacing = {\r\n                small: obj.spacing && obj.spacing[\"small\"] || this.spacing.small,\r\n                default: obj.spacing && obj.spacing[\"default\"] || this.spacing.default,\r\n                medium: obj.spacing && obj.spacing[\"medium\"] || this.spacing.medium,\r\n                large: obj.spacing && obj.spacing[\"large\"] || this.spacing.large,\r\n                extraLarge: obj.spacing && obj.spacing[\"extraLarge\"] || this.spacing.extraLarge,\r\n                padding: obj.spacing && obj.spacing[\"padding\"] || this.spacing.padding\r\n            };\r\n\r\n            this.separator = {\r\n                lineThickness: obj.separator && obj.separator[\"lineThickness\"] || this.separator.lineThickness,\r\n                lineColor: obj.separator && obj.separator[\"lineColor\"] || this.separator.lineColor\r\n            }\r\n\r\n            this.actions = new ActionsConfig(obj.actions || this.actions);\r\n            this.adaptiveCard = new AdaptiveCardConfig(obj.adaptiveCard || this.adaptiveCard);\r\n            this.imageSet = new ImageSetConfig(obj[\"imageSet\"]);\r\n            this.factSet = new FactSetConfig(obj[\"factSet\"])\r\n        }\r\n    }\r\n\r\n    getFontTypeDefinition(style?: Enums.FontType): FontTypeDefinition {\r\n        if (this.fontTypes) {\r\n            return this.fontTypes.getStyleDefinition(style);\r\n        }\r\n        else {\r\n            return style == Enums.FontType.Monospace ? FontTypeDefinition.monospace : this._legacyFontType;\r\n        }\r\n    }\r\n\r\n    getEffectiveSpacing(spacing: Enums.Spacing): number {\r\n        switch (spacing) {\r\n            case Enums.Spacing.Small:\r\n                return this.spacing.small;\r\n            case Enums.Spacing.Default:\r\n                return this.spacing.default;\r\n            case Enums.Spacing.Medium:\r\n                return this.spacing.medium;\r\n            case Enums.Spacing.Large:\r\n                return this.spacing.large;\r\n            case Enums.Spacing.ExtraLarge:\r\n                return this.spacing.extraLarge;\r\n            case Enums.Spacing.Padding:\r\n                return this.spacing.padding;\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n\r\n\tpaddingDefinitionToSpacingDefinition(paddingDefinition: Shared.PaddingDefinition): Shared.SpacingDefinition {\r\n\t\treturn new Shared.SpacingDefinition(\r\n\t\t\tthis.getEffectiveSpacing(paddingDefinition.top),\r\n\t\t\tthis.getEffectiveSpacing(paddingDefinition.right),\r\n\t\t\tthis.getEffectiveSpacing(paddingDefinition.bottom),\r\n\t\t\tthis.getEffectiveSpacing(paddingDefinition.left));\r\n    }\r\n\r\n    makeCssClassNames(...classNames: string[]): string[] {\r\n        let result: string[] = [];\r\n\r\n        for (let className of classNames) {\r\n            result.push((this.cssClassNamePrefix ? this.cssClassNamePrefix + \"-\" : \"\") + className);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    makeCssClassName(...classNames: string[]): string {\r\n        let result = this.makeCssClassNames(...classNames).join(\" \");\r\n\r\n        return result ? result : \"\";\r\n    }\r\n\r\n    get fontFamily(): string {\r\n        return this._legacyFontType.fontFamily;\r\n    }\r\n\r\n    set fontFamily(value: string) {\r\n        this._legacyFontType.fontFamily = value;\r\n    }\r\n\r\n    get fontSizes(): IFontSizeDefinitions {\r\n        return this._legacyFontType.fontSizes;\r\n    }\r\n\r\n    get fontWeights(): IFontWeightDefinitions {\r\n        return this._legacyFontType.fontWeights;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport * from \"./card-elements\";\r\nexport * from \"./enums\";\r\nexport * from \"./host-config\";\r\nexport * from \"./shared\";\r\nexport * from \"./utils\";\r\nexport { IAdaptiveCard, ICardElement } from \"./schema\";\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as Enums from \"./enums\";\r\nimport * as Shared from \"./shared\";\r\nimport * as Utils from \"./utils\";\r\nimport * as HostConfig from \"./host-config\";\r\nimport * as TextFormatters from \"./text-formatters\";\r\n\r\nfunction invokeSetCollection(action: Action, collection: ActionCollection) {\r\n    if (action) {\r\n        // Closest emulation of \"internal\" in TypeScript.\r\n        action[\"setCollection\"](collection);\r\n    }\r\n}\r\n\r\nfunction isActionAllowed(action: Action, forbiddenActionTypes: Array<string>): boolean {\r\n    if (forbiddenActionTypes) {\r\n        for (var i = 0; i < forbiddenActionTypes.length; i++) {\r\n            if (action.getJsonTypeName() === forbiddenActionTypes[i]) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nenum InstanceCreationErrorType {\r\n    UnknownType,\r\n    ForbiddenType\r\n}\r\n\r\nfunction createCardObjectInstance<T extends CardObject>(\r\n    parent: CardElement,\r\n    json: any,\r\n    forbiddenTypeNames: string[],\r\n    allowFallback: boolean,\r\n    createInstanceCallback: (typeName: string) => T,\r\n    createValidationErrorCallback: (typeName: string, errorType: InstanceCreationErrorType) => HostConfig.IValidationError,\r\n    errors: Array<HostConfig.IValidationError>): T {\r\n    let result: T = null;\r\n\r\n    if (json && typeof json === \"object\") {\r\n        let tryToFallback = false;\r\n\t\tlet typeName = Utils.getStringValue(json[\"type\"]);\r\n\r\n        if (forbiddenTypeNames && forbiddenTypeNames.indexOf(typeName) >= 0) {\r\n            raiseParseError(createValidationErrorCallback(typeName, InstanceCreationErrorType.ForbiddenType), errors);\r\n        }\r\n        else {\r\n            result = createInstanceCallback(typeName);\r\n\r\n            if (!result) {\r\n                tryToFallback = allowFallback;\r\n\r\n                raiseParseError(createValidationErrorCallback(typeName, InstanceCreationErrorType.UnknownType), errors);\r\n            }\r\n            else {\r\n                result.setParent(parent);\r\n                result.parse(json, errors);\r\n\r\n                tryToFallback = result.shouldFallback() && allowFallback;\r\n            }\r\n\r\n            if (tryToFallback) {\r\n                let fallback = json[\"fallback\"];\r\n\r\n                if (!fallback) {\r\n                    parent.setShouldFallback(true);\r\n                }\r\n                if (typeof fallback === \"string\" && fallback.toLowerCase() === \"drop\") {\r\n                    result = null;\r\n                }\r\n                else if (typeof fallback === \"object\") {\r\n                    result = createCardObjectInstance<T>(\r\n                        parent,\r\n                        fallback,\r\n                        forbiddenTypeNames,\r\n                        true,\r\n                        createInstanceCallback,\r\n                        createValidationErrorCallback,\r\n                        errors);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function createActionInstance(\r\n    parent: CardElement,\r\n    json: any,\r\n    forbiddenActionTypes: string[],\r\n    allowFallback: boolean,\r\n    errors: Array<HostConfig.IValidationError>): Action {\r\n    return createCardObjectInstance<Action>(\r\n        parent,\r\n        json,\r\n        forbiddenActionTypes,\r\n        allowFallback,\r\n        (typeName: string) => { return AdaptiveCard.actionTypeRegistry.createInstance(typeName); },\r\n        (typeName: string, errorType: InstanceCreationErrorType) => {\r\n            if (errorType == InstanceCreationErrorType.UnknownType) {\r\n                return {\r\n                    error: Enums.ValidationError.UnknownActionType,\r\n                    message: \"Unknown action type: \" + typeName + \". Fallback will be used if present.\"\r\n                }\r\n            }\r\n            else {\r\n                return {\r\n                    error: Enums.ValidationError.ActionTypeNotAllowed,\r\n                    message: \"Action type \" + typeName + \" is not allowed in this context.\"\r\n                }\r\n            }\r\n        },\r\n        errors);\r\n}\r\n\r\nexport function createElementInstance(\r\n    parent: CardElement,\r\n    json: any,\r\n    allowFallback: boolean,\r\n    errors: Array<HostConfig.IValidationError>): CardElement {\r\n    return createCardObjectInstance<CardElement>(\r\n        parent,\r\n        json,\r\n        [], // Forbidden types not supported for elements for now\r\n        allowFallback,\r\n        (typeName: string) => { return AdaptiveCard.elementTypeRegistry.createInstance(typeName); },\r\n        (typeName: string, errorType: InstanceCreationErrorType) => {\r\n            if (errorType == InstanceCreationErrorType.UnknownType) {\r\n                return {\r\n                    error: Enums.ValidationError.UnknownElementType,\r\n                    message: \"Unknown element type: \" + typeName + \". Fallback will be used if present.\"\r\n                }\r\n            }\r\n            else {\r\n                return {\r\n                    error: Enums.ValidationError.ElementTypeNotAllowed,\r\n                    message: \"Element type \" + typeName + \" is not allowed in this context.\"\r\n                }\r\n            }\r\n        },\r\n        errors);\r\n}\r\n\r\nexport abstract class SerializableObject {\r\n    private _rawProperties = {};\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        this._rawProperties = AdaptiveCard.enableFullJsonRoundTrip ? json : {};\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result: any;\r\n\r\n        if (AdaptiveCard.enableFullJsonRoundTrip && this._rawProperties && typeof this._rawProperties === \"object\") {\r\n            result = this._rawProperties;\r\n        }\r\n        else {\r\n            result = {};\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    setCustomProperty(name: string, value: any) {\r\n        let shouldDeleteProperty = (typeof value === \"string\" && Utils.isNullOrEmpty(value)) || value === undefined || value === null;\r\n\r\n        if (shouldDeleteProperty) {\r\n            delete this._rawProperties[name];\r\n        }\r\n        else {\r\n            this._rawProperties[name] = value;\r\n        }\r\n    }\r\n\r\n    getCustomProperty(name: string): any {\r\n        return this._rawProperties[name];\r\n    }\r\n}\r\n\r\nexport class ValidationFailure {\r\n    readonly errors: HostConfig.IValidationError[] = [];\r\n\r\n    constructor(readonly cardObject: CardObject) { }\r\n}\r\n\r\nexport class ValidationResults {\r\n    private getFailureIndex(cardObject: CardObject) {\r\n        for (let i = 0; i < this.failures.length; i++) {\r\n            if (this.failures[i].cardObject === cardObject) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    readonly allIds: Shared.Dictionary<number> = {};\r\n    readonly failures: ValidationFailure[] = [];\r\n\r\n    addFailure(cardObject: CardObject, error: HostConfig.IValidationError) {\r\n        let index = this.getFailureIndex(cardObject);\r\n        let failure: ValidationFailure;\r\n\r\n        if (index < 0) {\r\n            failure = new ValidationFailure(cardObject);\r\n\r\n            this.failures.push(failure);\r\n        }\r\n        else {\r\n            failure = this.failures[index];\r\n        }\r\n\r\n        failure.errors.push(error);\r\n    }\r\n}\r\n\r\nexport abstract class CardObject extends SerializableObject {\r\n    abstract getJsonTypeName(): string;\r\n    abstract shouldFallback(): boolean;\r\n    abstract setParent(parent: CardElement);\r\n\r\n    id: string;\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        if (!Utils.isNullOrEmpty(this.id)) {\r\n            if (context.allIds.hasOwnProperty(this.id)) {\r\n                if (context.allIds[this.id] == 1) {\r\n                    context.addFailure(\r\n                        this,\r\n                        {\r\n                            error: Enums.ValidationError.DuplicateId,\r\n                            message: \"Duplicate Id: \" + this.id\r\n                        });\r\n                }\r\n\r\n                context.allIds[this.id] += 1;\r\n            }\r\n            else {\r\n                context.allIds[this.id] = 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.id = Utils.getStringValue(json[\"id\"]);\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"type\", this.getJsonTypeName());\r\n        Utils.setProperty(result, \"id\", this.id);\r\n\r\n        return result;\r\n    }\r\n\r\n    validateProperties(): ValidationResults {\r\n        let result = new ValidationResults();\r\n\r\n        this.internalValidateProperties(result);\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nexport type CardElementHeight = \"auto\" | \"stretch\";\r\n\r\nexport abstract class CardElement extends CardObject {\r\n    private _shouldFallback: boolean = false;\r\n    private _lang: string = undefined;\r\n    private _hostConfig?: HostConfig.HostConfig = null;\r\n    private _parent: CardElement = null;\r\n    private _renderedElement: HTMLElement = null;\r\n    private _separatorElement: HTMLElement = null;\r\n    private _isVisible: boolean = true;\r\n    private _truncatedDueToOverflow: boolean = false;\r\n    private _defaultRenderedElementDisplayMode: string = null;\r\n    private _padding: Shared.PaddingDefinition = null;\r\n\r\n    private internalRenderSeparator(): HTMLElement {\r\n        let renderedSeparator = Utils.renderSeparation(\r\n            this.hostConfig,\r\n            {\r\n                spacing: this.hostConfig.getEffectiveSpacing(this.spacing),\r\n                lineThickness: this.separator ? this.hostConfig.separator.lineThickness : null,\r\n                lineColor: this.separator ? this.hostConfig.separator.lineColor : null\r\n            },\r\n            this.separatorOrientation);\r\n\r\n            if (AdaptiveCard.alwaysBleedSeparators && renderedSeparator && this.separatorOrientation == Enums.Orientation.Horizontal) {\r\n                // Adjust separator's margins if the option to always bleed separators is turned on\r\n                let parentContainer = this.getParentContainer();\r\n\r\n                if (parentContainer && parentContainer.getEffectivePadding()) {\r\n                    let parentPhysicalPadding = this.hostConfig.paddingDefinitionToSpacingDefinition(parentContainer.getEffectivePadding());\r\n\r\n                    renderedSeparator.style.marginLeft = \"-\" + parentPhysicalPadding.left + \"px\";\r\n                    renderedSeparator.style.marginRight = \"-\" + parentPhysicalPadding.right + \"px\";\r\n                }\r\n            }\r\n\r\n            return renderedSeparator;\r\n    }\r\n\r\n    private updateRenderedElementVisibility() {\r\n        let displayMode = this.isDesignMode() || this.isVisible ? this._defaultRenderedElementDisplayMode : \"none\";\r\n\r\n        if (this._renderedElement) {\r\n            this._renderedElement.style.display = displayMode;\r\n        }\r\n\r\n        if (this._separatorElement) {\r\n            if (this.parent && this.parent.isFirstElement(this)) {\r\n                this._separatorElement.style.display = \"none\";\r\n            }\r\n            else {\r\n                this._separatorElement.style.display = displayMode;\r\n            }\r\n        }\r\n    }\r\n\r\n    private hideElementDueToOverflow() {\r\n        if (this._renderedElement && this.isVisible) {\r\n            this._renderedElement.style.visibility = 'hidden';\r\n            this.isVisible = false;\r\n            raiseElementVisibilityChangedEvent(this, false);\r\n        }\r\n    }\r\n\r\n    private showElementHiddenDueToOverflow() {\r\n        if (this._renderedElement && !this.isVisible) {\r\n            this._renderedElement.style.visibility = null;\r\n            this.isVisible = true;\r\n            raiseElementVisibilityChangedEvent(this, false);\r\n        }\r\n    }\r\n\r\n    // Marked private to emulate internal access\r\n    private handleOverflow(maxHeight: number) {\r\n        if (this.isVisible || this.isHiddenDueToOverflow()) {\r\n            var handled = this.truncateOverflow(maxHeight);\r\n\r\n            // Even if we were unable to truncate the element to fit this time,\r\n            // it still could have been previously truncated\r\n            this._truncatedDueToOverflow = handled || this._truncatedDueToOverflow;\r\n\r\n            if (!handled) {\r\n                this.hideElementDueToOverflow();\r\n            }\r\n            else if (handled && !this.isVisible) {\r\n                this.showElementHiddenDueToOverflow();\r\n            }\r\n        }\r\n    }\r\n\r\n    // Marked private to emulate internal access\r\n    private resetOverflow(): boolean {\r\n        var sizeChanged = false;\r\n\r\n        if (this._truncatedDueToOverflow) {\r\n            this.undoOverflowTruncation();\r\n            this._truncatedDueToOverflow = false;\r\n            sizeChanged = true;\r\n        }\r\n\r\n        if (this.isHiddenDueToOverflow) {\r\n            this.showElementHiddenDueToOverflow();\r\n        }\r\n\r\n        return sizeChanged;\r\n    }\r\n\r\n    protected createPlaceholderElement(): HTMLElement {\r\n        var element = document.createElement(\"div\");\r\n        element.style.border = \"1px dashed #DDDDDD\";\r\n        element.style.padding = \"4px\";\r\n        element.style.minHeight = \"32px\";\r\n        element.style.fontSize = \"10px\";\r\n        element.innerText = \"Empty \" + this.getJsonTypeName();\r\n\r\n        return element;\r\n    }\r\n\r\n    protected adjustRenderedElementSize(renderedElement: HTMLElement) {\r\n        if (this.height === \"auto\") {\r\n            renderedElement.style.flex = \"0 0 auto\";\r\n        }\r\n        else {\r\n            renderedElement.style.flex = \"1 1 auto\";\r\n        }\r\n\r\n        if (this.minPixelHeight) {\r\n            renderedElement.style.minHeight = this.minPixelHeight + \"px\";\r\n        }\r\n    }\r\n\r\n    protected abstract internalRender(): HTMLElement;\r\n\r\n    protected overrideInternalRender(): HTMLElement {\r\n        return this.internalRender();\r\n    }\r\n\r\n    protected applyPadding() {\r\n        if (this.separatorElement) {\r\n            if (AdaptiveCard.alwaysBleedSeparators && this.separatorOrientation == Enums.Orientation.Horizontal && !this.isBleeding()) {\r\n                let padding = new Shared.PaddingDefinition();\r\n\r\n                this.getImmediateSurroundingPadding(padding);\r\n\r\n                let physicalPadding = this.hostConfig.paddingDefinitionToSpacingDefinition(padding);\r\n\r\n                this.separatorElement.style.marginLeft = \"-\" + physicalPadding.left + \"px\";\r\n                this.separatorElement.style.marginRight = \"-\" + physicalPadding.right + \"px\";\r\n            }\r\n            else {\r\n                this.separatorElement.style.marginRight = \"0\";\r\n                this.separatorElement.style.marginLeft = \"0\";\r\n            }\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Called when this element overflows the bottom of the card.\r\n     * maxHeight will be the amount of space still available on the card (0 if\r\n     * the element is fully off the card).\r\n     */\r\n    protected truncateOverflow(maxHeight: number): boolean {\r\n        // Child implementations should return true if the element handled\r\n        // the truncation request such that its content fits within maxHeight,\r\n        // false if the element should fall back to being hidden\r\n        return false;\r\n    }\r\n\r\n    /*\r\n     * This should reverse any changes performed in truncateOverflow().\r\n     */\r\n    protected undoOverflowTruncation() { }\r\n\r\n    protected getDefaultPadding(): Shared.PaddingDefinition {\r\n        return new Shared.PaddingDefinition();\r\n    }\r\n\r\n    protected getHasBackground(): boolean {\r\n        return false;\r\n    }\r\n\r\n    protected getPadding(): Shared.PaddingDefinition {\r\n        return this._padding;\r\n    }\r\n\r\n    protected setPadding(value: Shared.PaddingDefinition) {\r\n        this._padding = value;\r\n    }\r\n\r\n    protected get supportsMinHeight(): boolean {\r\n        return false;\r\n    }\r\n\r\n    protected get useDefaultSizing(): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected get allowCustomPadding(): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected get separatorOrientation(): Enums.Orientation {\r\n        return Enums.Orientation.Horizontal;\r\n    }\r\n\r\n    protected get defaultStyle(): string {\r\n        return Enums.ContainerStyle.Default;\r\n    }\r\n\r\n    readonly requires = new HostConfig.HostCapabilities();\r\n\r\n    horizontalAlignment?: Enums.HorizontalAlignment = null;\r\n    spacing: Enums.Spacing = Enums.Spacing.Default;\r\n    separator: boolean = false;\r\n    customCssSelector: string = null;\r\n    height: CardElementHeight = \"auto\";\r\n    minPixelHeight?: number = null;\r\n\r\n    abstract getJsonTypeName(): string;\r\n\r\n    asString(): string {\r\n        return \"\";\r\n    }\r\n\r\n    isBleeding(): boolean {\r\n        return false;\r\n    }\r\n\r\n\ttoJSON(): any {\r\n\t\tlet result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"isVisible\", this.isVisible, true);\r\n\r\n        if (this.horizontalAlignment !== null) {\r\n            Utils.setEnumProperty(Enums.HorizontalAlignment, result, \"horizontalAlignment\", this.horizontalAlignment);\r\n        }\r\n\r\n        Utils.setEnumProperty(Enums.Spacing, result, \"spacing\", this.spacing, Enums.Spacing.Default);\r\n        Utils.setProperty(result, \"separator\", this.separator, false);\r\n        Utils.setProperty(result, \"height\", this.height, \"auto\");\r\n\r\n        if (this.supportsMinHeight) {\r\n            Utils.setProperty(result, \"minHeight\", typeof this.minPixelHeight === \"number\" && !isNaN(this.minPixelHeight) ? this.minPixelHeight + \"px\" : undefined);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    setParent(value: CardElement) {\r\n        this._parent = value;\r\n    }\r\n\r\n    getEffectiveStyle(): string {\r\n        if (this.parent) {\r\n            return this.parent.getEffectiveStyle();\r\n        }\r\n\r\n        return this.defaultStyle;\r\n    }\r\n\r\n    getForbiddenElementTypes(): Array<string> {\r\n        return null;\r\n    }\r\n\r\n    getForbiddenActionTypes(): Array<any> {\r\n        return null;\r\n    }\r\n\r\n    getImmediateSurroundingPadding(\r\n        result: Shared.PaddingDefinition,\r\n        processTop: boolean = true,\r\n        processRight: boolean = true,\r\n        processBottom: boolean = true,\r\n        processLeft: boolean = true) {\r\n        if (this.parent) {\r\n            let doProcessTop = processTop && this.parent.isTopElement(this);\r\n            let doProcessRight = processRight && this.parent.isRightMostElement(this);\r\n            let doProcessBottom = processBottom && this.parent.isBottomElement(this);\r\n            let doProcessLeft = processLeft && this.parent.isLeftMostElement(this);\r\n\r\n            let effectivePadding = this.parent.getEffectivePadding();\r\n\r\n            if (effectivePadding) {\r\n                if (doProcessTop && effectivePadding.top != Enums.Spacing.None) {\r\n                    result.top = effectivePadding.top;\r\n\r\n                    doProcessTop = false;\r\n                }\r\n\r\n                if (doProcessRight && effectivePadding.right != Enums.Spacing.None) {\r\n                    result.right = effectivePadding.right;\r\n\r\n                    doProcessRight = false;\r\n                }\r\n\r\n                if (doProcessBottom && effectivePadding.bottom != Enums.Spacing.None) {\r\n                    result.bottom = effectivePadding.bottom;\r\n\r\n                    doProcessBottom = false;\r\n                }\r\n\r\n                if (doProcessLeft && effectivePadding.left != Enums.Spacing.None) {\r\n                    result.left = effectivePadding.left;\r\n\r\n                    doProcessLeft = false;\r\n                }\r\n            }\r\n\r\n            if (doProcessTop || doProcessRight || doProcessBottom || doProcessLeft) {\r\n                this.parent.getImmediateSurroundingPadding(\r\n                    result,\r\n                    doProcessTop,\r\n                    doProcessRight,\r\n                    doProcessBottom,\r\n                    doProcessLeft);\r\n            }\r\n        }\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n\t\tsuper.parse(json, errors);\r\n\r\n        raiseParseElementEvent(this, json, errors);\r\n\r\n        this.requires.parse(json[\"requires\"], errors);\r\n        this.isVisible = Utils.getBoolValue(json[\"isVisible\"], this.isVisible);\r\n        this.horizontalAlignment = Utils.getEnumValue(Enums.HorizontalAlignment, json[\"horizontalAlignment\"], this.horizontalAlignment);\r\n\r\n        this.spacing = Utils.getEnumValue(Enums.Spacing, json[\"spacing\"], Enums.Spacing.Default);\r\n        this.separator = Utils.getBoolValue(json[\"separator\"], this.separator);\r\n\r\n        let jsonSeparation = json[\"separation\"];\r\n\r\n        if (jsonSeparation !== undefined) {\r\n            if (jsonSeparation === \"none\") {\r\n                this.spacing = Enums.Spacing.None;\r\n                this.separator = false;\r\n            }\r\n            else if (jsonSeparation === \"strong\") {\r\n                this.spacing = Enums.Spacing.Large;\r\n                this.separator = true;\r\n            }\r\n            else if (jsonSeparation === \"default\") {\r\n                this.spacing = Enums.Spacing.Default;\r\n                this.separator = false;\r\n            }\r\n\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.Deprecated,\r\n                    message: \"The \\\"separation\\\" property is deprecated and will be removed. Use the \\\"spacing\\\" and \\\"separator\\\" properties instead.\"\r\n                },\r\n                errors\r\n            );\r\n        }\r\n\r\n        let jsonHeight = json[\"height\"];\r\n\r\n        if (jsonHeight === \"auto\" || jsonHeight === \"stretch\") {\r\n            this.height = jsonHeight;\r\n        }\r\n\r\n        if (this.supportsMinHeight) {\r\n            let jsonMinHeight = json[\"minHeight\"];\r\n\r\n            if (jsonMinHeight && typeof jsonMinHeight === \"string\") {\r\n                let isValid = false;\r\n\r\n                try {\r\n                    let size = Shared.SizeAndUnit.parse(jsonMinHeight, true);\r\n\r\n                    if (size.unit == Enums.SizeUnit.Pixel) {\r\n                        this.minPixelHeight = size.physicalSize;\r\n\r\n                        isValid = true;\r\n                    }\r\n                }\r\n                catch {\r\n                    // Do nothing. A parse error is emitted below\r\n                }\r\n\r\n                if (!isValid) {\r\n                    raiseParseError(\r\n                        {\r\n                            error: Enums.ValidationError.InvalidPropertyValue,\r\n                            message: \"Invalid \\\"minHeight\\\" value: \" + jsonMinHeight\r\n                        },\r\n                        errors\r\n                    );\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.minPixelHeight = null;\r\n        }\r\n    }\r\n\r\n    getActionCount(): number {\r\n        return 0;\r\n    }\r\n\r\n    getActionAt(index: number): Action {\r\n        throw new Error(\"Index out of range.\");\r\n    }\r\n\r\n    remove(): boolean {\r\n        if (this.parent && this.parent instanceof CardElementContainer) {\r\n            return this.parent.removeItem(this);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    render(): HTMLElement {\r\n        this._renderedElement = this.overrideInternalRender();\r\n        this._separatorElement = this.internalRenderSeparator();\r\n\r\n        if (this._renderedElement) {\r\n            if (this.customCssSelector) {\r\n                this._renderedElement.classList.add(this.customCssSelector);\r\n            }\r\n\r\n            this._renderedElement.style.boxSizing = \"border-box\";\r\n            this._defaultRenderedElementDisplayMode = this._renderedElement.style.display;\r\n\r\n            this.adjustRenderedElementSize(this._renderedElement);\r\n            this.updateLayout(false);\r\n        }\r\n        else if (this.isDesignMode()) {\r\n            this._renderedElement = this.createPlaceholderElement();\r\n        }\r\n\r\n        return this._renderedElement;\r\n    }\r\n\r\n    updateLayout(processChildren: boolean = true) {\r\n        this.updateRenderedElementVisibility();\r\n        this.applyPadding();\r\n    }\r\n\r\n    indexOf(cardElement: CardElement): number {\r\n        return -1;\r\n    }\r\n\r\n    isDesignMode(): boolean {\r\n        var rootElement = this.getRootElement();\r\n\r\n        return rootElement instanceof AdaptiveCard && rootElement.designMode;\r\n    }\r\n\r\n    isRendered(): boolean {\r\n        return this._renderedElement && this._renderedElement.offsetHeight > 0;\r\n    }\r\n\r\n    isFirstElement(element: CardElement): boolean {\r\n        return true;\r\n    }\r\n\r\n    isLastElement(element: CardElement): boolean {\r\n        return true;\r\n    }\r\n\r\n    isAtTheVeryLeft(): boolean {\r\n        return this.parent ? this.parent.isLeftMostElement(this) && this.parent.isAtTheVeryLeft() : true;\r\n    }\r\n\r\n    isAtTheVeryRight(): boolean {\r\n        return this.parent ? this.parent.isRightMostElement(this) && this.parent.isAtTheVeryRight() : true;\r\n    }\r\n\r\n    isAtTheVeryTop(): boolean {\r\n        return this.parent ? this.parent.isFirstElement(this) && this.parent.isAtTheVeryTop() : true;\r\n    }\r\n\r\n    isAtTheVeryBottom(): boolean {\r\n        return this.parent ? this.parent.isLastElement(this) && this.parent.isAtTheVeryBottom() : true;\r\n    }\r\n\r\n    isBleedingAtTop(): boolean {\r\n        return false;\r\n    }\r\n\r\n    isBleedingAtBottom(): boolean {\r\n        return false;\r\n    }\r\n\r\n    isLeftMostElement(element: CardElement): boolean {\r\n        return true;\r\n    }\r\n\r\n    isRightMostElement(element: CardElement): boolean {\r\n        return true;\r\n    }\r\n\r\n    isTopElement(element: CardElement): boolean {\r\n        return this.isFirstElement(element);\r\n    }\r\n\r\n    isBottomElement(element: CardElement): boolean {\r\n        return this.isLastElement(element);\r\n    }\r\n\r\n    isHiddenDueToOverflow(): boolean {\r\n        return this._renderedElement && this._renderedElement.style.visibility == 'hidden';\r\n    }\r\n\r\n    getRootElement(): CardElement {\r\n        var rootElement: CardElement = this;\r\n\r\n        while (rootElement.parent) {\r\n            rootElement = rootElement.parent;\r\n        }\r\n\r\n        return rootElement;\r\n    }\r\n\r\n    getParentContainer(): Container {\r\n        var currentElement: CardElement = this.parent;\r\n\r\n        while (currentElement) {\r\n            if (currentElement instanceof Container) {\r\n                return <Container>currentElement;\r\n            }\r\n\r\n            currentElement = currentElement.parent;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        return [];\r\n    }\r\n\r\n    getResourceInformation(): Array<Shared.IResourceInformation> {\r\n        return [];\r\n    }\r\n\r\n    getElementById(id: string): CardElement {\r\n        return this.id === id ? this : null;\r\n    }\r\n\r\n    getActionById(id: string): Action {\r\n        return null;\r\n    }\r\n\r\n    shouldFallback(): boolean {\r\n        return this._shouldFallback || !this.requires.areAllMet(this.hostConfig.hostCapabilities);\r\n    }\r\n\r\n    setShouldFallback(value: boolean) {\r\n        this._shouldFallback = value;\r\n    }\r\n\r\n    getEffectivePadding(): Shared.PaddingDefinition {\r\n        let padding = this.getPadding();\r\n\r\n        return (padding && this.allowCustomPadding) ? padding : this.getDefaultPadding();\r\n    }\r\n\r\n    get lang(): string {\r\n        if (this._lang) {\r\n            return this._lang;\r\n        }\r\n        else {\r\n            if (this.parent) {\r\n                return this.parent.lang;\r\n            }\r\n            else {\r\n                return undefined;\r\n            }\r\n        }\r\n    }\r\n\r\n    set lang(value: string) {\r\n        if (value && value != \"\") {\r\n            var regEx = /^[a-z]{2,3}$/ig;\r\n\r\n            var matches = regEx.exec(value);\r\n\r\n            if (!matches) {\r\n                throw new Error(\"Invalid language identifier: \" + value);\r\n            }\r\n        }\r\n\r\n        this._lang = value;\r\n    }\r\n\r\n    get hostConfig(): HostConfig.HostConfig {\r\n        if (this._hostConfig) {\r\n            return this._hostConfig;\r\n        }\r\n        else {\r\n            if (this.parent) {\r\n                return this.parent.hostConfig;\r\n            }\r\n            else {\r\n                return defaultHostConfig;\r\n            }\r\n        }\r\n    }\r\n\r\n    set hostConfig(value: HostConfig.HostConfig) {\r\n        this._hostConfig = value;\r\n    }\r\n\r\n    get index(): number {\r\n        if (this.parent) {\r\n            return this.parent.indexOf(this);\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    get isInteractive(): boolean {\r\n        return false;\r\n    }\r\n\r\n    get isStandalone(): boolean {\r\n        return true;\r\n    }\r\n\r\n    get isInline(): boolean {\r\n        return false;\r\n    }\r\n\r\n    get parent(): CardElement {\r\n        return this._parent;\r\n    }\r\n\r\n    get isVisible(): boolean {\r\n        return this._isVisible;\r\n    }\r\n\r\n    get hasVisibleSeparator(): boolean {\r\n        if (this.parent && this.separatorElement) {\r\n            return !this.parent.isFirstElement(this) && (this.isVisible || this.isDesignMode());\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    set isVisible(value: boolean) {\r\n        // If the element is going to be hidden, reset any changes that were due\r\n        // to overflow truncation (this ensures that if the element is later\r\n        // un-hidden it has the right content)\r\n        if (AdaptiveCard.useAdvancedCardBottomTruncation && !value) {\r\n            this.undoOverflowTruncation();\r\n        }\r\n\r\n        if (this._isVisible != value) {\r\n            this._isVisible = value;\r\n\r\n            this.updateRenderedElementVisibility();\r\n\r\n            if (this._renderedElement) {\r\n                raiseElementVisibilityChangedEvent(this);\r\n            }\r\n        }\r\n    }\r\n\r\n    get renderedElement(): HTMLElement {\r\n        return this._renderedElement;\r\n    }\r\n\r\n    get separatorElement(): HTMLElement {\r\n        return this._separatorElement;\r\n    }\r\n}\r\n\r\nexport abstract class BaseTextBlock extends CardElement {\r\n    private _text: string;\r\n    private _selectAction: Action = null;\r\n\r\n    protected getEffectiveStyleDefinition() {\r\n        return this.hostConfig.containerStyles.getStyleByName(this.getEffectiveStyle());\r\n    }\r\n\r\n    protected getFontSize(fontType: HostConfig.FontTypeDefinition): number {\r\n        switch (this.size) {\r\n            case Enums.TextSize.Small:\r\n                return fontType.fontSizes.small;\r\n            case Enums.TextSize.Medium:\r\n                return fontType.fontSizes.medium;\r\n            case Enums.TextSize.Large:\r\n                return fontType.fontSizes.large;\r\n            case Enums.TextSize.ExtraLarge:\r\n                return fontType.fontSizes.extraLarge;\r\n            default:\r\n                return fontType.fontSizes.default;\r\n        }\r\n    }\r\n\r\n    protected getColorDefinition(colorSet: HostConfig.ColorSetDefinition, color: Enums.TextColor): HostConfig.TextColorDefinition {\r\n        switch (color) {\r\n            case Enums.TextColor.Accent:\r\n                return colorSet.accent;\r\n            case Enums.TextColor.Dark:\r\n                return colorSet.dark;\r\n            case Enums.TextColor.Light:\r\n                return colorSet.light;\r\n            case Enums.TextColor.Good:\r\n                return colorSet.good;\r\n            case Enums.TextColor.Warning:\r\n                return colorSet.warning;\r\n            case Enums.TextColor.Attention:\r\n                return colorSet.attention;\r\n            default:\r\n                return colorSet.default;\r\n        }\r\n    }\r\n\r\n    protected setText(value: string) {\r\n        this._text = value;\r\n    }\r\n\r\n    size: Enums.TextSize = Enums.TextSize.Default;\r\n    weight: Enums.TextWeight = Enums.TextWeight.Default;\r\n    color: Enums.TextColor = Enums.TextColor.Default;\r\n    isSubtle: boolean = false;\r\n    fontType?: Enums.FontType = null;\r\n\r\n    asString(): string {\r\n        return this.text;\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setEnumProperty(Enums.TextSize, result, \"size\", this.size, Enums.TextSize.Default);\r\n        Utils.setEnumProperty(Enums.TextWeight, result, \"weight\", this.weight, Enums.TextWeight.Default);\r\n        Utils.setEnumProperty(Enums.TextColor, result, \"color\", this.color, Enums.TextColor.Default);\r\n        Utils.setProperty(result, \"text\", this.text);\r\n        Utils.setProperty(result, \"isSubtle\", this.isSubtle, false);\r\n        Utils.setEnumProperty(Enums.FontType, result, \"fontType\", this.fontType, Enums.FontType.Default);\r\n\r\n        return result;\r\n    }\r\n\r\n    applyStylesTo(targetElement: HTMLElement) {\r\n        let fontType = this.hostConfig.getFontTypeDefinition(this.fontType);\r\n\r\n        if (fontType.fontFamily) {\r\n            targetElement.style.fontFamily = fontType.fontFamily;\r\n        }\r\n\r\n        let fontSize: number;\r\n\r\n        switch (this.size) {\r\n            case Enums.TextSize.Small:\r\n                fontSize = fontType.fontSizes.small;\r\n                break;\r\n            case Enums.TextSize.Medium:\r\n                fontSize = fontType.fontSizes.medium;\r\n                break;\r\n            case Enums.TextSize.Large:\r\n                fontSize = fontType.fontSizes.large;\r\n                break;\r\n            case Enums.TextSize.ExtraLarge:\r\n                fontSize = fontType.fontSizes.extraLarge;\r\n                break;\r\n            default:\r\n                fontSize = fontType.fontSizes.default;\r\n                break;\r\n        }\r\n\r\n        targetElement.style.fontSize = fontSize + \"px\";\r\n\r\n        let colorDefinition = this.getColorDefinition(this.getEffectiveStyleDefinition().foregroundColors, this.effectiveColor);\r\n\r\n        targetElement.style.color = Utils.stringToCssColor(this.isSubtle ? colorDefinition.subtle : colorDefinition.default);\r\n\r\n        let fontWeight: number;\r\n\r\n        switch (this.weight) {\r\n            case Enums.TextWeight.Lighter:\r\n                fontWeight = fontType.fontWeights.lighter;\r\n                break;\r\n            case Enums.TextWeight.Bolder:\r\n                fontWeight = fontType.fontWeights.bolder;\r\n                break;\r\n            default:\r\n                fontWeight = fontType.fontWeights.default;\r\n                break;\r\n        }\r\n\r\n        targetElement.style.fontWeight = fontWeight.toString();\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.text = Utils.getStringValue(json[\"text\"]);\r\n\r\n        let sizeString = Utils.getStringValue(json[\"size\"]);\r\n\r\n        if (sizeString && sizeString.toLowerCase() === \"normal\") {\r\n            this.size = Enums.TextSize.Default;\r\n\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.Deprecated,\r\n                    message: \"The TextBlock.size value \\\"normal\\\" is deprecated and will be removed. Use \\\"default\\\" instead.\"\r\n                },\r\n                errors\r\n            );\r\n        }\r\n        else {\r\n            this.size = Utils.getEnumValue(Enums.TextSize, sizeString, this.size);\r\n        }\r\n\r\n        let weightString = Utils.getStringValue(json[\"weight\"]);\r\n\r\n        if (weightString && weightString.toLowerCase() === \"normal\") {\r\n            this.weight = Enums.TextWeight.Default;\r\n\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.Deprecated,\r\n                    message: \"The TextBlock.weight value \\\"normal\\\" is deprecated and will be removed. Use \\\"default\\\" instead.\"\r\n                },\r\n                errors\r\n            );\r\n        }\r\n        else {\r\n            this.weight = Utils.getEnumValue(Enums.TextWeight, weightString, this.weight);\r\n        }\r\n\r\n        this.color = Utils.getEnumValue(Enums.TextColor, json[\"color\"], this.color);\r\n        this.isSubtle = Utils.getBoolValue(json[\"isSubtle\"], this.isSubtle);\r\n        this.fontType = Utils.getEnumValue(Enums.FontType, json[\"fontType\"], this.fontType);\r\n    }\r\n\r\n    get effectiveColor(): Enums.TextColor {\r\n        return this.color ? this.color : Enums.TextColor.Default;\r\n    }\r\n\r\n    get text(): string {\r\n        return this._text;\r\n    }\r\n\r\n    set text(value: string) {\r\n        this.setText(value);\r\n    }\r\n\r\n    get selectAction(): Action {\r\n        return this._selectAction;\r\n    }\r\n\r\n    set selectAction(value: Action) {\r\n        this._selectAction = value;\r\n\r\n        if (this._selectAction) {\r\n            this._selectAction.setParent(this);\r\n        }\r\n    }\r\n}\r\n\r\nexport class TextBlock extends BaseTextBlock {\r\n    private _computedLineHeight: number;\r\n    private _originalInnerHtml: string;\r\n    private _processedText: string = null;\r\n    private _treatAsPlainText: boolean = true;\r\n\r\n    private restoreOriginalContent() {\r\n        var maxHeight = this.maxLines\r\n            ? (this._computedLineHeight * this.maxLines) + 'px'\r\n            : null;\r\n\r\n        this.renderedElement.style.maxHeight = maxHeight;\r\n        this.renderedElement.innerHTML = this._originalInnerHtml;\r\n    }\r\n\r\n    private truncateIfSupported(maxHeight: number): boolean {\r\n        // For now, only truncate TextBlocks that contain just a single\r\n        // paragraph -- since the maxLines calculation doesn't take into\r\n        // account Markdown lists\r\n        var children = this.renderedElement.children;\r\n        var isTextOnly = !children.length;\r\n\r\n        var truncationSupported = isTextOnly || children.length == 1\r\n            && (<HTMLElement>children[0]).tagName.toLowerCase() == 'p';\r\n\r\n        if (truncationSupported) {\r\n            var element = isTextOnly\r\n                ? this.renderedElement\r\n                : <HTMLElement>children[0];\r\n\r\n            Utils.truncate(element, maxHeight, this._computedLineHeight);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    protected setText(value: string) {\r\n        super.setText(value);\r\n\r\n        this._processedText = null;\r\n    }\r\n\r\n    protected getRenderedDomElementType(): string {\r\n        return \"div\";\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        this._processedText = null;\r\n\r\n        if (!Utils.isNullOrEmpty(this.text)) {\r\n            let hostConfig = this.hostConfig;\r\n\r\n            let element = document.createElement(this.getRenderedDomElementType());\r\n            element.classList.add(hostConfig.makeCssClassName(\"ac-textBlock\"));\r\n            element.style.overflow = \"hidden\";\r\n\r\n            this.applyStylesTo(element);\r\n\r\n            if (this.selectAction) {\r\n                element.onclick = (e) => {\r\n                    e.preventDefault();\r\n                    e.cancelBubble = true;\r\n\r\n                    this.selectAction.execute();\r\n                }\r\n\r\n                if (hostConfig.supportsInteractivity) {\r\n                    element.tabIndex = 0\r\n                    element.setAttribute(\"role\", this.selectAction.getAriaRole());\r\n                    element.setAttribute(\"aria-label\", this.selectAction.title);\r\n                    element.classList.add(hostConfig.makeCssClassName(\"ac-selectable\"));\r\n                }\r\n            }\r\n\r\n            if (!this._processedText) {\r\n                this._treatAsPlainText = true;\r\n\r\n                let formattedText = TextFormatters.formatText(this.lang, this.text);\r\n\r\n                if (this.useMarkdown) {\r\n                    if (AdaptiveCard.allowMarkForTextHighlighting) {\r\n                        formattedText = formattedText.replace(/<mark>/g, \"===\").replace(/<\\/mark>/g, \"/==\");\r\n                    }\r\n\r\n                    let markdownProcessingResult = AdaptiveCard.applyMarkdown(formattedText);\r\n\r\n                    if (markdownProcessingResult.didProcess && markdownProcessingResult.outputHtml) {\r\n                        this._processedText = markdownProcessingResult.outputHtml;\r\n                        this._treatAsPlainText = false;\r\n\r\n                        // Only process <mark> tag if markdown processing was applied because\r\n                        // markdown processing is also responsible for sanitizing the input string\r\n                        if (AdaptiveCard.allowMarkForTextHighlighting) {\r\n                            let markStyle: string = \"\";\r\n                            let effectiveStyle = this.getEffectiveStyleDefinition();\r\n\r\n                            if (effectiveStyle.highlightBackgroundColor) {\r\n                                markStyle += \"background-color: \" + effectiveStyle.highlightBackgroundColor + \";\";\r\n                            }\r\n\r\n                            if (effectiveStyle.highlightForegroundColor) {\r\n                                markStyle += \"color: \" + effectiveStyle.highlightForegroundColor + \";\";\r\n                            }\r\n\r\n                            if (!Utils.isNullOrEmpty(markStyle)) {\r\n                                markStyle = 'style=\"' + markStyle + '\"';\r\n                            }\r\n\r\n                            this._processedText = this._processedText.replace(/===/g, \"<mark \" + markStyle + \">\").replace(/\\/==/g, \"</mark>\");\r\n                        }\r\n                    } else {\r\n                        this._processedText = formattedText;\r\n                        this._treatAsPlainText = true;\r\n                    }\r\n                }\r\n                else {\r\n                    this._processedText = formattedText;\r\n                    this._treatAsPlainText = true;\r\n                }\r\n            }\r\n\r\n            if (this._treatAsPlainText) {\r\n                element.innerText = this._processedText;\r\n            }\r\n            else {\r\n                element.innerHTML = this._processedText;\r\n            }\r\n\r\n            if (element.firstElementChild instanceof HTMLElement) {\r\n                let firstElementChild = <HTMLElement>element.firstElementChild;\r\n                firstElementChild.style.marginTop = \"0px\";\r\n                firstElementChild.style.width = \"100%\";\r\n\r\n                if (!this.wrap) {\r\n                    firstElementChild.style.overflow = \"hidden\";\r\n                    firstElementChild.style.textOverflow = \"ellipsis\";\r\n                }\r\n            }\r\n\r\n            if (element.lastElementChild instanceof HTMLElement) {\r\n                (<HTMLElement>element.lastElementChild).style.marginBottom = \"0px\";\r\n            }\r\n\r\n            let anchors = element.getElementsByTagName(\"a\");\r\n\r\n            for (let i = 0; i < anchors.length; i++) {\r\n                let anchor = <HTMLAnchorElement>anchors[i];\r\n                anchor.classList.add(hostConfig.makeCssClassName(\"ac-anchor\"));\r\n                anchor.target = \"_blank\";\r\n                anchor.onclick = (e) => {\r\n                    if (raiseAnchorClickedEvent(this, e.target as HTMLAnchorElement)) {\r\n                        e.preventDefault();\r\n                        e.cancelBubble = true;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this.wrap) {\r\n                element.style.wordWrap = \"break-word\";\r\n\r\n                if (this.maxLines > 0) {\r\n                    element.style.maxHeight = (this._computedLineHeight * this.maxLines) + \"px\";\r\n                    element.style.overflow = \"hidden\";\r\n                }\r\n            }\r\n            else {\r\n                element.style.whiteSpace = \"nowrap\";\r\n                element.style.textOverflow = \"ellipsis\";\r\n            }\r\n\r\n            if (AdaptiveCard.useAdvancedTextBlockTruncation || AdaptiveCard.useAdvancedCardBottomTruncation) {\r\n                this._originalInnerHtml = element.innerHTML;\r\n            }\r\n\r\n            return element;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    protected truncateOverflow(maxHeight: number): boolean {\r\n        if (maxHeight >= this._computedLineHeight) {\r\n            return this.truncateIfSupported(maxHeight);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    protected undoOverflowTruncation() {\r\n        this.restoreOriginalContent();\r\n\r\n        if (AdaptiveCard.useAdvancedTextBlockTruncation && this.maxLines) {\r\n            var maxHeight = this._computedLineHeight * this.maxLines;\r\n            this.truncateIfSupported(maxHeight);\r\n        }\r\n    }\r\n\r\n    wrap: boolean = false;\r\n    maxLines: number;\r\n    useMarkdown: boolean = true;\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"wrap\", this.wrap, false);\r\n        Utils.setNumberProperty(result, \"maxLines\", this.maxLines);\r\n\r\n        return result;\r\n    }\r\n\r\n    applyStylesTo(targetElement: HTMLElement) {\r\n        super.applyStylesTo(targetElement);\r\n\r\n        let parentContainer = this.getParentContainer();\r\n        let isRtl = parentContainer ? parentContainer.isRtl() : false;\r\n\r\n        switch (this.horizontalAlignment) {\r\n            case Enums.HorizontalAlignment.Center:\r\n                targetElement.style.textAlign = \"center\";\r\n                break;\r\n            case Enums.HorizontalAlignment.Right:\r\n                targetElement.style.textAlign = isRtl ? \"left\" : \"right\";\r\n                break;\r\n            default:\r\n                targetElement.style.textAlign = isRtl ? \"right\" : \"left\";\r\n                break;\r\n        }\r\n\r\n        let lineHeights = this.hostConfig.lineHeights;\r\n\r\n        if (lineHeights) {\r\n            switch (this.size) {\r\n                case Enums.TextSize.Small:\r\n                    this._computedLineHeight = lineHeights.small;\r\n                    break;\r\n                case Enums.TextSize.Medium:\r\n                    this._computedLineHeight = lineHeights.medium;\r\n                    break;\r\n                case Enums.TextSize.Large:\r\n                    this._computedLineHeight = lineHeights.large;\r\n                    break;\r\n                case Enums.TextSize.ExtraLarge:\r\n                    this._computedLineHeight = lineHeights.extraLarge;\r\n                    break;\r\n                default:\r\n                    this._computedLineHeight = lineHeights.default;\r\n                    break;\r\n            }\r\n        }\r\n        else {\r\n            // Looks like 1.33 is the magic number to compute line-height\r\n            // from font size.\r\n            this._computedLineHeight = this.getFontSize(this.hostConfig.getFontTypeDefinition(this.fontType)) * 1.33;\r\n        }\r\n\r\n        targetElement.style.lineHeight = this._computedLineHeight + \"px\";\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.wrap = Utils.getBoolValue(json[\"wrap\"], this.wrap);\r\n        this.maxLines = Utils.getNumberValue(json[\"maxLines\"]);\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"TextBlock\";\r\n    }\r\n\r\n    updateLayout(processChildren: boolean = false) {\r\n        super.updateLayout(processChildren);\r\n\r\n        if (AdaptiveCard.useAdvancedTextBlockTruncation && this.maxLines && this.isRendered()) {\r\n            // Reset the element's innerHTML in case the available room for\r\n            // content has increased\r\n            this.restoreOriginalContent();\r\n            this.truncateIfSupported(this._computedLineHeight * this.maxLines);\r\n        }\r\n    }\r\n}\r\n\r\nclass Label extends TextBlock {\r\n    protected getRenderedDomElementType(): string {\r\n        return \"label\";\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        let renderedElement = <HTMLLabelElement>super.internalRender();\r\n\r\n        if (renderedElement && !Utils.isNullOrEmpty(this.forElementId)) {\r\n            renderedElement.htmlFor = this.forElementId;\r\n        }\r\n\r\n        return renderedElement;\r\n    }\r\n\r\n    forElementId: string;\r\n}\r\n\r\nexport class TextRun extends BaseTextBlock {\r\n    protected internalRender(): HTMLElement {\r\n        if (!Utils.isNullOrEmpty(this.text)) {\r\n            let hostConfig = this.hostConfig;\r\n\r\n            let formattedText = TextFormatters.formatText(this.lang, this.text);\r\n\r\n            let element = document.createElement(\"span\");\r\n            element.classList.add(hostConfig.makeCssClassName(\"ac-textRun\"));\r\n\r\n            this.applyStylesTo(element);\r\n\r\n            if (this.selectAction && hostConfig.supportsInteractivity) {\r\n                let anchor = document.createElement(\"a\");\r\n                anchor.classList.add(hostConfig.makeCssClassName(\"ac-anchor\"));\r\n                anchor.href = this.selectAction.getHref();\r\n                anchor.target = \"_blank\";\r\n                anchor.onclick = (e) => {\r\n                    e.preventDefault();\r\n                    e.cancelBubble = true;\r\n\r\n                    this.selectAction.execute();\r\n                }\r\n\r\n                anchor.innerText = formattedText;\r\n\r\n                element.appendChild(anchor);\r\n            }\r\n            else {\r\n                element.innerText = formattedText;\r\n            }\r\n\r\n            return element;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    italic: boolean = false;\r\n    strikethrough: boolean = false;\r\n    highlight: boolean = false;\r\n\r\n    applyStylesTo(targetElement: HTMLElement) {\r\n        super.applyStylesTo(targetElement);\r\n\r\n        if (this.italic) {\r\n            targetElement.style.fontStyle = \"italic\";\r\n        }\r\n\r\n        if (this.strikethrough) {\r\n            targetElement.style.textDecoration = \"line-through\";\r\n        }\r\n\r\n        if (this.highlight) {\r\n            let colorDefinition = this.getColorDefinition(this.getEffectiveStyleDefinition().foregroundColors, this.effectiveColor);\r\n\r\n            targetElement.style.backgroundColor = Utils.stringToCssColor(this.isSubtle ? colorDefinition.highlightColors.subtle : colorDefinition.highlightColors.default);\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"italic\", this.italic, false);\r\n        Utils.setProperty(result, \"strikethrough\", this.strikethrough, false);\r\n        Utils.setProperty(result, \"highlight\", this.highlight, false);\r\n\r\n        if (this.selectAction) {\r\n            Utils.setProperty(result, \"selectAction\", this.selectAction.toJSON());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.italic = Utils.getBoolValue(json[\"italic\"], this.italic);\r\n        this.strikethrough = Utils.getBoolValue(json[\"strikethrough\"], this.strikethrough);\r\n        this.highlight = Utils.getBoolValue(json[\"highlight\"], this.highlight);\r\n        this.selectAction = createActionInstance(\r\n            this,\r\n            json[\"selectAction\"],\r\n            [ShowCardAction.JsonTypeName],\r\n            !this.isDesignMode(),\r\n            errors);\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"TextRun\";\r\n    }\r\n\r\n    get isStandalone(): boolean {\r\n        return false;\r\n    }\r\n\r\n    get isInline(): boolean {\r\n        return true;\r\n    }\r\n}\r\n\r\nexport class RichTextBlock extends CardElement {\r\n    private _inlines: CardElement[] = [];\r\n\r\n    private internalAddInline(inline: CardElement, forceAdd: boolean = false) {\r\n        if (!inline.isInline) {\r\n            throw new Error(\"RichTextBlock.addInline: the specified card element cannot be used as a RichTextBlock inline.\");\r\n        }\r\n\r\n        let doAdd: boolean = inline.parent == null || forceAdd;\r\n\r\n        if (!doAdd && inline.parent != this) {\r\n            throw new Error(\"RichTextBlock.addInline: the specified inline already belongs to another RichTextBlock.\");\r\n        }\r\n        else {\r\n            inline.setParent(this);\r\n\r\n            this._inlines.push(inline);\r\n        }\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        if (this._inlines.length > 0) {\r\n            let element = document.createElement(\"div\");\r\n            element.className = this.hostConfig.makeCssClassName(\"ac-richTextBlock\");\r\n\r\n            let parentContainer = this.getParentContainer();\r\n            let isRtl = parentContainer ? parentContainer.isRtl() : false;\r\n\r\n            switch (this.horizontalAlignment) {\r\n                case Enums.HorizontalAlignment.Center:\r\n                    element.style.textAlign = \"center\";\r\n                    break;\r\n                case Enums.HorizontalAlignment.Right:\r\n                    element.style.textAlign = isRtl ? \"left\" : \"right\";\r\n                    break;\r\n                default:\r\n                    element.style.textAlign = isRtl ? \"right\" : \"left\";\r\n                    break;\r\n            }\r\n\r\n            let renderedInlines: number = 0;\r\n\r\n            for (let inline of this._inlines) {\r\n                let renderedInline = inline.render();\r\n\r\n                if (renderedInline) {\r\n                    element.appendChild(renderedInline);\r\n\r\n                    renderedInlines++;\r\n                }\r\n            }\r\n\r\n            if (renderedInlines > 0) {\r\n                return element;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    asString(): string {\r\n        let result = \"\";\r\n\r\n        for (let inline of this._inlines) {\r\n            result += inline.asString();\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this._inlines = [];\r\n\r\n        if (Array.isArray(json[\"inlines\"])) {\r\n            for (let jsonInline of json[\"inlines\"]) {\r\n                let inline: CardElement;\r\n\r\n                if (typeof jsonInline === \"string\") {\r\n                    let textRun = new TextRun();\r\n                    textRun.text = jsonInline;\r\n\r\n                    inline = textRun;\r\n                }\r\n                else {\r\n                    inline = createElementInstance(\r\n                        this,\r\n                        jsonInline,\r\n                        false, // No fallback for inlines in 1.2\r\n                        errors);\r\n                }\r\n\r\n                if (inline) {\r\n                    this.internalAddInline(inline, true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        if (this._inlines.length > 0) {\r\n            let jsonInlines: any[] = [];\r\n\r\n            for (let inline of this._inlines) {\r\n                jsonInlines.push(inline.toJSON());\r\n            }\r\n\r\n            Utils.setProperty(result, \"inlines\", jsonInlines);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"RichTextBlock\";\r\n    }\r\n\r\n    getInlineCount(): number {\r\n        return this._inlines.length;\r\n    }\r\n\r\n    getInlineAt(index: number): CardElement {\r\n        if (index >= 0 && index < this._inlines.length) {\r\n            return this._inlines[index];\r\n        }\r\n        else {\r\n            throw new Error(\"RichTextBlock.getInlineAt: Index out of range (\" + index + \")\");\r\n        }\r\n    }\r\n\r\n    addInline(inline: CardElement) {\r\n        this.internalAddInline(inline);\r\n    }\r\n\r\n    removeInline(inline: CardElement): boolean {\r\n        let index = this._inlines.indexOf(inline);\r\n\r\n        if (index >= 0) {\r\n            this._inlines[index].setParent(null);\r\n            this._inlines.splice(index, 1);\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n}\r\n\r\nexport class Fact extends SerializableObject {\r\n    name: string;\r\n    value: string;\r\n\r\n    constructor(name: string = undefined, value: string = undefined) {\r\n        super();\r\n\r\n        this.name = name;\r\n        this.value = value;\r\n    }\r\n\r\n    parse(json: any) {\r\n        super.parse(json);\r\n\r\n        this.name = Utils.getStringValue(json[\"title\"]);\r\n        this.value = Utils.getStringValue(json[\"value\"]);\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"title\", this.name);\r\n        Utils.setProperty(result, \"value\", this.value);\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nexport class FactSet extends CardElement {\r\n    protected get useDefaultSizing(): boolean {\r\n        return false;\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        let element: HTMLElement = null;\r\n        let hostConfig = this.hostConfig;\r\n\r\n        if (this.facts.length > 0) {\r\n            element = document.createElement(\"table\");\r\n            element.style.borderWidth = \"0px\";\r\n            element.style.borderSpacing = \"0px\";\r\n            element.style.borderStyle = \"none\";\r\n            element.style.borderCollapse = \"collapse\";\r\n            element.style.display = \"block\";\r\n            element.style.overflow = \"hidden\";\r\n            element.classList.add(hostConfig.makeCssClassName(\"ac-factset\"));\r\n\r\n            for (let i = 0; i < this.facts.length; i++) {\r\n                let trElement = document.createElement(\"tr\");\r\n\r\n                if (i > 0) {\r\n                    trElement.style.marginTop = hostConfig.factSet.spacing + \"px\";\r\n                }\r\n\r\n                // Title column\r\n                let tdElement = document.createElement(\"td\");\r\n                tdElement.style.padding = \"0\";\r\n                tdElement.classList.add(hostConfig.makeCssClassName(\"ac-fact-title\"));\r\n\r\n                if (hostConfig.factSet.title.maxWidth) {\r\n                    tdElement.style.maxWidth = hostConfig.factSet.title.maxWidth + \"px\";\r\n                }\r\n\r\n                tdElement.style.verticalAlign = \"top\";\r\n\r\n                let textBlock = new TextBlock();\r\n                textBlock.setParent(this);\r\n                textBlock.text = (Utils.isNullOrEmpty(this.facts[i].name) && this.isDesignMode()) ? \"Title\" : this.facts[i].name;\r\n                textBlock.size = hostConfig.factSet.title.size;\r\n                textBlock.color = hostConfig.factSet.title.color;\r\n                textBlock.isSubtle = hostConfig.factSet.title.isSubtle;\r\n                textBlock.weight = hostConfig.factSet.title.weight;\r\n                textBlock.wrap = hostConfig.factSet.title.wrap;\r\n                textBlock.spacing = Enums.Spacing.None;\r\n\r\n                Utils.appendChild(tdElement, textBlock.render());\r\n                Utils.appendChild(trElement, tdElement);\r\n\r\n                // Spacer column\r\n                tdElement = document.createElement(\"td\");\r\n                tdElement.style.width = \"10px\";\r\n\r\n                Utils.appendChild(trElement, tdElement);\r\n\r\n                // Value column\r\n                tdElement = document.createElement(\"td\");\r\n                tdElement.style.padding = \"0\";\r\n                tdElement.style.verticalAlign = \"top\";\r\n                tdElement.classList.add(hostConfig.makeCssClassName(\"ac-fact-value\"));\r\n\r\n                textBlock = new TextBlock();\r\n                textBlock.setParent(this);\r\n                textBlock.text = this.facts[i].value;\r\n                textBlock.size = hostConfig.factSet.value.size;\r\n                textBlock.color = hostConfig.factSet.value.color;\r\n                textBlock.isSubtle = hostConfig.factSet.value.isSubtle;\r\n                textBlock.weight = hostConfig.factSet.value.weight;\r\n                textBlock.wrap = hostConfig.factSet.value.wrap;\r\n                textBlock.spacing = Enums.Spacing.None;\r\n\r\n                Utils.appendChild(tdElement, textBlock.render());\r\n                Utils.appendChild(trElement, tdElement);\r\n                Utils.appendChild(element, trElement);\r\n            }\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    facts: Array<Fact> = [];\r\n\r\n    getJsonTypeName(): string {\r\n        return \"FactSet\";\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setArrayProperty(result, \"facts\", this.facts);\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.facts = [];\r\n\r\n\t\tlet jsonFacts = json[\"facts\"];\r\n\r\n\t\tif (Array.isArray(jsonFacts)) {\r\n\t\t\tfor (let jsonFact of jsonFacts) {\r\n\t\t\t\tlet fact = new Fact();\r\n\t\t\t\tfact.parse(jsonFact);\r\n\r\n\t\t\t\tthis.facts.push(fact);\r\n\t\t\t}\r\n\t\t}\r\n    }\r\n}\r\n\r\nexport class Image extends CardElement {\r\n    private _selectAction: Action;\r\n\r\n    private parseDimension(name: string, value: any, errors: Array<HostConfig.IValidationError>): number {\r\n        if (value) {\r\n            if (typeof value === \"string\") {\r\n                try {\r\n                    let size = Shared.SizeAndUnit.parse(value);\r\n\r\n                    if (size.unit == Enums.SizeUnit.Pixel) {\r\n                        return size.physicalSize;\r\n                    }\r\n                }\r\n                catch {\r\n                    // Ignore error\r\n                }\r\n            }\r\n\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.InvalidPropertyValue,\r\n                    message: \"Invalid image \" + name + \": \" + value\r\n                },\r\n                errors\r\n            );\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    private applySize(element: HTMLElement) {\r\n        if (this.pixelWidth || this.pixelHeight) {\r\n            if (this.pixelWidth) {\r\n                element.style.width = this.pixelWidth + \"px\";\r\n            }\r\n\r\n            if (this.pixelHeight) {\r\n                element.style.height = this.pixelHeight + \"px\";\r\n            }\r\n        }\r\n        else {\r\n            switch (this.size) {\r\n                case Enums.Size.Stretch:\r\n                    element.style.width = \"100%\";\r\n                    break;\r\n                case Enums.Size.Auto:\r\n                    element.style.maxWidth = \"100%\";\r\n                    break;\r\n                case Enums.Size.Small:\r\n                    element.style.width = this.hostConfig.imageSizes.small + \"px\";\r\n                    break;\r\n                case Enums.Size.Large:\r\n                    element.style.width = this.hostConfig.imageSizes.large + \"px\";\r\n                    break;\r\n                case Enums.Size.Medium:\r\n                    element.style.width = this.hostConfig.imageSizes.medium + \"px\";\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    protected get useDefaultSizing() {\r\n        return false;\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        var element: HTMLElement = null;\r\n\r\n        if (!Utils.isNullOrEmpty(this.url)) {\r\n            element = document.createElement(\"div\");\r\n            element.style.display = \"flex\";\r\n            element.style.alignItems = \"flex-start\";\r\n\r\n            element.onkeypress = (e) => {\r\n                if (this.selectAction && (e.keyCode == 13 || e.keyCode == 32)) { // enter or space pressed\r\n                    e.preventDefault();\r\n                    e.cancelBubble = true;\r\n\r\n                    this.selectAction.execute();\r\n                }\r\n            }\r\n\r\n            element.onclick = (e) => {\r\n                if (this.selectAction) {\r\n                    e.preventDefault();\r\n                    e.cancelBubble = true;\r\n\r\n                    this.selectAction.execute();\r\n                }\r\n            }\r\n\r\n            switch (this.horizontalAlignment) {\r\n                case Enums.HorizontalAlignment.Center:\r\n                    element.style.justifyContent = \"center\";\r\n                    break;\r\n                case Enums.HorizontalAlignment.Right:\r\n                    element.style.justifyContent = \"flex-end\";\r\n                    break;\r\n                default:\r\n                    element.style.justifyContent = \"flex-start\";\r\n                    break;\r\n            }\r\n\r\n            // Cache hostConfig to avoid walking the parent hierarchy multiple times\r\n            let hostConfig = this.hostConfig;\r\n\r\n            let imageElement = document.createElement(\"img\");\r\n            imageElement.onload = (e: Event) => {\r\n                raiseImageLoadedEvent(this);\r\n            }\r\n            imageElement.onerror = (e: Event) => {\r\n                let card = this.getRootElement() as AdaptiveCard;\r\n\r\n                this.renderedElement.innerHTML = \"\";\r\n\r\n                if (card && card.designMode) {\r\n                    let errorElement = document.createElement(\"div\");\r\n                    errorElement.style.display = \"flex\";\r\n                    errorElement.style.alignItems = \"center\";\r\n                    errorElement.style.justifyContent = \"center\";\r\n                    errorElement.style.backgroundColor = \"#EEEEEE\";\r\n                    errorElement.style.color = \"black\";\r\n                    errorElement.innerText = \":-(\";\r\n                    errorElement.style.padding = \"10px\";\r\n\r\n                    this.applySize(errorElement);\r\n\r\n                    this.renderedElement.appendChild(errorElement);\r\n                }\r\n\r\n                raiseImageLoadedEvent(this);\r\n            }\r\n            imageElement.style.maxHeight = \"100%\";\r\n            imageElement.style.minWidth = \"0\";\r\n            imageElement.classList.add(hostConfig.makeCssClassName(\"ac-image\"));\r\n\r\n            if (this.selectAction != null && hostConfig.supportsInteractivity) {\r\n                imageElement.tabIndex = 0\r\n                imageElement.setAttribute(\"role\", this.selectAction.getAriaRole());\r\n                imageElement.setAttribute(\"aria-label\", this.selectAction.title);\r\n                imageElement.classList.add(hostConfig.makeCssClassName(\"ac-selectable\"));\r\n            }\r\n\r\n            this.applySize(imageElement);\r\n\r\n            if (this.style === Enums.ImageStyle.Person) {\r\n                imageElement.style.borderRadius = \"50%\";\r\n                imageElement.style.backgroundPosition = \"50% 50%\";\r\n                imageElement.style.backgroundRepeat = \"no-repeat\";\r\n            }\r\n\r\n            if (!Utils.isNullOrEmpty(this.backgroundColor)) {\r\n                imageElement.style.backgroundColor = Utils.stringToCssColor(this.backgroundColor);\r\n            }\r\n\r\n            imageElement.src = this.url;\r\n            if (!Utils.isNullOrEmpty(this.altText)) {\r\n                imageElement.alt = this.altText;\r\n            }\r\n\r\n            element.appendChild(imageElement);\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    style: Enums.ImageStyle = Enums.ImageStyle.Default;\r\n    backgroundColor: string;\r\n    url: string;\r\n    size: Enums.Size = Enums.Size.Auto;\r\n    width: Shared.SizeAndUnit;\r\n    pixelWidth?: number = null;\r\n    pixelHeight?: number = null;\r\n    altText: string = \"\";\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        if (this._selectAction) {\r\n            Utils.setProperty(result, \"selectAction\", this._selectAction.toJSON());\r\n        }\r\n\r\n        Utils.setEnumProperty(Enums.ImageStyle, result, \"style\", this.style, Enums.ImageStyle.Default);\r\n        Utils.setProperty(result, \"backgroundColor\", this.backgroundColor);\r\n        Utils.setProperty(result, \"url\", this.url);\r\n        Utils.setEnumProperty(Enums.Size, result, \"size\", this.size, Enums.Size.Auto);\r\n\r\n        if (this.pixelWidth) {\r\n            Utils.setProperty(result, \"width\", this.pixelWidth + \"px\");\r\n        }\r\n\r\n        if (this.pixelHeight) {\r\n            Utils.setProperty(result, \"height\", this.pixelHeight + \"px\");\r\n        }\r\n\r\n        Utils.setProperty(result, \"altText\", this.altText);\r\n\r\n        return result;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Image\";\r\n    }\r\n\r\n    getActionById(id: string) {\r\n        var result = super.getActionById(id);\r\n\r\n        if (!result && this.selectAction) {\r\n            result = this.selectAction.getActionById(id);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.url = Utils.getStringValue(json[\"url\"]);\r\n        this.backgroundColor = Utils.getStringValue(json[\"backgroundColor\"]);\r\n\r\n        let styleString = Utils.getStringValue(json[\"style\"]);\r\n\r\n        if (styleString && styleString.toLowerCase() === \"normal\") {\r\n            this.style = Enums.ImageStyle.Default;\r\n\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.Deprecated,\r\n                    message: \"The Image.style value \\\"normal\\\" is deprecated and will be removed. Use \\\"default\\\" instead.\"\r\n                },\r\n                errors\r\n            );\r\n        }\r\n        else {\r\n            this.style = Utils.getEnumValue(Enums.ImageStyle, styleString, this.style);\r\n        }\r\n\r\n        this.size = Utils.getEnumValue(Enums.Size, json[\"size\"], this.size);\r\n\t\tthis.altText = Utils.getStringValue(json[\"altText\"]);\r\n\r\n        // pixelWidth and pixelHeight are only parsed for backwards compatibility.\r\n        // Payloads should use the width and height proerties instead.\r\n        if (json[\"pixelWidth\"] && typeof json[\"pixelWidth\"] === \"number\") {\r\n            this.pixelWidth = json[\"pixelWidth\"];\r\n\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.Deprecated,\r\n                    message: \"The pixelWidth property is deprecated and will be removed. Use the width property instead.\"\r\n                },\r\n                errors\r\n            );\r\n        }\r\n\r\n        if (json[\"pixelHeight\"] && typeof json[\"pixelHeight\"] === \"number\") {\r\n            this.pixelHeight = json[\"pixelHeight\"];\r\n\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.Deprecated,\r\n                    message: \"The pixelHeight property is deprecated and will be removed. Use the height property instead.\"\r\n                },\r\n                errors\r\n            );\r\n        }\r\n\r\n        let size = this.parseDimension(\"width\", json[\"width\"], errors);\r\n\r\n        if (size > 0) {\r\n            this.pixelWidth = size;\r\n        }\r\n\r\n        size = this.parseDimension(\"height\", json[\"height\"], errors);\r\n\r\n        if (size > 0) {\r\n            this.pixelHeight = size;\r\n        }\r\n\r\n        this.selectAction = createActionInstance(\r\n            this,\r\n            json[\"selectAction\"],\r\n            [ShowCardAction.JsonTypeName],\r\n            !this.isDesignMode(),\r\n            errors);\r\n    }\r\n\r\n    getResourceInformation(): Array<Shared.IResourceInformation> {\r\n        if (!Utils.isNullOrEmpty(this.url)) {\r\n            return [{ url: this.url, mimeType: \"image\" }]\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    get selectAction(): Action {\r\n        return this._selectAction;\r\n    }\r\n\r\n    set selectAction(value: Action) {\r\n        this._selectAction = value;\r\n\r\n        if (this._selectAction) {\r\n            this._selectAction.setParent(this);\r\n        }\r\n    }\r\n}\r\n\r\nexport abstract class CardElementContainer extends CardElement {\r\n    private _selectAction: Action = null;\r\n\r\n    protected isElementAllowed(element: CardElement, forbiddenElementTypes: Array<string>) {\r\n        if (!this.hostConfig.supportsInteractivity && element.isInteractive) {\r\n            return false;\r\n        }\r\n\r\n        if (forbiddenElementTypes) {\r\n            for (let forbiddenElementType of forbiddenElementTypes) {\r\n                if (element.getJsonTypeName() === forbiddenElementType) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    protected applyPadding() {\r\n        super.applyPadding();\r\n\r\n        if (!this.renderedElement) {\r\n            return;\r\n        }\r\n\r\n        let physicalPadding = new Shared.SpacingDefinition();\r\n\r\n        if (this.getEffectivePadding()) {\r\n            physicalPadding = this.hostConfig.paddingDefinitionToSpacingDefinition(this.getEffectivePadding());\r\n        }\r\n\r\n        this.renderedElement.style.paddingTop = physicalPadding.top + \"px\";\r\n        this.renderedElement.style.paddingRight = physicalPadding.right + \"px\";\r\n        this.renderedElement.style.paddingBottom = physicalPadding.bottom + \"px\";\r\n        this.renderedElement.style.paddingLeft = physicalPadding.left + \"px\";\r\n\r\n        this.renderedElement.style.marginRight = \"0\";\r\n        this.renderedElement.style.marginLeft = \"0\";\r\n    }\r\n\r\n    protected getSelectAction(): Action {\r\n        return this._selectAction;\r\n    }\r\n\r\n    protected setSelectAction(value: Action) {\r\n        this._selectAction = value;\r\n\r\n        if (this._selectAction) {\r\n            this._selectAction.setParent(this);\r\n        }\r\n    }\r\n\r\n    protected get isSelectable(): boolean {\r\n        return false;\r\n    }\r\n\r\n    abstract getItemCount(): number;\r\n    abstract getItemAt(index: number): CardElement;\r\n    abstract getFirstVisibleRenderedItem(): CardElement;\r\n    abstract getLastVisibleRenderedItem(): CardElement;\r\n    abstract removeItem(item: CardElement): boolean;\r\n\r\n    allowVerticalOverflow: boolean = false;\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        if (this.isSelectable) {\r\n            this._selectAction = createActionInstance(\r\n                this,\r\n                json[\"selectAction\"],\r\n                [ShowCardAction.JsonTypeName],\r\n                !this.isDesignMode(),\r\n                errors);\r\n        }\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        if (this._selectAction && this.isSelectable) {\r\n            Utils.setProperty(result, \"selectAction\", this._selectAction.toJSON());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        for (let i = 0; i < this.getItemCount(); i++) {\r\n            let item = this.getItemAt(i);\r\n\r\n            if (!this.hostConfig.supportsInteractivity && item.isInteractive) {\r\n                context.addFailure(\r\n                    this,\r\n                    {\r\n                        error: Enums.ValidationError.InteractivityNotAllowed,\r\n                        message: \"Interactivity is not allowed.\"\r\n                    });\r\n            }\r\n\r\n            if (!this.isElementAllowed(item, this.getForbiddenElementTypes())) {\r\n                context.addFailure(\r\n                    this,\r\n                    {\r\n                        error: Enums.ValidationError.InteractivityNotAllowed,\r\n                        message: \"Elements of type \" + item.getJsonTypeName() + \" are not allowed in this container.\"\r\n                    });\r\n            }\r\n\r\n            item.internalValidateProperties(context);\r\n        }\r\n\r\n        if (this._selectAction) {\r\n            this._selectAction.internalValidateProperties(context);\r\n        }\r\n    }\r\n\r\n    render(): HTMLElement {\r\n        let element = super.render();\r\n        let hostConfig = this.hostConfig;\r\n\r\n        if (this.allowVerticalOverflow) {\r\n            element.style.overflowX = \"hidden\";\r\n            element.style.overflowY = \"auto\";\r\n        }\r\n\r\n        if (element && this.isSelectable && this._selectAction && hostConfig.supportsInteractivity) {\r\n            element.classList.add(hostConfig.makeCssClassName(\"ac-selectable\"));\r\n            element.tabIndex = 0;\r\n            element.setAttribute(\"role\", this._selectAction.getAriaRole());\r\n            element.setAttribute(\"aria-label\", this._selectAction.title);\r\n\r\n            element.onclick = (e) => {\r\n                if (this._selectAction != null) {\r\n                    e.preventDefault();\r\n                    e.cancelBubble = true;\r\n\r\n                    this._selectAction.execute();\r\n                }\r\n            }\r\n\r\n            element.onkeypress = (e) => {\r\n                if (this._selectAction != null && (e.keyCode == 13 || e.keyCode == 32)) {\r\n                    // Enter or space pressed\r\n                    e.preventDefault();\r\n                    e.cancelBubble = true;\r\n\r\n                    this._selectAction.execute();\r\n                }\r\n            }\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    updateLayout(processChildren: boolean = true) {\r\n        super.updateLayout(processChildren);\r\n\r\n        if (processChildren) {\r\n            for (var i = 0; i < this.getItemCount(); i++) {\r\n                this.getItemAt(i).updateLayout();\r\n            }\r\n        }\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        var result: Array<Input> = [];\r\n\r\n        for (var i = 0; i < this.getItemCount(); i++) {\r\n            result = result.concat(this.getItemAt(i).getAllInputs());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getResourceInformation(): Array<Shared.IResourceInformation> {\r\n        let result: Array<Shared.IResourceInformation> = [];\r\n\r\n        for (var i = 0; i < this.getItemCount(); i++) {\r\n            result = result.concat(this.getItemAt(i).getResourceInformation());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getElementById(id: string): CardElement {\r\n        let result = super.getElementById(id);\r\n\r\n        if (!result) {\r\n            for (var i = 0; i < this.getItemCount(); i++) {\r\n                result = this.getItemAt(i).getElementById(id);\r\n\r\n                if (result) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nexport class ImageSet extends CardElementContainer {\r\n    private _images: Array<Image> = [];\r\n\r\n    protected internalRender(): HTMLElement {\r\n        let element: HTMLElement = null;\r\n\r\n        if (this._images.length > 0) {\r\n            element = document.createElement(\"div\");\r\n            element.style.display = \"flex\";\r\n            element.style.flexWrap = \"wrap\";\r\n\r\n            for (var i = 0; i < this._images.length; i++) {\r\n                this._images[i].size = this.imageSize;\r\n\r\n                let renderedImage = this._images[i].render();\r\n\r\n                renderedImage.style.display = \"inline-flex\";\r\n                renderedImage.style.margin = \"0px\";\r\n                renderedImage.style.marginRight = \"10px\";\r\n                renderedImage.style.maxHeight = this.hostConfig.imageSet.maxImageHeight + \"px\";\r\n\r\n                Utils.appendChild(element, renderedImage);\r\n            }\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    imageSize: Enums.Size = Enums.Size.Medium;\r\n\r\n    getItemCount(): number {\r\n        return this._images.length;\r\n    }\r\n\r\n    getItemAt(index: number): CardElement {\r\n        return this._images[index];\r\n    }\r\n\r\n    getFirstVisibleRenderedItem(): CardElement {\r\n        return this._images && this._images.length > 0 ? this._images[0] : null;\r\n    }\r\n\r\n    getLastVisibleRenderedItem(): CardElement {\r\n        return this._images && this._images.length > 0 ? this._images[this._images.length - 1] : null;\r\n    }\r\n\r\n    removeItem(item: CardElement): boolean {\r\n        if (item instanceof Image) {\r\n            var itemIndex = this._images.indexOf(item);\r\n\r\n            if (itemIndex >= 0) {\r\n                this._images.splice(itemIndex, 1);\r\n\r\n                item.setParent(null);\r\n\r\n                this.updateLayout();\r\n\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"ImageSet\";\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setEnumProperty(Enums.Size, result, \"imageSize\", this.imageSize, Enums.Size.Medium);\r\n\r\n        if (this._images.length > 0) {\r\n            let images = [];\r\n\r\n            for (let image of this._images) {\r\n                images.push(image.toJSON());\r\n            }\r\n\r\n            Utils.setProperty(result, \"images\", images);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.imageSize = Utils.getEnumValue(Enums.Size, json[\"imageSize\"], Enums.Size.Medium);\r\n\r\n        if (json[\"images\"] != null) {\r\n            let jsonImages = json[\"images\"] as Array<any>;\r\n\r\n            this._images = [];\r\n\r\n            for (let i = 0; i < jsonImages.length; i++) {\r\n                var image = new Image();\r\n                image.parse(jsonImages[i], errors);\r\n\r\n                this.addImage(image);\r\n            }\r\n        }\r\n    }\r\n\r\n    addImage(image: Image) {\r\n        if (!image.parent) {\r\n            this._images.push(image);\r\n\r\n            image.setParent(this);\r\n        }\r\n        else {\r\n            throw new Error(\"This image already belongs to another ImageSet\");\r\n        }\r\n    }\r\n\r\n    indexOf(cardElement: CardElement): number {\r\n        return cardElement instanceof Image ? this._images.indexOf(cardElement) : -1;\r\n    }\r\n}\r\n\r\nexport class MediaSource extends SerializableObject {\r\n    mimeType: string;\r\n    url: string;\r\n\r\n    constructor(url: string = undefined, mimeType: string = undefined) {\r\n        super();\r\n\r\n        this.url = url;\r\n        this.mimeType = mimeType;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n\t\tthis.mimeType = Utils.getStringValue(json[\"mimeType\"]);\r\n\t\tthis.url = Utils.getStringValue(json[\"url\"]);\r\n\t}\r\n\r\n\ttoJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"mimeType\", this.mimeType);\r\n        Utils.setProperty(result, \"url\", this.url);\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nexport class Media extends CardElement {\r\n    static readonly supportedMediaTypes = [\"audio\", \"video\"];\r\n\r\n    private _selectedMediaType: string;\r\n    private _selectedSources: Array<MediaSource>;\r\n\r\n    private getPosterUrl(): string {\r\n        return this.poster ? this.poster : this.hostConfig.media.defaultPoster;\r\n    }\r\n\r\n    private processSources() {\r\n        this._selectedSources = [];\r\n        this._selectedMediaType = undefined;\r\n\r\n        for (let source of this.sources) {\r\n            let mimeComponents = source.mimeType ? source.mimeType.split('/') : [];\r\n\r\n            if (mimeComponents.length == 2) {\r\n                if (!this._selectedMediaType) {\r\n                    let index = Media.supportedMediaTypes.indexOf(mimeComponents[0]);\r\n\r\n                    if (index >= 0) {\r\n                        this._selectedMediaType = Media.supportedMediaTypes[index];\r\n                    }\r\n                }\r\n                if (mimeComponents[0] == this._selectedMediaType) {\r\n                    this._selectedSources.push(source);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private renderPoster(): HTMLElement {\r\n        const playButtonArrowWidth = 12;\r\n        const playButtonArrowHeight = 15;\r\n\r\n        let posterRootElement = document.createElement(\"div\");\r\n        posterRootElement.className = this.hostConfig.makeCssClassName(\"ac-media-poster\");\r\n        posterRootElement.setAttribute(\"role\", \"contentinfo\");\r\n        posterRootElement.setAttribute(\"aria-label\", this.altText ? this.altText : \"Media content\");\r\n        posterRootElement.style.position = \"relative\";\r\n        posterRootElement.style.display = \"flex\";\r\n\r\n        let posterUrl = this.getPosterUrl();\r\n\r\n        if (posterUrl) {\r\n            let posterImageElement = document.createElement(\"img\");\r\n            posterImageElement.style.width = \"100%\";\r\n            posterImageElement.style.height = \"100%\";\r\n\r\n            posterImageElement.onerror = (e: Event) => {\r\n                posterImageElement.parentNode.removeChild(posterImageElement);\r\n                posterRootElement.classList.add(\"empty\");\r\n                posterRootElement.style.minHeight = \"150px\";\r\n            }\r\n\r\n            posterImageElement.src = posterUrl;\r\n\r\n            posterRootElement.appendChild(posterImageElement);\r\n        }\r\n        else {\r\n            posterRootElement.classList.add(\"empty\");\r\n            posterRootElement.style.minHeight = \"150px\";\r\n        }\r\n\r\n        if (this.hostConfig.supportsInteractivity && this._selectedSources.length > 0) {\r\n            let playButtonOuterElement = document.createElement(\"div\");\r\n            playButtonOuterElement.setAttribute(\"role\", \"button\");\r\n            playButtonOuterElement.setAttribute(\"aria-label\", \"Play media\");\r\n            playButtonOuterElement.className = this.hostConfig.makeCssClassName(\"ac-media-playButton\");\r\n            playButtonOuterElement.style.display = \"flex\";\r\n            playButtonOuterElement.style.alignItems = \"center\";\r\n            playButtonOuterElement.style.justifyContent = \"center\";\r\n            playButtonOuterElement.onclick = (e) => {\r\n                if (this.hostConfig.media.allowInlinePlayback) {\r\n                    e.preventDefault();\r\n                    e.cancelBubble = true;\r\n\r\n                    let mediaPlayerElement = this.renderMediaPlayer();\r\n\r\n                    this.renderedElement.innerHTML = \"\";\r\n                    this.renderedElement.appendChild(mediaPlayerElement);\r\n\r\n                    mediaPlayerElement.play();\r\n                }\r\n                else {\r\n                    if (Media.onPlay) {\r\n                        e.preventDefault();\r\n                        e.cancelBubble = true;\r\n\r\n                        Media.onPlay(this);\r\n                    }\r\n                }\r\n            }\r\n\r\n            let playButtonInnerElement = document.createElement(\"div\");\r\n            playButtonInnerElement.className = this.hostConfig.makeCssClassName(\"ac-media-playButton-arrow\");\r\n            playButtonInnerElement.style.width = playButtonArrowWidth + \"px\";\r\n            playButtonInnerElement.style.height = playButtonArrowHeight + \"px\";\r\n            playButtonInnerElement.style.borderTopWidth = (playButtonArrowHeight / 2) + \"px\";\r\n            playButtonInnerElement.style.borderBottomWidth = (playButtonArrowHeight / 2) + \"px\";\r\n            playButtonInnerElement.style.borderLeftWidth = playButtonArrowWidth + \"px\";\r\n            playButtonInnerElement.style.borderRightWidth = \"0\";\r\n            playButtonInnerElement.style.borderStyle = \"solid\";\r\n            playButtonInnerElement.style.borderTopColor = \"transparent\";\r\n            playButtonInnerElement.style.borderRightColor = \"transparent\";\r\n            playButtonInnerElement.style.borderBottomColor = \"transparent\";\r\n            playButtonInnerElement.style.transform = \"translate(\" + (playButtonArrowWidth / 10) + \"px,0px)\";\r\n\r\n            playButtonOuterElement.appendChild(playButtonInnerElement);\r\n\r\n            let playButtonContainer = document.createElement(\"div\");\r\n            playButtonContainer.style.position = \"absolute\";\r\n            playButtonContainer.style.left = \"0\";\r\n            playButtonContainer.style.top = \"0\";\r\n            playButtonContainer.style.width = \"100%\";\r\n            playButtonContainer.style.height = \"100%\";\r\n            playButtonContainer.style.display = \"flex\";\r\n            playButtonContainer.style.justifyContent = \"center\";\r\n            playButtonContainer.style.alignItems = \"center\";\r\n\r\n            playButtonContainer.appendChild(playButtonOuterElement);\r\n            posterRootElement.appendChild(playButtonContainer);\r\n        }\r\n\r\n        return posterRootElement;\r\n    }\r\n\r\n    private renderMediaPlayer(): HTMLMediaElement {\r\n        let mediaElement: HTMLMediaElement;\r\n\r\n        if (this._selectedMediaType == \"video\") {\r\n            let videoPlayer = document.createElement(\"video\");\r\n\r\n            let posterUrl = this.getPosterUrl();\r\n\r\n            if (posterUrl) {\r\n                videoPlayer.poster = posterUrl;\r\n            }\r\n\r\n            mediaElement = videoPlayer;\r\n        }\r\n        else {\r\n            mediaElement = document.createElement(\"audio\");\r\n        }\r\n\r\n        mediaElement.controls = true;\r\n        mediaElement.preload = \"none\";\r\n        mediaElement.style.width = \"100%\";\r\n\r\n        for (let source of this.sources) {\r\n            let src: HTMLSourceElement = document.createElement(\"source\");\r\n            src.src = source.url;\r\n            src.type = source.mimeType;\r\n\r\n            mediaElement.appendChild(src);\r\n        }\r\n\r\n        return mediaElement;\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        let element = <HTMLElement>document.createElement(\"div\");\r\n        element.className = this.hostConfig.makeCssClassName(\"ac-media\");\r\n\r\n        this.processSources();\r\n\r\n        element.appendChild(this.renderPoster());\r\n\r\n        return element;\r\n    }\r\n\r\n    static onPlay: (sender: Media) => void;\r\n\r\n    sources: Array<MediaSource> = [];\r\n    poster: string;\r\n    altText: string;\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n\t\tthis.poster = Utils.getStringValue(json[\"poster\"]);\r\n\t\tthis.altText = Utils.getStringValue(json[\"altText\"]);\r\n\r\n        this.sources = [];\r\n\r\n        if (Array.isArray(json[\"sources\"])) {\r\n            for (let jsonSource of json[\"sources\"]) {\r\n                let source = new MediaSource();\r\n                source.parse(jsonSource, errors);\r\n\r\n                this.sources.push(source);\r\n            }\r\n        }\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"poster\", this.poster);\r\n        Utils.setProperty(result, \"altText\", this.altText);\r\n\r\n        /*\r\n        if (this.sources.length > 0) {\r\n            let serializedSources = [];\r\n\r\n            for (let source of this.sources) {\r\n                serializedSources.push(source.toJSON());\r\n            }\r\n\r\n            Utils.setProperty(result, \"sources\", serializedSources);\r\n        }\r\n        */\r\n\r\n        Utils.setArrayProperty(result, \"sources\", this.sources);\r\n\r\n        return result;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Media\";\r\n    }\r\n\r\n    getResourceInformation(): Array<Shared.IResourceInformation> {\r\n        let result: Array<Shared.IResourceInformation> = [];\r\n\r\n        let posterUrl = this.getPosterUrl();\r\n\r\n        if (!Utils.isNullOrEmpty(posterUrl)) {\r\n            result.push({ url: posterUrl, mimeType: \"image\" });\r\n        }\r\n\r\n        for (let mediaSource of this.sources) {\r\n            if (!Utils.isNullOrEmpty(mediaSource.url)) {\r\n                result.push({ url: mediaSource.url, mimeType: mediaSource.mimeType });\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    get selectedMediaType(): string {\r\n        return this._selectedMediaType;\r\n    }\r\n}\r\n\r\nexport class InputValidationOptions extends SerializableObject {\r\n    necessity: Enums.InputValidationNecessity = Enums.InputValidationNecessity.Optional;\r\n    errorMessage: string = undefined;\r\n\r\n    parse(json: any) {\r\n        super.parse(json);\r\n\r\n        this.necessity = Utils.getEnumValue(Enums.InputValidationNecessity, json[\"necessity\"], this.necessity);\r\n        this.errorMessage = Utils.getStringValue(json[\"errorMessage\"]);\r\n    }\r\n\r\n    toJSON() {\r\n        if (this.necessity != Enums.InputValidationNecessity.Optional || !Utils.isNullOrEmpty(this.errorMessage)) {\r\n            let result = super.toJSON();\r\n\r\n            Utils.setEnumProperty(Enums.InputValidationNecessity, result, \"necessity\", this.necessity, Enums.InputValidationNecessity.Optional);\r\n            Utils.setProperty(result, \"errorMessage\", this.errorMessage);\r\n\r\n            return result;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport abstract class Input extends CardElement implements Shared.IInput {\r\n    private _outerContainerElement: HTMLElement;\r\n    private _inputControlContainerElement: HTMLElement;\r\n    private _errorMessageElement: HTMLElement;\r\n    private _renderedInputControlElement: HTMLElement;\r\n    private _defaultValue: string;\r\n\r\n    protected get isNullable(): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected get renderedInputControlElement(): HTMLElement {\r\n        return this._renderedInputControlElement;\r\n    }\r\n\r\n    protected get inputControlContainerElement(): HTMLElement {\r\n        return this._inputControlContainerElement;\r\n    }\r\n\r\n    protected overrideInternalRender(): HTMLElement {\r\n        let hostConfig = this.hostConfig;\r\n\r\n        this._outerContainerElement = document.createElement(\"div\");\r\n        this._outerContainerElement.style.display = \"flex\";\r\n        this._outerContainerElement.style.flexDirection = \"column\";\r\n\r\n        this._inputControlContainerElement = document.createElement(\"div\");\r\n        this._inputControlContainerElement.className = hostConfig.makeCssClassName(\"ac-input-container\");\r\n        this._inputControlContainerElement.style.display = \"flex\";\r\n\r\n        this._renderedInputControlElement = this.internalRender();\r\n        this._renderedInputControlElement.style.minWidth = \"0px\";\r\n\r\n        if (AdaptiveCard.useBuiltInInputValidation && this.isNullable && this.validation.necessity == Enums.InputValidationNecessity.RequiredWithVisualCue) {\r\n            this._renderedInputControlElement.classList.add(hostConfig.makeCssClassName(\"ac-input-required\"));\r\n        }\r\n\r\n        this._inputControlContainerElement.appendChild(this._renderedInputControlElement);\r\n\r\n        this._outerContainerElement.appendChild(this._inputControlContainerElement);\r\n\r\n        return this._outerContainerElement;\r\n    }\r\n\r\n    protected valueChanged() {\r\n        this.resetValidationFailureCue();\r\n\r\n        if (this.onValueChanged) {\r\n            this.onValueChanged(this);\r\n        }\r\n\r\n        raiseInputValueChangedEvent(this);\r\n    }\r\n\r\n    protected resetValidationFailureCue() {\r\n        if (AdaptiveCard.useBuiltInInputValidation && this.renderedElement) {\r\n            this._renderedInputControlElement.classList.remove(this.hostConfig.makeCssClassName(\"ac-input-validation-failed\"));\r\n\r\n            if (this._errorMessageElement) {\r\n                this._outerContainerElement.removeChild(this._errorMessageElement);\r\n\r\n                this._errorMessageElement = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    protected showValidationErrorMessage() {\r\n        if (this.renderedElement && AdaptiveCard.useBuiltInInputValidation && AdaptiveCard.displayInputValidationErrors && !Utils.isNullOrEmpty(this.validation.errorMessage)) {\r\n            this._errorMessageElement = document.createElement(\"span\");\r\n            this._errorMessageElement.className = this.hostConfig.makeCssClassName(\"ac-input-validation-error-message\");\r\n            this._errorMessageElement.textContent = this.validation.errorMessage;\r\n\r\n            this._outerContainerElement.appendChild(this._errorMessageElement);\r\n        }\r\n    }\r\n\r\n    protected parseInputValue(value: string): string {\r\n        return value;\r\n    }\r\n\r\n    abstract get value(): string;\r\n\r\n    onValueChanged: (sender: Input) => void;\r\n\r\n    readonly validation = new InputValidationOptions();\r\n\r\n    title: string;\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"title\", this.title);\r\n        Utils.setProperty(result, \"value\", this.renderedElement && !Utils.isNullOrEmpty(this.value) ? this.value : this.defaultValue);\r\n\r\n        if (AdaptiveCard.useBuiltInInputValidation) {\r\n            Utils.setProperty(result, \"validation\", this.validation.toJSON());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        if (Utils.isNullOrEmpty(this.id)) {\r\n            context.addFailure(\r\n                this,\r\n                {\r\n                    error: Enums.ValidationError.PropertyCantBeNull,\r\n                    message: \"All inputs must have a unique Id\"\r\n                });\r\n        }\r\n    }\r\n\r\n    validateValue(): boolean {\r\n        if (AdaptiveCard.useBuiltInInputValidation) {\r\n            this.resetValidationFailureCue();\r\n\r\n            let result = this.validation.necessity != Enums.InputValidationNecessity.Optional ? !Utils.isNullOrEmpty(this.value) : true;\r\n\r\n            if (!result && this.renderedElement) {\r\n                this._renderedInputControlElement.classList.add(this.hostConfig.makeCssClassName(\"ac-input-validation-failed\"));\r\n\r\n                this.showValidationErrorMessage();\r\n            }\r\n\r\n            return result;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.id = Utils.getStringValue(json[\"id\"]);\r\n        this.defaultValue = Utils.getStringValue(json[\"value\"]);\r\n\r\n        if (AdaptiveCard.useBuiltInInputValidation) {\r\n            let jsonValidation = json[\"validation\"];\r\n\r\n            if (jsonValidation) {\r\n                this.validation.parse(jsonValidation);\r\n            }\r\n        }\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        return [this];\r\n    }\r\n\r\n    get defaultValue(): string {\r\n        return this._defaultValue;\r\n    }\r\n\r\n    set defaultValue(value: string) {\r\n        this._defaultValue = this.parseInputValue(value);\r\n    }\r\n\r\n    get isInteractive(): boolean {\r\n        return true;\r\n    }\r\n}\r\n\r\nexport class TextInput extends Input {\r\n    private _inlineAction: Action;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        if (this.isMultiline) {\r\n            let textareaElement = document.createElement(\"textarea\");\r\n            textareaElement.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-textInput\", \"ac-multiline\");\r\n            textareaElement.style.flex = \"1 1 auto\";\r\n            textareaElement.tabIndex = 0;\r\n\r\n            if (!Utils.isNullOrEmpty(this.placeholder)) {\r\n                textareaElement.placeholder = this.placeholder;\r\n                textareaElement.setAttribute(\"aria-label\", this.placeholder)\r\n            }\r\n\r\n            if (!Utils.isNullOrEmpty(this.defaultValue)) {\r\n                textareaElement.value = this.defaultValue;\r\n            }\r\n\r\n            if (this.maxLength && this.maxLength > 0) {\r\n                textareaElement.maxLength = this.maxLength;\r\n            }\r\n\r\n            textareaElement.oninput = () => { this.valueChanged(); }\r\n            textareaElement.onkeypress = (e: KeyboardEvent) => {\r\n                // Ctrl+Enter pressed\r\n                if (e.keyCode == 10 && this.inlineAction) {\r\n                    this.inlineAction.execute();\r\n                }\r\n            }\r\n\r\n            return textareaElement;\r\n        }\r\n        else {\r\n            let inputElement = document.createElement(\"input\");\r\n            inputElement.type = Enums.InputTextStyle[this.style].toLowerCase();\r\n            inputElement.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-textInput\");\r\n            inputElement.style.flex = \"1 1 auto\";\r\n            inputElement.tabIndex = 0;\r\n\r\n            if (!Utils.isNullOrEmpty(this.placeholder)) {\r\n                inputElement.placeholder = this.placeholder;\r\n                inputElement.setAttribute(\"aria-label\", this.placeholder)\r\n            }\r\n\r\n            if (!Utils.isNullOrEmpty(this.defaultValue)) {\r\n                inputElement.value = this.defaultValue;\r\n            }\r\n\r\n            if (this.maxLength && this.maxLength > 0) {\r\n                inputElement.maxLength = this.maxLength;\r\n            }\r\n\r\n            inputElement.oninput = () => { this.valueChanged(); }\r\n            inputElement.onkeypress = (e: KeyboardEvent) => {\r\n                // Enter pressed\r\n                if (e.keyCode == 13 && this.inlineAction) {\r\n                    this.inlineAction.execute();\r\n                }\r\n            }\r\n\r\n            return inputElement;\r\n        }\r\n    }\r\n\r\n    protected overrideInternalRender(): HTMLElement {\r\n        let renderedInputControl = super.overrideInternalRender();\r\n\r\n        if (this.inlineAction) {\r\n            let button = document.createElement(\"button\");\r\n            button.className = this.hostConfig.makeCssClassName(\"ac-inlineActionButton\");\r\n            button.onclick = (e) => {\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n\r\n                this.inlineAction.execute();\r\n            };\r\n\r\n            if (!Utils.isNullOrEmpty(this.inlineAction.iconUrl)) {\r\n                button.classList.add(\"iconOnly\");\r\n\r\n                let icon = document.createElement(\"img\");\r\n                icon.style.height = \"100%\";\r\n\r\n                // The below trick is necessary as a workaround in Chrome where the icon is initially displayed\r\n                // at its native size then resized to 100% of the button's height. This cfreates an unpleasant\r\n                // flicker. On top of that, Chrome's flex implementation fails to prperly re-layout the button\r\n                // after the image has loaded and been gicven its final size. The below trick also fixes that.\r\n                icon.style.display = \"none\";\r\n                icon.onload = () => {\r\n                    icon.style.removeProperty(\"display\");\r\n                };\r\n                icon.onerror = () => {\r\n                    button.removeChild(icon);\r\n                    button.classList.remove(\"iconOnly\");\r\n                    button.classList.add(\"textOnly\");\r\n                    button.textContent = !Utils.isNullOrEmpty(this.inlineAction.title) ? this.inlineAction.title : \"Title\";\r\n                }\r\n                icon.src = this.inlineAction.iconUrl;\r\n\r\n                button.appendChild(icon);\r\n\r\n                if (!Utils.isNullOrEmpty(this.inlineAction.title)) {\r\n                    button.title = this.inlineAction.title;\r\n                }\r\n            }\r\n            else {\r\n                button.classList.add(\"textOnly\");\r\n                button.textContent = !Utils.isNullOrEmpty(this.inlineAction.title) ? this.inlineAction.title : \"Title\";\r\n            }\r\n\r\n            button.style.marginLeft = \"8px\";\r\n\r\n            this.inputControlContainerElement.appendChild(button);\r\n        }\r\n\r\n        return renderedInputControl;\r\n    }\r\n\r\n    maxLength: number;\r\n    isMultiline: boolean = false;\r\n    placeholder: string;\r\n    style: Enums.InputTextStyle = Enums.InputTextStyle.Text;\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Input.Text\";\r\n    }\r\n\r\n    getActionById(id: string) {\r\n        let result = super.getActionById(id);\r\n\r\n        if (!result && this.inlineAction) {\r\n            result = this.inlineAction.getActionById(id);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"placeholder\", this.placeholder);\r\n        Utils.setNumberProperty(result, \"maxLength\", this.maxLength);\r\n        Utils.setProperty(result, \"isMultiline\", this.isMultiline, false);\r\n        Utils.setEnumProperty(Enums.InputTextStyle, result, \"style\", this.style, Enums.InputTextStyle.Text);\r\n\r\n        if (this._inlineAction) {\r\n            Utils.setProperty(result, \"inlineAction\", this._inlineAction.toJSON());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.maxLength = Utils.getNumberValue(json[\"maxLength\"]);\r\n        this.isMultiline = Utils.getBoolValue(json[\"isMultiline\"], this.isMultiline);\r\n        this.placeholder = Utils.getStringValue(json[\"placeholder\"]);\r\n        this.style = Utils.getEnumValue(Enums.InputTextStyle, json[\"style\"], this.style);\r\n        this.inlineAction = createActionInstance(\r\n            this,\r\n            json[\"inlineAction\"],\r\n            [ShowCardAction.JsonTypeName],\r\n            !this.isDesignMode(),\r\n            errors);\r\n    }\r\n\r\n    get inlineAction(): Action {\r\n        return this._inlineAction;\r\n    }\r\n\r\n    set inlineAction(value: Action) {\r\n        this._inlineAction = value;\r\n\r\n        if (this._inlineAction) {\r\n            this._inlineAction.setParent(this);\r\n        }\r\n    }\r\n\r\n    get value(): string {\r\n        if (this.renderedInputControlElement) {\r\n            if (this.isMultiline) {\r\n                return (<HTMLTextAreaElement>this.renderedInputControlElement).value;\r\n            }\r\n            else {\r\n                return (<HTMLInputElement>this.renderedInputControlElement).value;\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport class ToggleInput extends Input {\r\n    private _checkboxInputElement: HTMLInputElement;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        let element = document.createElement(\"div\");\r\n        element.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-toggleInput\");\r\n        element.style.width = \"100%\";\r\n        element.style.display = \"flex\";\r\n        element.style.alignItems = \"center\";\r\n\r\n        this._checkboxInputElement = document.createElement(\"input\");\r\n        this._checkboxInputElement.id = Utils.generateUniqueId();\r\n        this._checkboxInputElement.type = \"checkbox\";\r\n        this._checkboxInputElement.style.display = \"inline-block\";\r\n        this._checkboxInputElement.style.verticalAlign = \"middle\";\r\n        this._checkboxInputElement.style.margin = \"0\";\r\n        this._checkboxInputElement.style.flex = \"0 0 auto\";\r\n        this._checkboxInputElement.setAttribute(\"aria-label\", this.title);\r\n        this._checkboxInputElement.tabIndex = 0;\r\n\r\n        if (this.defaultValue == this.valueOn) {\r\n            this._checkboxInputElement.checked = true;\r\n        }\r\n\r\n        this._checkboxInputElement.onchange = () => { this.valueChanged(); }\r\n\r\n        Utils.appendChild(element, this._checkboxInputElement);\r\n\r\n        if (!Utils.isNullOrEmpty(this.title) || this.isDesignMode()) {\r\n            let label = new Label();\r\n            label.setParent(this);\r\n            label.forElementId = this._checkboxInputElement.id;\r\n            label.hostConfig = this.hostConfig;\r\n            label.text = Utils.isNullOrEmpty(this.title) ? this.getJsonTypeName() : this.title;\r\n            label.useMarkdown = AdaptiveCard.useMarkdownInRadioButtonAndCheckbox;\r\n            label.wrap = this.wrap;\r\n\r\n            let labelElement = label.render();\r\n            labelElement.style.display = \"inline-block\";\r\n            labelElement.style.flex = \"1 1 auto\";\r\n            labelElement.style.marginLeft = \"6px\";\r\n            labelElement.style.verticalAlign = \"middle\";\r\n\r\n            let spacerElement = document.createElement(\"div\");\r\n            spacerElement.style.width = \"6px\";\r\n\r\n            Utils.appendChild(element, spacerElement);\r\n            Utils.appendChild(element, labelElement);\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    protected get isNullable(): boolean {\r\n        return false;\r\n    }\r\n\r\n    valueOn: string = \"true\";\r\n    valueOff: string = \"false\";\r\n    wrap: boolean = false;\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Input.Toggle\";\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"valueOn\", this.valueOn, \"true\");\r\n        Utils.setProperty(result, \"valueOff\", this.valueOff, \"false\");\r\n        Utils.setProperty(result, \"wrap\", this.wrap);\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.title = Utils.getStringValue(json[\"title\"]);\r\n        this.valueOn = Utils.getStringValue(json[\"valueOn\"], this.valueOn);\r\n        this.valueOff = Utils.getStringValue(json[\"valueOff\"], this.valueOff);\r\n        this.wrap = Utils.getBoolValue(json[\"wrap\"], this.wrap);\r\n    }\r\n\r\n    get value(): string {\r\n        if (this._checkboxInputElement) {\r\n            return this._checkboxInputElement.checked ? this.valueOn : this.valueOff;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport class Choice extends SerializableObject {\r\n    title: string;\r\n    value: string;\r\n\r\n    constructor(title: string = undefined, value: string = undefined) {\r\n        super();\r\n\r\n        this.title = title;\r\n        this.value = value;\r\n    }\r\n\r\n    parse(json: any) {\r\n        super.parse(json);\r\n\r\n        this.title = Utils.getStringValue(json[\"title\"], \"\");\r\n        this.value = Utils.getStringValue(json[\"value\"], \"\");\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"title\", this.title);\r\n        Utils.setProperty(result, \"value\", this.value);\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nexport class ChoiceSetInput extends Input {\r\n    private static uniqueCategoryCounter = 0;\r\n\r\n    private static getUniqueCategoryName(): string {\r\n        let uniqueCwtegoryName = \"__ac-category\" + ChoiceSetInput.uniqueCategoryCounter;\r\n\r\n        ChoiceSetInput.uniqueCategoryCounter++;\r\n\r\n        return uniqueCwtegoryName;\r\n    }\r\n\r\n    private _selectElement: HTMLSelectElement;\r\n    private _toggleInputs: Array<HTMLInputElement>;\r\n\r\n    // Make sure `aria-current` is applied to the currently-selected item\r\n    protected internalApplyAriaCurrent(): void {\r\n        const options = this._selectElement.options;\r\n\r\n        if (options) {\r\n            for (let i = 0; i < options.length; i++) {\r\n                if (options[i].selected) {\r\n                    options[i].setAttribute(\"aria-current\", \"true\");\r\n                }\r\n                else {\r\n                    options[i].removeAttribute(\"aria-current\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        if (!this.isMultiSelect) {\r\n            if (this.isCompact) {\r\n                // Render as a combo box\r\n                this._selectElement = document.createElement(\"select\");\r\n                this._selectElement.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-multichoiceInput\", \"ac-choiceSetInput-compact\");\r\n                this._selectElement.style.width = \"100%\";\r\n\r\n                let option = document.createElement(\"option\");\r\n                option.selected = true;\r\n                option.disabled = true;\r\n                option.hidden = true;\r\n                option.value = \"\";\r\n\r\n                if (this.placeholder) {\r\n                    option.text = this.placeholder;\r\n                }\r\n\r\n                Utils.appendChild(this._selectElement, option);\r\n\r\n                for (var i = 0; i < this.choices.length; i++) {\r\n                    let option = document.createElement(\"option\");\r\n                    option.value = this.choices[i].value;\r\n                    option.text = this.choices[i].title;\r\n                    option.setAttribute(\"aria-label\", this.choices[i].title);\r\n\r\n                    if (this.choices[i].value == this.defaultValue) {\r\n                        option.selected = true;\r\n                    }\r\n\r\n                    Utils.appendChild(this._selectElement, option);\r\n                }\r\n\r\n                this._selectElement.onchange = () => {\r\n                    this.internalApplyAriaCurrent();\r\n                    this.valueChanged();\r\n                }\r\n\r\n                this.internalApplyAriaCurrent();\r\n                return this._selectElement;\r\n            }\r\n            else {\r\n                // Render as a series of radio buttons\r\n                let uniqueCategoryName = ChoiceSetInput.getUniqueCategoryName();\r\n\r\n                let element = document.createElement(\"div\");\r\n                element.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-choiceSetInput-expanded\");\r\n                element.style.width = \"100%\";\r\n\r\n                this._toggleInputs = [];\r\n\r\n                for (let i = 0; i < this.choices.length; i++) {\r\n                    let radioInput = document.createElement(\"input\");\r\n                    radioInput.id = Utils.generateUniqueId();\r\n                    radioInput.type = \"radio\";\r\n                    radioInput.style.margin = \"0\";\r\n                    radioInput.style.display = \"inline-block\";\r\n                    radioInput.style.verticalAlign = \"middle\";\r\n                    radioInput.name = Utils.isNullOrEmpty(this.id) ? uniqueCategoryName : this.id;\r\n                    radioInput.value = this.choices[i].value;\r\n                    radioInput.style.flex = \"0 0 auto\";\r\n                    radioInput.setAttribute(\"aria-label\", this.choices[i].title);\r\n\r\n                    if (this.choices[i].value == this.defaultValue) {\r\n                        radioInput.checked = true;\r\n                    }\r\n\r\n                    radioInput.onchange = () => { this.valueChanged(); }\r\n\r\n                    this._toggleInputs.push(radioInput);\r\n\r\n                    let label = new Label();\r\n                    label.setParent(this);\r\n                    label.forElementId = radioInput.id;\r\n                    label.hostConfig = this.hostConfig;\r\n                    label.text = Utils.isNullOrEmpty(this.choices[i].title) ? \"Choice \" + i : this.choices[i].title;\r\n                    label.useMarkdown = AdaptiveCard.useMarkdownInRadioButtonAndCheckbox;\r\n                    label.wrap = this.wrap;\r\n\r\n                    let labelElement = label.render();\r\n                    labelElement.style.display = \"inline-block\";\r\n                    labelElement.style.flex = \"1 1 auto\";\r\n                    labelElement.style.marginLeft = \"6px\";\r\n                    labelElement.style.verticalAlign = \"middle\";\r\n\r\n                    let spacerElement = document.createElement(\"div\");\r\n                    spacerElement.style.width = \"6px\";\r\n\r\n                    let compoundInput = document.createElement(\"div\");\r\n                    compoundInput.style.display = \"flex\";\r\n                    compoundInput.style.alignItems = \"center\";\r\n\r\n                    Utils.appendChild(compoundInput, radioInput);\r\n                    Utils.appendChild(compoundInput, spacerElement);\r\n                    Utils.appendChild(compoundInput, labelElement);\r\n\r\n                    Utils.appendChild(element, compoundInput);\r\n                }\r\n\r\n                return element;\r\n            }\r\n        }\r\n        else {\r\n            // Render as a list of toggle inputs\r\n            let defaultValues = this.defaultValue ? this.defaultValue.split(this.hostConfig.choiceSetInputValueSeparator) : null;\r\n\r\n            let element = document.createElement(\"div\");\r\n            element.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-choiceSetInput-multiSelect\");\r\n            element.style.width = \"100%\";\r\n\r\n            this._toggleInputs = [];\r\n\r\n            for (let i = 0; i < this.choices.length; i++) {\r\n                let checkboxInput = document.createElement(\"input\");\r\n                checkboxInput.id = Utils.generateUniqueId();\r\n                checkboxInput.type = \"checkbox\";\r\n                checkboxInput.style.margin = \"0\";\r\n                checkboxInput.style.display = \"inline-block\";\r\n                checkboxInput.style.verticalAlign = \"middle\";\r\n                checkboxInput.value = this.choices[i].value;\r\n                checkboxInput.style.flex = \"0 0 auto\";\r\n                checkboxInput.setAttribute(\"aria-label\", this.choices[i].title);\r\n\r\n                if (defaultValues) {\r\n                    if (defaultValues.indexOf(this.choices[i].value) >= 0) {\r\n                        checkboxInput.checked = true;\r\n                    }\r\n                }\r\n\r\n                checkboxInput.onchange = () => { this.valueChanged(); }\r\n\r\n                this._toggleInputs.push(checkboxInput);\r\n\r\n                let label = new Label();\r\n                label.setParent(this);\r\n                label.forElementId = checkboxInput.id;\r\n                label.hostConfig = this.hostConfig;\r\n                label.text = Utils.isNullOrEmpty(this.choices[i].title) ? \"Choice \" + i : this.choices[i].title;\r\n                label.useMarkdown = AdaptiveCard.useMarkdownInRadioButtonAndCheckbox;\r\n                label.wrap = this.wrap;\r\n\r\n                let labelElement = label.render();\r\n                labelElement.style.display = \"inline-block\";\r\n                labelElement.style.flex = \"1 1 auto\";\r\n                labelElement.style.marginLeft = \"6px\";\r\n                labelElement.style.verticalAlign = \"middle\";\r\n\r\n                let spacerElement = document.createElement(\"div\");\r\n                spacerElement.style.width = \"6px\";\r\n\r\n                let compoundInput = document.createElement(\"div\");\r\n                compoundInput.style.display = \"flex\";\r\n                compoundInput.style.alignItems = \"center\";\r\n\r\n                Utils.appendChild(compoundInput, checkboxInput);\r\n                Utils.appendChild(compoundInput, spacerElement);\r\n                Utils.appendChild(compoundInput, labelElement);\r\n\r\n                Utils.appendChild(element, compoundInput);\r\n            }\r\n\r\n            return element;\r\n        }\r\n    }\r\n\r\n    choices: Array<Choice> = [];\r\n    isCompact: boolean = false;\r\n    isMultiSelect: boolean = false;\r\n    placeholder: string;\r\n    wrap: boolean = false;\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Input.ChoiceSet\";\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"placeholder\", this.placeholder);\r\n\r\n        /*\r\n        let choices = [];\r\n\r\n        if (this.choices) {\r\n            for (let choice of this.choices) {\r\n                choices.push(choice.toJSON());\r\n            }\r\n        }\r\n\r\n        Utils.setProperty(result, \"choices\", choices);\r\n        */\r\n\r\n        Utils.setArrayProperty(result, \"choices\", this.choices);\r\n\r\n        Utils.setProperty(result, \"style\", this.isCompact ? null : \"expanded\");\r\n        Utils.setProperty(result, \"isMultiSelect\", this.isMultiSelect, false);\r\n        Utils.setProperty(result, \"wrap\", this.wrap, false);\r\n\r\n        return result;\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        if (this.choices.length == 0) {\r\n            context.addFailure(\r\n                this,\r\n                {\r\n                    error: Enums.ValidationError.CollectionCantBeEmpty,\r\n                    message: \"An Input.ChoiceSet must have at least one choice defined.\"\r\n                });\r\n        }\r\n\r\n        for (let choice of this.choices) {\r\n            if (!choice.title || !choice.value) {\r\n                context.addFailure(\r\n                    this,\r\n                    {\r\n                        error: Enums.ValidationError.PropertyCantBeNull,\r\n                        message: \"All choices in an Input.ChoiceSet must have their title and value properties set.\"\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.isCompact = !(json[\"style\"] === \"expanded\");\r\n        this.isMultiSelect = Utils.getBoolValue(json[\"isMultiSelect\"], this.isMultiSelect);\r\n        this.placeholder = Utils.getStringValue(json[\"placeholder\"]);\r\n\r\n        this.choices = [];\r\n\r\n        if (Array.isArray(json[\"choices\"])) {\r\n            for (let jsonChoice of json[\"choices\"]) {\r\n                let choice = new Choice();\r\n                choice.parse(jsonChoice);\r\n\r\n                this.choices.push(choice);\r\n            }\r\n        }\r\n\r\n        this.wrap = Utils.getBoolValue(json[\"wrap\"], this.wrap);\r\n    }\r\n\r\n    get value(): string {\r\n        if (!this.isMultiSelect) {\r\n            if (this.isCompact) {\r\n                if (this._selectElement) {\r\n                    return this._selectElement.selectedIndex > 0 ? this._selectElement.value : null;\r\n                }\r\n\r\n                return null;\r\n            }\r\n            else {\r\n                if (!this._toggleInputs || this._toggleInputs.length == 0) {\r\n                    return null;\r\n                }\r\n\r\n                for (var i = 0; i < this._toggleInputs.length; i++) {\r\n                    if (this._toggleInputs[i].checked) {\r\n                        return this._toggleInputs[i].value;\r\n                    }\r\n                }\r\n\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            if (!this._toggleInputs || this._toggleInputs.length == 0) {\r\n                return null;\r\n            }\r\n\r\n            var result: string = \"\";\r\n\r\n            for (var i = 0; i < this._toggleInputs.length; i++) {\r\n                if (this._toggleInputs[i].checked) {\r\n                    if (result != \"\") {\r\n                        result += this.hostConfig.choiceSetInputValueSeparator;\r\n                    }\r\n\r\n                    result += this._toggleInputs[i].value;\r\n                }\r\n            }\r\n\r\n            return result == \"\" ? null : result;\r\n        }\r\n    }\r\n}\r\n\r\nexport class NumberInput extends Input {\r\n    private _numberInputElement: HTMLInputElement;\r\n    private _min: number;\r\n    private _max: number;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        this._numberInputElement = document.createElement(\"input\");\r\n        this._numberInputElement.setAttribute(\"type\", \"number\");\r\n\r\n        if (this.min) {\r\n            this._numberInputElement.setAttribute(\"min\", this.min.toString());\r\n        }\r\n\r\n        if (this.max) {\r\n            this._numberInputElement.setAttribute(\"max\", this.max.toString());\r\n        }\r\n\r\n        this._numberInputElement.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-numberInput\");\r\n        this._numberInputElement.style.width = \"100%\";\r\n        this._numberInputElement.tabIndex = 0;\r\n\r\n        if (!Utils.isNullOrEmpty(this.defaultValue)) {\r\n            this._numberInputElement.value = this.defaultValue;\r\n        }\r\n\r\n        if (!Utils.isNullOrEmpty(this.placeholder)) {\r\n            this._numberInputElement.placeholder = this.placeholder;\r\n            this._numberInputElement.setAttribute(\"aria-label\", this.placeholder);\r\n        }\r\n\r\n        this._numberInputElement.oninput = () => { this.valueChanged(); }\r\n\r\n        return this._numberInputElement;\r\n    }\r\n\r\n    placeholder: string;\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Input.Number\";\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"placeholder\", this.placeholder);\r\n        Utils.setNumberProperty(result, \"min\", this.min);\r\n        Utils.setNumberProperty(result, \"max\", this.max);\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.placeholder = Utils.getStringValue(json[\"placeholder\"]);\r\n        this.min = Utils.getNumberValue(json[\"min\"]);\r\n        this.max = Utils.getNumberValue(json[\"max\"]);\r\n    }\r\n\r\n    get min(): number {\r\n        return this._min;\r\n    }\r\n\r\n    set min(value: number) {\r\n        this._min = value;\r\n    }\r\n\r\n    get max(): number {\r\n        return this._max;\r\n    }\r\n\r\n    set max(value: number) {\r\n        this._max = value;\r\n    }\r\n\r\n    get value(): string {\r\n        return this._numberInputElement ? this._numberInputElement.value : undefined;\r\n    }\r\n\r\n    get valueAsNumber(): number {\r\n        return this._numberInputElement ? this._numberInputElement.valueAsNumber : undefined;\r\n    }\r\n}\r\n\r\nexport class DateInput extends Input {\r\n    private _dateInputElement: HTMLInputElement;\r\n    private _min: string;\r\n    private _max: string;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        this._dateInputElement = document.createElement(\"input\");\r\n        this._dateInputElement.setAttribute(\"type\", \"date\");\r\n        this._dateInputElement.setAttribute(\"min\", this.min);\r\n        this._dateInputElement.setAttribute(\"max\", this.max);\r\n        this._dateInputElement.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-dateInput\");\r\n        this._dateInputElement.style.width = \"100%\";\r\n\r\n        this._dateInputElement.oninput = () => { this.valueChanged(); }\r\n\r\n        if (!Utils.isNullOrEmpty(this.defaultValue)) {\r\n            this._dateInputElement.value = this.defaultValue;\r\n        }\r\n\r\n        return this._dateInputElement;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Input.Date\";\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"min\", this.min);\r\n        Utils.setProperty(result, \"max\", this.max);\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.min = Utils.getStringValue(json[\"min\"]);\r\n        this.max = Utils.getStringValue(json[\"max\"]);\r\n    }\r\n\r\n    get min(): string {\r\n        return this._min;\r\n    }\r\n\r\n    set min(value: string) {\r\n        this._min = this.parseInputValue(value);\r\n    }\r\n\r\n    get max(): string {\r\n        return this._max;\r\n    }\r\n\r\n    set max(value: string) {\r\n        this._max = this.parseInputValue(value);\r\n    }\r\n\r\n    get value(): string {\r\n        return this._dateInputElement ? this._dateInputElement.value : null;\r\n    }\r\n}\r\n\r\nexport class TimeInput extends Input {\r\n    private _timeInputElement: HTMLInputElement;\r\n    private _min: string;\r\n    private _max: string;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        this._timeInputElement = document.createElement(\"input\");\r\n        this._timeInputElement.setAttribute(\"type\", \"time\");\r\n        this._timeInputElement.setAttribute(\"min\", this.min);\r\n        this._timeInputElement.setAttribute(\"max\", this.max);\r\n        this._timeInputElement.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-timeInput\");\r\n        this._timeInputElement.style.width = \"100%\";\r\n        this._timeInputElement.oninput = () => { this.valueChanged(); }\r\n\r\n        if (!Utils.isNullOrEmpty(this.defaultValue)) {\r\n            this._timeInputElement.value = this.defaultValue;\r\n        }\r\n\r\n        return this._timeInputElement;\r\n    }\r\n\r\n    protected parseInputValue(value: string): string {\r\n        if (/^[0-9]{2}:[0-9]{2}$/.test(value)) {\r\n            return value;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Input.Time\";\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"min\", this.min);\r\n        Utils.setProperty(result, \"max\", this.max);\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.min = Utils.getStringValue(json[\"min\"]);\r\n        this.max = Utils.getStringValue(json[\"max\"]);\r\n    }\r\n\r\n    get min(): string {\r\n        return this._min;\r\n    }\r\n\r\n    set min(value: string) {\r\n        this._min = this.parseInputValue(value);\r\n    }\r\n\r\n    get max(): string {\r\n        return this._max;\r\n    }\r\n\r\n    set max(value: string) {\r\n        this._max = this.parseInputValue(value);\r\n    }\r\n\r\n    get value(): string {\r\n        return this._timeInputElement ? this._timeInputElement.value : null;\r\n    }\r\n}\r\n\r\nenum ActionButtonState {\r\n    Normal,\r\n    Expanded,\r\n    Subdued\r\n}\r\n\r\nclass ActionButton {\r\n    private _parentContainerStyle: string;\r\n    private _state: ActionButtonState = ActionButtonState.Normal;\r\n\r\n    private updateCssStyle() {\r\n        let hostConfig = this.action.parent.hostConfig;\r\n\r\n        this.action.renderedElement.className = hostConfig.makeCssClassName(\"ac-pushButton\");\r\n\r\n        if (!Utils.isNullOrEmpty(this._parentContainerStyle)) {\r\n            this.action.renderedElement.classList.add(\"style-\" + this._parentContainerStyle);\r\n        }\r\n\r\n        if (this.action instanceof ShowCardAction) {\r\n            this.action.renderedElement.classList.add(hostConfig.makeCssClassName(\"expandable\"));\r\n        }\r\n\r\n        this.action.renderedElement.classList.remove(hostConfig.makeCssClassName(\"expanded\"));\r\n        this.action.renderedElement.classList.remove(hostConfig.makeCssClassName(\"subdued\"));\r\n\r\n        switch (this._state) {\r\n            case ActionButtonState.Expanded:\r\n                this.action.renderedElement.classList.add(hostConfig.makeCssClassName(\"expanded\"));\r\n                break;\r\n            case ActionButtonState.Subdued:\r\n                this.action.renderedElement.classList.add(hostConfig.makeCssClassName(\"subdued\"));\r\n                break;\r\n        }\r\n\r\n        if (!Utils.isNullOrEmpty(this.action.style)) {\r\n            if (this.action.style === Enums.ActionStyle.Positive) {\r\n                this.action.renderedElement.classList.add(...hostConfig.makeCssClassNames(\"primary\", \"style-positive\"));\r\n            }\r\n            else {\r\n                this.action.renderedElement.classList.add(...hostConfig.makeCssClassNames(\"style-\" + this.action.style.toLowerCase()));\r\n             }\r\n        }\r\n    }\r\n\r\n    readonly action: Action;\r\n\r\n    constructor(action: Action, parentContainerStyle: string) {\r\n        this.action = action;\r\n        this._parentContainerStyle = parentContainerStyle;\r\n    }\r\n\r\n    onClick: (actionButton: ActionButton) => void = null;\r\n\r\n    render() {\r\n        this.action.render();\r\n        this.action.renderedElement.onclick = (e) => {\r\n            e.preventDefault();\r\n            e.cancelBubble = true;\r\n\r\n            this.click();\r\n        };\r\n\r\n        this.updateCssStyle();\r\n    }\r\n\r\n    click() {\r\n        if (this.onClick != null) {\r\n            this.onClick(this);\r\n        }\r\n    }\r\n\r\n    get state(): ActionButtonState {\r\n        return this._state;\r\n    }\r\n\r\n    set state(value: ActionButtonState) {\r\n        this._state = value;\r\n\r\n        this.updateCssStyle();\r\n    }\r\n}\r\n\r\nexport abstract class Action extends CardObject {\r\n    private _shouldFallback: boolean = false;\r\n    private _parent: CardElement = null;\r\n    private _actionCollection: ActionCollection = null; // hold the reference to its action collection\r\n    private _renderedElement: HTMLElement = null;\r\n\r\n    private setCollection(actionCollection: ActionCollection) {\r\n        this._actionCollection = actionCollection;\r\n    }\r\n\r\n    protected addCssClasses(element: HTMLElement) {\r\n        // Do nothing in base implementation\r\n    }\r\n\r\n    protected internalGetReferencedInputs(allInputs: Array<Input>): Shared.Dictionary<Input> {\r\n        return {};\r\n    }\r\n\r\n    protected internalPrepareForExecution(inputs: Shared.Dictionary<Input>) {\r\n        // Do nothing in base implementation\r\n    }\r\n\r\n    protected internalValidateInputs(referencedInputs: Shared.Dictionary<Input>): Array<Input> {\r\n        let result: Input[] = [];\r\n\r\n        if (AdaptiveCard.useBuiltInInputValidation && !this.ignoreInputValidation) {\r\n            for (let key of Object.keys(referencedInputs)) {\r\n                let input = referencedInputs[key];\r\n\r\n                if (!input.validateValue()) {\r\n                    result.push(input);\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    abstract getJsonTypeName(): string;\r\n\r\n    readonly requires = new HostConfig.HostCapabilities();\r\n\r\n    title: string;\r\n    iconUrl: string;\r\n    style: string = Enums.ActionStyle.Default;\r\n\r\n    onExecute: (sender: Action) => void;\r\n\r\n    getAriaRole(): string {\r\n        return \"button\";\r\n    }\r\n\r\n    getHref(): string {\r\n        return \"\";\r\n    }\r\n\r\n    toJSON(): any {\r\n\t\tlet result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"type\", this.getJsonTypeName());\r\n        Utils.setProperty(result, \"title\", this.title);\r\n        Utils.setProperty(result, \"iconUrl\", this.iconUrl);\r\n        Utils.setProperty(result, \"style\", this.style, Enums.ActionStyle.Default);\r\n\r\n        return result;\r\n    }\r\n\r\n    render(baseCssClass: string = \"ac-pushButton\") {\r\n        // Cache hostConfig for perf\r\n        let hostConfig = this.parent.hostConfig;\r\n\r\n        let buttonElement = document.createElement(\"button\");\r\n\r\n        this.addCssClasses(buttonElement);\r\n\r\n        buttonElement.setAttribute(\"aria-label\", this.title);\r\n        buttonElement.type = \"button\";\r\n        buttonElement.style.display = \"flex\";\r\n        buttonElement.style.alignItems = \"center\";\r\n        buttonElement.style.justifyContent = \"center\";\r\n\r\n        buttonElement.setAttribute(\"role\", this.getAriaRole());\r\n\r\n        let hasTitle = !Utils.isNullOrEmpty(this.title);\r\n\r\n        let titleElement = document.createElement(\"div\");\r\n        titleElement.style.overflow = \"hidden\";\r\n        titleElement.style.textOverflow = \"ellipsis\";\r\n\r\n        if (!(hostConfig.actions.iconPlacement == Enums.ActionIconPlacement.AboveTitle || hostConfig.actions.allowTitleToWrap)) {\r\n            titleElement.style.whiteSpace = \"nowrap\";\r\n        }\r\n\r\n        if (hasTitle) {\r\n            titleElement.innerText = this.title;\r\n        }\r\n\r\n        if (Utils.isNullOrEmpty(this.iconUrl)) {\r\n            buttonElement.classList.add(\"noIcon\");\r\n\r\n            buttonElement.appendChild(titleElement);\r\n        }\r\n        else {\r\n            let iconElement = document.createElement(\"img\");\r\n            iconElement.src = this.iconUrl;\r\n            iconElement.style.width = hostConfig.actions.iconSize + \"px\";\r\n            iconElement.style.height = hostConfig.actions.iconSize + \"px\";\r\n            iconElement.style.flex = \"0 0 auto\";\r\n\r\n            if (hostConfig.actions.iconPlacement == Enums.ActionIconPlacement.AboveTitle) {\r\n                buttonElement.classList.add(\"iconAbove\");\r\n                buttonElement.style.flexDirection = \"column\";\r\n\r\n                if (hasTitle) {\r\n                    iconElement.style.marginBottom = \"4px\";\r\n                }\r\n            }\r\n            else {\r\n                buttonElement.classList.add(\"iconLeft\");\r\n\r\n                if (hasTitle) {\r\n                    iconElement.style.marginRight = \"4px\";\r\n                }\r\n            }\r\n\r\n            buttonElement.appendChild(iconElement);\r\n            buttonElement.appendChild(titleElement);\r\n        }\r\n\r\n        this._renderedElement = buttonElement;\r\n    }\r\n\r\n    setParent(value: CardElement) {\r\n        this._parent = value;\r\n    }\r\n\r\n    execute() {\r\n        if (this.onExecute) {\r\n            this.onExecute(this);\r\n        }\r\n\r\n        raiseExecuteActionEvent(this);\r\n    }\r\n\r\n    prepareForExecution(): boolean {\r\n        let referencedInputs = this.getReferencedInputs();\r\n\r\n        if (this.internalValidateInputs(referencedInputs).length > 0) {\r\n            return false;\r\n        }\r\n\r\n        this.internalPrepareForExecution(referencedInputs);\r\n\r\n        return true;\r\n    };\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n\t\tsuper.parse(json, errors);\r\n\r\n        raiseParseActionEvent(this, json, errors);\r\n\r\n        this.requires.parse(json[\"requires\"], errors);\r\n\r\n        if (!json[\"title\"] && json[\"title\"] !== \"\") {\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.PropertyCantBeNull,\r\n                    message: \"Actions should always have a title.\"\r\n                },\r\n                errors\r\n            );\r\n        }\r\n\r\n        this.title = Utils.getStringValue(json[\"title\"]);\r\n        this.iconUrl = Utils.getStringValue(json[\"iconUrl\"]);\r\n        this.style = Utils.getStringValue(json[\"style\"], this.style);\r\n    }\r\n\r\n    remove(): boolean {\r\n        if (this._actionCollection) {\r\n            return this._actionCollection.removeAction(this);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        return [];\r\n    }\r\n\r\n    getResourceInformation(): Array<Shared.IResourceInformation> {\r\n        if (!Utils.isNullOrEmpty(this.iconUrl)) {\r\n            return [{ url: this.iconUrl, mimeType: \"image\" }]\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    getActionById(id: string): Action {\r\n        if (this.id == id) {\r\n            return this;\r\n        }\r\n    }\r\n\r\n    getReferencedInputs(): Shared.Dictionary<Input> {\r\n        return this.internalGetReferencedInputs(this.parent.getRootElement().getAllInputs());\r\n    }\r\n\r\n    validateInputs() {\r\n        return this.internalValidateInputs(this.getReferencedInputs());\r\n    }\r\n\r\n    shouldFallback(): boolean {\r\n        return this._shouldFallback || !this.requires.areAllMet(this.parent.hostConfig.hostCapabilities);\r\n    }\r\n\r\n    get isPrimary(): boolean {\r\n        return this.style == Enums.ActionStyle.Positive;\r\n    }\r\n\r\n    set isPrimary(value: boolean) {\r\n        if (value) {\r\n            this.style = Enums.ActionStyle.Positive;\r\n        }\r\n        else {\r\n            if (this.style == Enums.ActionStyle.Positive) {\r\n                this.style = Enums.ActionStyle.Default;\r\n            }\r\n        }\r\n    }\r\n\r\n    get ignoreInputValidation(): boolean {\r\n        return true;\r\n    }\r\n\r\n    get parent(): CardElement {\r\n        return this._parent;\r\n    }\r\n\r\n    get renderedElement(): HTMLElement {\r\n        return this._renderedElement;\r\n    }\r\n}\r\n\r\nexport class SubmitAction extends Action {\r\n    // Note the \"weird\" way this field is declared is to work around a breaking\r\n    // change introduced in TS 3.1 wrt d.ts generation. DO NOT CHANGE\r\n    static readonly JsonTypeName: \"Action.Submit\" = \"Action.Submit\";\r\n\r\n    private _isPrepared: boolean = false;\r\n    private _originalData: Object;\r\n    private _processedData: Object;\r\n    private _ignoreInputValidation: boolean = false;\r\n\r\n    protected internalGetReferencedInputs(allInputs: Array<Input>): Shared.Dictionary<Input> {\r\n        let result: Shared.Dictionary<Input> = {};\r\n\r\n        for (let input of allInputs) {\r\n            result[input.id] = input;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    protected internalPrepareForExecution(inputs: Shared.Dictionary<Input>) {\r\n        if (this._originalData) {\r\n            this._processedData = JSON.parse(JSON.stringify(this._originalData));\r\n        }\r\n        else {\r\n            this._processedData = {};\r\n        }\r\n\r\n        for (let key of Object.keys(inputs)) {\r\n            let input = inputs[key];\r\n\r\n            if (input.value != null) {\r\n                this._processedData[input.id] = input.value;\r\n            }\r\n        }\r\n\r\n        this._isPrepared = true;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return SubmitAction.JsonTypeName;\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"ignoreInputValidation\", this.ignoreInputValidation, false);\r\n        Utils.setProperty(result, \"data\", this._originalData);\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this._ignoreInputValidation = Utils.getBoolValue(json[\"ignoreInputValidation\"], this._ignoreInputValidation);\r\n        this.data = json[\"data\"];\r\n    }\r\n\r\n    get ignoreInputValidation(): boolean {\r\n        return this._ignoreInputValidation;\r\n    }\r\n\r\n    set ignoreInputValidation(value: boolean) {\r\n        this._ignoreInputValidation = value;\r\n    }\r\n\r\n    get data(): Object {\r\n        return this._isPrepared ? this._processedData : this._originalData;\r\n    }\r\n\r\n    set data(value: Object) {\r\n        this._originalData = value;\r\n        this._isPrepared = false;\r\n    }\r\n}\r\n\r\nexport class OpenUrlAction extends Action {\r\n    // Note the \"weird\" way this field is declared is to work around a breaking\r\n    // change introduced in TS 3.1 wrt d.ts generation. DO NOT CHANGE\r\n    static readonly JsonTypeName: \"Action.OpenUrl\" = \"Action.OpenUrl\";\r\n\r\n    url: string;\r\n\r\n    getJsonTypeName(): string {\r\n        return OpenUrlAction.JsonTypeName;\r\n    }\r\n\r\n    getAriaRole(): string {\r\n        return \"link\";\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"url\", this.url);\r\n\r\n        return result;\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        if (Utils.isNullOrEmpty(this.url)) {\r\n            context.addFailure(\r\n                this,\r\n                {\r\n                    error: Enums.ValidationError.PropertyCantBeNull,\r\n                    message: \"An Action.OpenUrl must have its url property set.\"\r\n                });\r\n        }\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.url = Utils.getStringValue(json[\"url\"]);\r\n    }\r\n\r\n    getHref(): string {\r\n        return this.url;\r\n    }\r\n}\r\n\r\nexport class ToggleVisibilityAction extends Action {\r\n    // Note the \"weird\" way this field is declared is to work around a breaking\r\n    // change introduced in TS 3.1 wrt d.ts generation. DO NOT CHANGE\r\n    static readonly JsonTypeName: \"Action.ToggleVisibility\" = \"Action.ToggleVisibility\";\r\n\r\n    targetElements = {}\r\n\r\n    getJsonTypeName(): string {\r\n        return ToggleVisibilityAction.JsonTypeName;\r\n    }\r\n\r\n    execute() {\r\n        for (let elementId of Object.keys(this.targetElements)) {\r\n            let targetElement = this.parent.getRootElement().getElementById(elementId);\r\n\r\n            if (targetElement) {\r\n                if (typeof this.targetElements[elementId] === \"boolean\") {\r\n                    targetElement.isVisible = this.targetElements[elementId];\r\n                }\r\n                else {\r\n                    targetElement.isVisible = !targetElement.isVisible;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    parse(json: any) {\r\n        super.parse(json);\r\n\r\n        this.targetElements = {};\r\n\r\n        let jsonTargetElements = json[\"targetElements\"];\r\n\r\n        if (jsonTargetElements && Array.isArray(jsonTargetElements)) {\r\n            for (let item of jsonTargetElements) {\r\n                if (typeof item === \"string\") {\r\n                    this.targetElements[item] = undefined;\r\n                }\r\n                else if (typeof item === \"object\") {\r\n                    let jsonElementId = item[\"elementId\"];\r\n\r\n                    if (jsonElementId && typeof jsonElementId === \"string\") {\r\n                        this.targetElements[jsonElementId] = Utils.getBoolValue(item[\"isVisible\"], undefined);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        let targetElements: any[] = [];\r\n\r\n        for (let id of Object.keys(this.targetElements)) {\r\n            if (typeof this.targetElements[id] === \"boolean\") {\r\n                targetElements.push(\r\n                    {\r\n                        elementId: id,\r\n                        isVisible: this.targetElements[id]\r\n                    }\r\n                );\r\n            }\r\n            else {\r\n                targetElements.push(id);\r\n            }\r\n        }\r\n\r\n        result[\"targetElements\"] = targetElements;\r\n\r\n        return result;\r\n    }\r\n\r\n    addTargetElement(elementId: string, isVisible: boolean = undefined) {\r\n        this.targetElements[elementId] = isVisible;\r\n    }\r\n\r\n    removeTargetElement(elementId) {\r\n        delete this.targetElements[elementId];\r\n    }\r\n}\r\n\r\nexport class HttpHeader extends SerializableObject {\r\n    private _value = new Shared.StringWithSubstitutions();\r\n\r\n    name: string;\r\n\r\n    constructor(name: string = \"\", value: string = \"\") {\r\n        super();\r\n\r\n        this.name = name;\r\n        this.value = value;\r\n    }\r\n\r\n    parse(json: any) {\r\n        super.parse(json);\r\n\r\n        this.name = Utils.getStringValue(json[\"name\"]);\r\n        this.value = Utils.getStringValue(json[\"value\"]);\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"name\", this.name);\r\n        Utils.setProperty(result, \"value\", this._value.getOriginal());\r\n\r\n        return result;\r\n    }\r\n\r\n    getReferencedInputs(inputs: Array<Input>, referencedInputs: Shared.Dictionary<Input>) {\r\n        this._value.getReferencedInputs(inputs, referencedInputs);\r\n    }\r\n\r\n    prepareForExecution(inputs: Shared.Dictionary<Input>) {\r\n        this._value.substituteInputValues(inputs, Shared.ContentTypes.applicationXWwwFormUrlencoded);\r\n    }\r\n\r\n    get value(): string {\r\n        return this._value.get();\r\n    }\r\n\r\n    set value(newValue: string) {\r\n        this._value.set(newValue);\r\n    }\r\n}\r\n\r\nexport class HttpAction extends Action {\r\n    // Note the \"weird\" way this field is declared is to work around a breaking\r\n    // change introduced in TS 3.1 wrt d.ts generation. DO NOT CHANGE\r\n    static readonly JsonTypeName: \"Action.Http\" = \"Action.Http\";\r\n\r\n    private _url = new Shared.StringWithSubstitutions();\r\n    private _body = new Shared.StringWithSubstitutions();\r\n    private _headers: Array<HttpHeader> = [];\r\n    private _ignoreInputValidation: boolean = false;\r\n\r\n    protected internalGetReferencedInputs(allInputs: Array<Input>): Shared.Dictionary<Input> {\r\n        let result: Shared.Dictionary<Input> = {};\r\n\r\n        this._url.getReferencedInputs(allInputs, result);\r\n\r\n        for (let header of this._headers) {\r\n            header.getReferencedInputs(allInputs, result);\r\n        }\r\n\r\n        this._body.getReferencedInputs(allInputs, result);\r\n\r\n        return result;\r\n    }\r\n\r\n    protected internalPrepareForExecution(inputs: Shared.Dictionary<Input>) {\r\n        this._url.substituteInputValues(inputs, Shared.ContentTypes.applicationXWwwFormUrlencoded);\r\n\r\n        let contentType = Shared.ContentTypes.applicationJson;\r\n\r\n        for (let header of this._headers) {\r\n            header.prepareForExecution(inputs);\r\n\r\n            if (header.name && header.name.toLowerCase() == \"content-type\") {\r\n                contentType = header.value;\r\n            }\r\n        }\r\n\r\n        this._body.substituteInputValues(inputs, contentType);\r\n    };\r\n\r\n    method: string;\r\n\r\n    getJsonTypeName(): string {\r\n        return HttpAction.JsonTypeName;\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"method\", this.method);\r\n        Utils.setProperty(result, \"url\", this._url.getOriginal());\r\n        Utils.setProperty(result, \"body\", this._body.getOriginal());\r\n        Utils.setProperty(result, \"ignoreInputValidation\", this.ignoreInputValidation, false);\r\n        Utils.setArrayProperty(result, \"headers\", this.headers);\r\n\r\n        return result;\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        if (Utils.isNullOrEmpty(this.url)) {\r\n            context.addFailure(\r\n                this,\r\n                {\r\n                    error: Enums.ValidationError.PropertyCantBeNull,\r\n                    message: \"An Action.Http must have its url property set.\"\r\n                });\r\n        }\r\n\r\n        if (this.headers.length > 0) {\r\n            for (let header of this.headers) {\r\n                if (!header.name) {\r\n                    context.addFailure(\r\n                        this,\r\n                        {\r\n                            error: Enums.ValidationError.PropertyCantBeNull,\r\n                            message: \"All headers of an Action.Http must have their name and value properties set.\"\r\n                        });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.url = Utils.getStringValue(json[\"url\"]);\r\n        this.method = Utils.getStringValue(json[\"method\"]);\r\n        this.body = Utils.getStringValue(json[\"body\"]);\r\n        this._ignoreInputValidation = Utils.getBoolValue(json[\"ignoreInputValidation\"], this._ignoreInputValidation);\r\n\r\n        this._headers = [];\r\n\r\n        if (Array.isArray(json[\"headers\"])) {\r\n            for (let jsonHeader of json[\"headers\"]) {\r\n                let httpHeader = new HttpHeader();\r\n                httpHeader.parse(jsonHeader);\r\n\r\n                this.headers.push(httpHeader);\r\n            }\r\n        }\r\n    }\r\n\r\n    get ignoreInputValidation(): boolean {\r\n        return this._ignoreInputValidation;\r\n    }\r\n\r\n    set ignoreInputValidation(value: boolean) {\r\n        this._ignoreInputValidation = value;\r\n    }\r\n\r\n    get url(): string {\r\n        return this._url.get();\r\n    }\r\n\r\n    set url(value: string) {\r\n        this._url.set(value);\r\n    }\r\n\r\n    get body(): string {\r\n        return this._body.get();\r\n    }\r\n\r\n    set body(value: string) {\r\n        this._body.set(value);\r\n    }\r\n\r\n    get headers(): Array<HttpHeader> {\r\n        return this._headers ? this._headers : [];\r\n    }\r\n\r\n    set headers(value: Array<HttpHeader>) {\r\n        this._headers = value;\r\n    }\r\n}\r\n\r\nexport class ShowCardAction extends Action {\r\n    // Note the \"weird\" way this field is declared is to work around a breaking\r\n    // change introduced in TS 3.1 wrt d.ts generation. DO NOT CHANGE\r\n    static readonly JsonTypeName: \"Action.ShowCard\" = \"Action.ShowCard\";\r\n\r\n    protected addCssClasses(element: HTMLElement) {\r\n        super.addCssClasses(element);\r\n\r\n        element.classList.add(this.parent.hostConfig.makeCssClassName(\"expandable\"));\r\n    }\r\n\r\n    readonly card: AdaptiveCard = new InlineAdaptiveCard();\r\n\r\n    getJsonTypeName(): string {\r\n        return ShowCardAction.JsonTypeName;\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        if (this.card) {\r\n            Utils.setProperty(result, \"card\", this.card.toJSON());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        this.card.internalValidateProperties(context);\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        let jsonCard = json[\"card\"];\r\n\r\n        if (jsonCard) {\r\n            this.card.parse(jsonCard, errors);\r\n        }\r\n        else {\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.PropertyCantBeNull,\r\n                    message: \"An Action.ShowCard must have its \\\"card\\\" property set to a valid AdaptiveCard object.\"\r\n                },\r\n                errors\r\n            );\r\n        }\r\n    }\r\n\r\n    setParent(value: CardElement) {\r\n        super.setParent(value);\r\n\r\n        this.card.setParent(value);\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        return this.card.getAllInputs();\r\n    }\r\n\r\n    getResourceInformation(): Array<Shared.IResourceInformation> {\r\n        return super.getResourceInformation().concat(this.card.getResourceInformation());\r\n    }\r\n\r\n    getActionById(id: string): Action {\r\n        var result = super.getActionById(id);\r\n\r\n        if (!result) {\r\n            result = this.card.getActionById(id);\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nclass ActionCollection {\r\n    private _owner: CardElement;\r\n    private _actionCardContainer: HTMLDivElement;\r\n    private _expandedAction: ShowCardAction = null;\r\n    private _renderedActionCount: number = 0;\r\n    private _actionCard: HTMLElement = null;\r\n\r\n    private refreshContainer() {\r\n        this._actionCardContainer.innerHTML = \"\";\r\n\r\n        if (this._actionCard === null) {\r\n            this._actionCardContainer.style.marginTop = \"0px\";\r\n\r\n            return;\r\n        }\r\n\r\n        this._actionCardContainer.style.marginTop = this._renderedActionCount > 0 ? this._owner.hostConfig.actions.showCard.inlineTopMargin + \"px\" : \"0px\";\r\n\r\n        let padding = this._owner.getEffectivePadding();\r\n\r\n        this._owner.getImmediateSurroundingPadding(padding);\r\n\r\n        let physicalPadding = this._owner.hostConfig.paddingDefinitionToSpacingDefinition(padding);\r\n\r\n        if (this._actionCard !== null) {\r\n            this._actionCard.style.paddingLeft = physicalPadding.left + \"px\";\r\n            this._actionCard.style.paddingRight = physicalPadding.right + \"px\";\r\n\r\n            this._actionCard.style.marginLeft = \"-\" + physicalPadding.left + \"px\";\r\n            this._actionCard.style.marginRight = \"-\" + physicalPadding.right + \"px\";\r\n\r\n            if (physicalPadding.bottom != 0 && !this._owner.isDesignMode()) {\r\n                this._actionCard.style.paddingBottom = physicalPadding.bottom + \"px\";\r\n                this._actionCard.style.marginBottom = \"-\" + physicalPadding.bottom + \"px\";\r\n            }\r\n\r\n            Utils.appendChild(this._actionCardContainer, this._actionCard);\r\n        }\r\n    }\r\n\r\n    private layoutChanged() {\r\n        this._owner.getRootElement().updateLayout();\r\n    }\r\n\r\n    private hideActionCard() {\r\n        var previouslyExpandedAction = this._expandedAction;\r\n\r\n        this._expandedAction = null;\r\n        this._actionCard = null;\r\n\r\n        this.refreshContainer();\r\n\r\n        if (previouslyExpandedAction) {\r\n            this.layoutChanged();\r\n\r\n            raiseInlineCardExpandedEvent(previouslyExpandedAction, false);\r\n        }\r\n    }\r\n\r\n    private showActionCard(action: ShowCardAction, suppressStyle: boolean = false, raiseEvent: boolean = true) {\r\n        if (action.card == null) {\r\n            return;\r\n        }\r\n\r\n        (<InlineAdaptiveCard>action.card).suppressStyle = suppressStyle;\r\n\r\n        var renderedCard = action.card.renderedElement ? action.card.renderedElement : action.card.render();\r\n\r\n        this._actionCard = renderedCard;\r\n        this._expandedAction = action;\r\n\r\n        this.refreshContainer();\r\n\r\n        if (raiseEvent) {\r\n            this.layoutChanged();\r\n\r\n            raiseInlineCardExpandedEvent(action, true);\r\n        }\r\n    }\r\n\r\n    private collapseExpandedAction() {\r\n        for (var i = 0; i < this.buttons.length; i++) {\r\n            this.buttons[i].state = ActionButtonState.Normal;\r\n        }\r\n\r\n        this.hideActionCard();\r\n    }\r\n\r\n    private expandShowCardAction(action: ShowCardAction, raiseEvent: boolean) {\r\n        for (var i = 0; i < this.buttons.length; i++) {\r\n            if (this.buttons[i].action !== action) {\r\n                this.buttons[i].state = ActionButtonState.Subdued;\r\n            }\r\n            else {\r\n                this.buttons[i].state = ActionButtonState.Expanded;\r\n            }\r\n        }\r\n\r\n        this.showActionCard(\r\n            action,\r\n            !(this._owner.isAtTheVeryLeft() && this._owner.isAtTheVeryRight()),\r\n            raiseEvent);\r\n    }\r\n\r\n    private actionClicked(actionButton: ActionButton) {\r\n        if (!(actionButton.action instanceof ShowCardAction)) {\r\n            for (var i = 0; i < this.buttons.length; i++) {\r\n                this.buttons[i].state = ActionButtonState.Normal;\r\n            }\r\n\r\n            this.hideActionCard();\r\n\r\n            actionButton.action.execute();\r\n        }\r\n        else {\r\n            if (this._owner.hostConfig.actions.showCard.actionMode === Enums.ShowCardActionMode.Popup) {\r\n                actionButton.action.execute();\r\n            }\r\n            else if (actionButton.action === this._expandedAction) {\r\n                this.collapseExpandedAction();\r\n            }\r\n            else {\r\n                this.expandShowCardAction(actionButton.action, true);\r\n            }\r\n        }\r\n    }\r\n\r\n    private getParentContainer(): Container {\r\n        if (this._owner instanceof Container) {\r\n            return this._owner;\r\n        }\r\n        else {\r\n            return this._owner.getParentContainer();\r\n        }\r\n    }\r\n\r\n    private findActionButton(action: Action): ActionButton {\r\n        for (let actionButton of this.buttons) {\r\n            if (actionButton.action == action) {\r\n                return actionButton;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    items: Array<Action> = [];\r\n    buttons: Array<ActionButton> = [];\r\n\r\n    constructor(owner: CardElement) {\r\n        this._owner = owner;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        this.clear();\r\n\r\n        if (json && json instanceof Array) {\r\n            for (let jsonAction of json) {\r\n                let action = createActionInstance(\r\n                    this._owner,\r\n                    jsonAction,\r\n                    [],\r\n                    !this._owner.isDesignMode(),\r\n                    errors);\r\n\r\n                if (action) {\r\n                    this.addAction(action);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    toJSON(): any {\r\n        if (this.items.length > 0) {\r\n            let result = [];\r\n\r\n            for (let action of this.items) {\r\n                result.push(action.toJSON());\r\n            }\r\n\r\n            return result;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    getActionById(id: string): Action {\r\n        var result: Action = null;\r\n\r\n        for (var i = 0; i < this.items.length; i++) {\r\n            result = this.items[i].getActionById(id);\r\n\r\n            if (result) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    validateProperties(context: ValidationResults) {\r\n        if (this._owner.hostConfig.actions.maxActions && this.items.length > this._owner.hostConfig.actions.maxActions) {\r\n            context.addFailure(\r\n                this._owner,\r\n                {\r\n                    error: Enums.ValidationError.TooManyActions,\r\n                    message: \"A maximum of \" + this._owner.hostConfig.actions.maxActions + \" actions are allowed.\"\r\n                });\r\n        }\r\n\r\n        if (this.items.length > 0 && !this._owner.hostConfig.supportsInteractivity) {\r\n            context.addFailure(\r\n                this._owner,\r\n                {\r\n                    error: Enums.ValidationError.InteractivityNotAllowed,\r\n                    message: \"Interactivity is not allowed.\"\r\n                });\r\n        }\r\n\r\n        for (let item of this.items) {\r\n            if (!isActionAllowed(item, this._owner.getForbiddenActionTypes())) {\r\n                context.addFailure(\r\n                    this._owner,\r\n                    {\r\n                        error: Enums.ValidationError.ActionTypeNotAllowed,\r\n                        message: \"Actions of type \" + item.getJsonTypeName() + \" are not allowe.\"\r\n                    });\r\n            }\r\n\r\n            item.internalValidateProperties(context);\r\n        }\r\n    }\r\n\r\n    render(orientation: Enums.Orientation, isDesignMode: boolean): HTMLElement {\r\n        // Cache hostConfig for better perf\r\n        let hostConfig = this._owner.hostConfig;\r\n\r\n        if (!hostConfig.supportsInteractivity) {\r\n            return null;\r\n        }\r\n\r\n        let element = document.createElement(\"div\");\r\n        let maxActions = hostConfig.actions.maxActions ? Math.min(hostConfig.actions.maxActions, this.items.length) : this.items.length;\r\n        let forbiddenActionTypes = this._owner.getForbiddenActionTypes();\r\n\r\n        this._actionCardContainer = document.createElement(\"div\");\r\n        this._renderedActionCount = 0;\r\n\r\n        if (hostConfig.actions.preExpandSingleShowCardAction && maxActions == 1 && this.items[0] instanceof ShowCardAction && isActionAllowed(this.items[0], forbiddenActionTypes)) {\r\n            this.showActionCard(<ShowCardAction>this.items[0], true);\r\n            this._renderedActionCount = 1;\r\n        }\r\n        else {\r\n            let buttonStrip = document.createElement(\"div\");\r\n            buttonStrip.className = hostConfig.makeCssClassName(\"ac-actionSet\");\r\n            buttonStrip.style.display = \"flex\";\r\n\r\n            if (orientation == Enums.Orientation.Horizontal) {\r\n                buttonStrip.style.flexDirection = \"row\";\r\n\r\n                if (this._owner.horizontalAlignment && hostConfig.actions.actionAlignment != Enums.ActionAlignment.Stretch) {\r\n                    switch (this._owner.horizontalAlignment) {\r\n                        case Enums.HorizontalAlignment.Center:\r\n                            buttonStrip.style.justifyContent = \"center\";\r\n                            break;\r\n                        case Enums.HorizontalAlignment.Right:\r\n                            buttonStrip.style.justifyContent = \"flex-end\";\r\n                            break;\r\n                        default:\r\n                            buttonStrip.style.justifyContent = \"flex-start\";\r\n                            break;\r\n                    }\r\n                }\r\n                else {\r\n                    switch (hostConfig.actions.actionAlignment) {\r\n                        case Enums.ActionAlignment.Center:\r\n                            buttonStrip.style.justifyContent = \"center\";\r\n                            break;\r\n                        case Enums.ActionAlignment.Right:\r\n                            buttonStrip.style.justifyContent = \"flex-end\";\r\n                            break;\r\n                        default:\r\n                            buttonStrip.style.justifyContent = \"flex-start\";\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                buttonStrip.style.flexDirection = \"column\";\r\n\r\n                if (this._owner.horizontalAlignment && hostConfig.actions.actionAlignment != Enums.ActionAlignment.Stretch) {\r\n                    switch (this._owner.horizontalAlignment) {\r\n                        case Enums.HorizontalAlignment.Center:\r\n                            buttonStrip.style.alignItems = \"center\";\r\n                            break;\r\n                        case Enums.HorizontalAlignment.Right:\r\n                            buttonStrip.style.alignItems = \"flex-end\";\r\n                            break;\r\n                        default:\r\n                            buttonStrip.style.alignItems = \"flex-start\";\r\n                            break;\r\n                    }\r\n                }\r\n                else {\r\n                    switch (hostConfig.actions.actionAlignment) {\r\n                        case Enums.ActionAlignment.Center:\r\n                            buttonStrip.style.alignItems = \"center\";\r\n                            break;\r\n                        case Enums.ActionAlignment.Right:\r\n                            buttonStrip.style.alignItems = \"flex-end\";\r\n                            break;\r\n                        case Enums.ActionAlignment.Stretch:\r\n                            buttonStrip.style.alignItems = \"stretch\";\r\n                            break;\r\n                        default:\r\n                            buttonStrip.style.alignItems = \"flex-start\";\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            let parentContainerStyle = this.getParentContainer().getEffectiveStyle();\r\n\r\n            for (let i = 0; i < this.items.length; i++) {\r\n                if (isActionAllowed(this.items[i], forbiddenActionTypes)) {\r\n                    let actionButton: ActionButton = this.findActionButton(this.items[i]);\r\n\r\n                    if (!actionButton) {\r\n                        actionButton = new ActionButton(this.items[i], parentContainerStyle);\r\n                        actionButton.onClick = (ab) => { this.actionClicked(ab); };\r\n\r\n                        this.buttons.push(actionButton);\r\n                    }\r\n\r\n                    actionButton.render();\r\n\r\n                    if (hostConfig.actions.actionsOrientation == Enums.Orientation.Horizontal && hostConfig.actions.actionAlignment == Enums.ActionAlignment.Stretch) {\r\n                        actionButton.action.renderedElement.style.flex = \"0 1 100%\";\r\n                    }\r\n                    else {\r\n                        actionButton.action.renderedElement.style.flex = \"0 1 auto\";\r\n                    }\r\n\r\n                    buttonStrip.appendChild(actionButton.action.renderedElement);\r\n\r\n                    this._renderedActionCount++;\r\n\r\n                    if (this._renderedActionCount >= hostConfig.actions.maxActions || i == this.items.length - 1) {\r\n                        break;\r\n                    }\r\n                    else if (hostConfig.actions.buttonSpacing > 0) {\r\n                        var spacer = document.createElement(\"div\");\r\n\r\n                        if (orientation === Enums.Orientation.Horizontal) {\r\n                            spacer.style.flex = \"0 0 auto\";\r\n                            spacer.style.width = hostConfig.actions.buttonSpacing + \"px\";\r\n                        }\r\n                        else {\r\n                            spacer.style.height = hostConfig.actions.buttonSpacing + \"px\";\r\n                        }\r\n\r\n                        Utils.appendChild(buttonStrip, spacer);\r\n                    }\r\n                }\r\n            }\r\n\r\n            let buttonStripContainer = document.createElement(\"div\");\r\n            buttonStripContainer.style.overflow = \"hidden\";\r\n            buttonStripContainer.appendChild(buttonStrip);\r\n\r\n            Utils.appendChild(element, buttonStripContainer);\r\n        }\r\n\r\n        Utils.appendChild(element, this._actionCardContainer);\r\n\r\n        for (let i = 0; i < this.buttons.length; i++) {\r\n            if (this.buttons[i].state == ActionButtonState.Expanded) {\r\n                this.expandShowCardAction(<ShowCardAction>this.buttons[i].action, false);\r\n\r\n                break;\r\n            }\r\n        }\r\n\r\n        return this._renderedActionCount > 0 ? element : null;\r\n    }\r\n\r\n    addAction(action: Action) {\r\n        if (!action) {\r\n            throw new Error(\"The action parameter cannot be null.\");\r\n        }\r\n\r\n        if ((!action.parent || action.parent === this._owner) && this.items.indexOf(action) < 0) {\r\n            this.items.push(action);\r\n\r\n            if (!action.parent) {\r\n                action.setParent(this._owner);\r\n            }\r\n\r\n            invokeSetCollection(action, this);\r\n        }\r\n        else {\r\n            throw new Error(\"The action already belongs to another element.\");\r\n        }\r\n    }\r\n\r\n    removeAction(action: Action): boolean {\r\n        if (this.expandedAction && this._expandedAction == action) {\r\n            this.collapseExpandedAction();\r\n        }\r\n\r\n        var actionIndex = this.items.indexOf(action);\r\n\r\n        if (actionIndex >= 0) {\r\n            this.items.splice(actionIndex, 1);\r\n\r\n            action.setParent(null);\r\n\r\n            invokeSetCollection(action, null);\r\n\r\n            for (let i = 0; i < this.buttons.length; i++) {\r\n                if (this.buttons[i].action == action) {\r\n                    this.buttons.splice(i, 1);\r\n\r\n                    break;\r\n                }\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    clear() {\r\n        this.items = [];\r\n        this.buttons = [];\r\n\r\n        this._expandedAction = null;\r\n        this._renderedActionCount = 0;\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        var result: Array<Input> = [];\r\n\r\n        for (var i = 0; i < this.items.length; i++) {\r\n            var action = this.items[i];\r\n\r\n            result = result.concat(action.getAllInputs());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getResourceInformation(): Array<Shared.IResourceInformation> {\r\n        let result: Array<Shared.IResourceInformation> = [];\r\n\r\n        for (var i = 0; i < this.items.length; i++) {\r\n            result = result.concat(this.items[i].getResourceInformation());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    get renderedActionCount(): number {\r\n        return this._renderedActionCount;\r\n    }\r\n\r\n    get expandedAction(): ShowCardAction {\r\n        return this._expandedAction;\r\n    }\r\n}\r\n\r\nexport class ActionSet extends CardElement {\r\n    private _actionCollection: ActionCollection;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        return this._actionCollection.render(this.orientation ? this.orientation : this.hostConfig.actions.actionsOrientation, this.isDesignMode());\r\n    }\r\n\r\n    orientation?: Enums.Orientation = null;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this._actionCollection = new ActionCollection(this);\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setEnumProperty(Enums.Orientation, result, \"orientation\", this.orientation);\r\n        Utils.setProperty(result, \"actions\", this._actionCollection.toJSON());\r\n\r\n        return result;\r\n    }\r\n\r\n    isBleedingAtBottom(): boolean {\r\n        if (this._actionCollection.renderedActionCount == 0) {\r\n            return super.isBleedingAtBottom();\r\n        }\r\n        else {\r\n            if (this._actionCollection.items.length == 1) {\r\n                return this._actionCollection.expandedAction != null && !this.hostConfig.actions.preExpandSingleShowCardAction;\r\n            }\r\n            else {\r\n                return this._actionCollection.expandedAction != null;\r\n            }\r\n        }\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"ActionSet\";\r\n    }\r\n\r\n    getActionCount(): number {\r\n        return this._actionCollection.items.length;\r\n    }\r\n\r\n    getActionAt(index: number): Action {\r\n        if (index >= 0 && index < this.getActionCount()) {\r\n            return this._actionCollection.items[index];\r\n        }\r\n        else {\r\n            super.getActionAt(index);\r\n        }\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        this._actionCollection.validateProperties(context);\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        var jsonOrientation = json[\"orientation\"];\r\n\r\n        if (jsonOrientation) {\r\n            this.orientation = Utils.getEnumValue(Enums.Orientation, jsonOrientation, Enums.Orientation.Horizontal);\r\n        }\r\n\r\n        this._actionCollection.parse(json[\"actions\"], errors);\r\n    }\r\n\r\n    addAction(action: Action) {\r\n        this._actionCollection.addAction(action);\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        return this._actionCollection.getAllInputs();\r\n    }\r\n\r\n    getResourceInformation(): Array<Shared.IResourceInformation> {\r\n        return this._actionCollection.getResourceInformation();\r\n    }\r\n\r\n    get isInteractive(): boolean {\r\n        return true;\r\n    }\r\n}\r\n\r\nexport abstract class StylableCardElementContainer extends CardElementContainer {\r\n    private _style?: string = null;\r\n    private _bleed: boolean = false;\r\n\r\n    protected applyBackground() {\r\n        let styleDefinition = this.hostConfig.containerStyles.getStyleByName(this.style, this.hostConfig.containerStyles.getStyleByName(this.defaultStyle));\r\n\r\n        if (!Utils.isNullOrEmpty(styleDefinition.backgroundColor)) {\r\n            this.renderedElement.style.backgroundColor = Utils.stringToCssColor(styleDefinition.backgroundColor);\r\n        }\r\n    }\r\n\r\n    protected applyPadding() {\r\n        super.applyPadding();\r\n\r\n        if (!this.renderedElement) {\r\n            return;\r\n        }\r\n\r\n        let physicalPadding = new Shared.SpacingDefinition();\r\n\r\n        if (this.getEffectivePadding()) {\r\n            physicalPadding = this.hostConfig.paddingDefinitionToSpacingDefinition(this.getEffectivePadding());\r\n        }\r\n\r\n        this.renderedElement.style.paddingTop = physicalPadding.top + \"px\";\r\n        this.renderedElement.style.paddingRight = physicalPadding.right + \"px\";\r\n        this.renderedElement.style.paddingBottom = physicalPadding.bottom + \"px\";\r\n        this.renderedElement.style.paddingLeft = physicalPadding.left + \"px\";\r\n\r\n        if (this.isBleeding()) {\r\n            // Bleed into the first parent that does have padding\r\n            let padding = new Shared.PaddingDefinition();\r\n\r\n            this.getImmediateSurroundingPadding(padding);\r\n\r\n            let surroundingPadding = this.hostConfig.paddingDefinitionToSpacingDefinition(padding);\r\n\r\n            this.renderedElement.style.marginRight = \"-\" + surroundingPadding.right + \"px\";\r\n            this.renderedElement.style.marginLeft = \"-\" + surroundingPadding.left + \"px\";\r\n\r\n            if (!this.isDesignMode()) {\r\n                this.renderedElement.style.marginTop = \"-\" + surroundingPadding.top + \"px\";\r\n                this.renderedElement.style.marginBottom = \"-\" + surroundingPadding.bottom + \"px\";\r\n            }\r\n\r\n            if (this.separatorElement && this.separatorOrientation == Enums.Orientation.Horizontal) {\r\n                this.separatorElement.style.marginLeft = \"-\" + surroundingPadding.left + \"px\";\r\n                this.separatorElement.style.marginRight = \"-\" + surroundingPadding.right + \"px\";\r\n            }\r\n        }\r\n        else {\r\n            this.renderedElement.style.marginRight = \"0\";\r\n            this.renderedElement.style.marginLeft = \"0\";\r\n            this.renderedElement.style.marginTop = \"0\";\r\n            this.renderedElement.style.marginBottom = \"0\";\r\n\r\n            if (this.separatorElement) {\r\n                this.separatorElement.style.marginRight = \"0\";\r\n                this.separatorElement.style.marginLeft = \"0\";\r\n            }\r\n        }\r\n    }\r\n\r\n    protected getHasBackground(): boolean {\r\n        let currentElement: CardElement = this.parent;\r\n\r\n        while (currentElement) {\r\n            let currentElementHasBackgroundImage = currentElement instanceof Container ? currentElement.backgroundImage.isValid() : false;\r\n\r\n            if (currentElement instanceof StylableCardElementContainer) {\r\n                if (this.hasExplicitStyle && (currentElement.getEffectiveStyle() != this.getEffectiveStyle() || currentElementHasBackgroundImage)) {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            currentElement = currentElement.parent;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    protected getDefaultPadding(): Shared.PaddingDefinition {\r\n        return this.getHasBackground() ?\r\n            new Shared.PaddingDefinition(\r\n                Enums.Spacing.Padding,\r\n                Enums.Spacing.Padding,\r\n                Enums.Spacing.Padding,\r\n                Enums.Spacing.Padding) : super.getDefaultPadding();\r\n    }\r\n\r\n    protected getHasExpandedAction(): boolean {\r\n        return false;\r\n    }\r\n\r\n    protected getBleed(): boolean {\r\n        return this._bleed;\r\n    }\r\n\r\n    protected setBleed(value: boolean) {\r\n        this._bleed = value;\r\n    }\r\n\r\n    protected get renderedActionCount(): number {\r\n        return 0;\r\n    }\r\n\r\n    protected get hasExplicitStyle(): boolean {\r\n        return this._style != null;\r\n    }\r\n\r\n    protected get allowCustomStyle(): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected get supportsMinHeight(): boolean {\r\n        return true;\r\n    }\r\n\r\n    isBleeding(): boolean {\r\n\t\treturn (this.getHasBackground() || this.hostConfig.alwaysAllowBleed) && this.getBleed();\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"style\", this.style);\r\n\r\n        return result;\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        if (this._style) {\r\n            let styleDefinition = this.hostConfig.containerStyles.getStyleByName(this._style);\r\n\r\n            if (!styleDefinition) {\r\n                context.addFailure(\r\n                    this,\r\n                    {\r\n                        error: Enums.ValidationError.InvalidPropertyValue,\r\n                        message: \"Unknown container style: \" + this._style\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this._style = Utils.getStringValue(json[\"style\"]);\r\n    }\r\n\r\n    render(): HTMLElement {\r\n        let renderedElement = super.render();\r\n\r\n        if (renderedElement && this.getHasBackground()) {\r\n            this.applyBackground();\r\n        }\r\n\r\n        return renderedElement;\r\n    }\r\n\r\n    getEffectiveStyle(): string {\r\n        let effectiveStyle = this.style;\r\n\r\n        return effectiveStyle ? effectiveStyle : super.getEffectiveStyle();\r\n    }\r\n\r\n    get style(): string {\r\n        if (this.allowCustomStyle) {\r\n            if (this._style && this.hostConfig.containerStyles.getStyleByName(this._style)) {\r\n                return this._style;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    set style(value: string) {\r\n        this._style = value;\r\n    }\r\n}\r\n\r\nexport class BackgroundImage extends SerializableObject {\r\n    private static readonly defaultFillMode = Enums.FillMode.Cover;\r\n    private static readonly defaultHorizontalAlignment = Enums.HorizontalAlignment.Left;\r\n    private static readonly defaultVerticalAlignment = Enums.VerticalAlignment.Top;\r\n\r\n    url: string;\r\n    fillMode: Enums.FillMode = BackgroundImage.defaultFillMode;\r\n    horizontalAlignment: Enums.HorizontalAlignment = BackgroundImage.defaultHorizontalAlignment;\r\n    verticalAlignment: Enums.VerticalAlignment = BackgroundImage.defaultVerticalAlignment;\r\n\r\n    reset() {\r\n        this.url = undefined;\r\n        this.fillMode = BackgroundImage.defaultFillMode;\r\n        this.horizontalAlignment = BackgroundImage.defaultHorizontalAlignment;\r\n        this.verticalAlignment = BackgroundImage.defaultVerticalAlignment;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.url = Utils.getStringValue(json[\"url\"]);\r\n        this.fillMode = Utils.getEnumValue(Enums.FillMode, json[\"fillMode\"], this.fillMode);\r\n        this.horizontalAlignment = Utils.getEnumValue(Enums.HorizontalAlignment, json[\"horizontalAlignment\"], this.horizontalAlignment);\r\n        this.verticalAlignment = Utils.getEnumValue(Enums.VerticalAlignment, json[\"verticalAlignment\"], this.verticalAlignment);\r\n    }\r\n\r\n    toJSON(): any {\r\n        if (!this.isValid()) {\r\n            return null;\r\n        }\r\n\r\n        if (this.fillMode == BackgroundImage.defaultFillMode &&\r\n            this.horizontalAlignment == BackgroundImage.defaultHorizontalAlignment &&\r\n            this.verticalAlignment == BackgroundImage.defaultVerticalAlignment) {\r\n\r\n            return this.url;\r\n        }\r\n        else {\r\n            let result = super.toJSON();\r\n\r\n            Utils.setProperty(result, \"url\", this.url);\r\n            Utils.setEnumProperty(Enums.FillMode, result, \"fillMode\", this.fillMode, BackgroundImage.defaultFillMode);\r\n            Utils.setEnumProperty(Enums.HorizontalAlignment, result, \"horizontalAlignment\", this.horizontalAlignment, BackgroundImage.defaultHorizontalAlignment);\r\n            Utils.setEnumProperty(Enums.VerticalAlignment, result, \"verticalAlignment\", this.verticalAlignment, BackgroundImage.defaultVerticalAlignment);\r\n\r\n            return result;\r\n        }\r\n    }\r\n\r\n    apply(element: HTMLElement) {\r\n        if (this.url) {\r\n            element.style.backgroundImage = \"url('\" + this.url + \"')\";\r\n\r\n            switch (this.fillMode) {\r\n                case Enums.FillMode.Repeat:\r\n                    element.style.backgroundRepeat = \"repeat\";\r\n                    break;\r\n                case Enums.FillMode.RepeatHorizontally:\r\n                    element.style.backgroundRepeat = \"repeat-x\";\r\n                    break;\r\n                case Enums.FillMode.RepeatVertically:\r\n                    element.style.backgroundRepeat = \"repeat-y\";\r\n                    break;\r\n                case Enums.FillMode.Cover:\r\n                default:\r\n                    element.style.backgroundRepeat = \"no-repeat\";\r\n                    element.style.backgroundSize = \"cover\";\r\n                    break;\r\n            }\r\n\r\n            switch (this.horizontalAlignment) {\r\n                case Enums.HorizontalAlignment.Center:\r\n                    element.style.backgroundPositionX = \"center\";\r\n                    break;\r\n                case Enums.HorizontalAlignment.Right:\r\n                    element.style.backgroundPositionX = \"right\";\r\n                    break;\r\n            }\r\n\r\n            switch (this.verticalAlignment) {\r\n                case Enums.VerticalAlignment.Center:\r\n                    element.style.backgroundPositionY = \"center\";\r\n                    break;\r\n                case Enums.VerticalAlignment.Bottom:\r\n                    element.style.backgroundPositionY = \"bottom\";\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    isValid(): boolean {\r\n        return !Utils.isNullOrEmpty(this.url);\r\n    }\r\n}\r\n\r\nexport class Container extends StylableCardElementContainer {\r\n    private _items: Array<CardElement> = [];\r\n    private _renderedItems: Array<CardElement> = [];\r\n\r\n    private insertItemAt(\r\n        item: CardElement,\r\n        index: number,\r\n        forceInsert: boolean) {\r\n        if (!item.parent || forceInsert) {\r\n            if (item.isStandalone) {\r\n                if (index < 0 || index >= this._items.length) {\r\n                    this._items.push(item);\r\n                }\r\n                else {\r\n                    this._items.splice(index, 0, item);\r\n                }\r\n\r\n                item.setParent(this);\r\n            }\r\n            else {\r\n                throw new Error(\"Elements of type \" + item.getJsonTypeName() + \" cannot be used as standalone elements.\");\r\n            }\r\n        }\r\n        else {\r\n            throw new Error(\"The element already belongs to another container.\")\r\n        }\r\n    }\r\n\r\n    protected supportsExcplitiHeight(): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected getItemsCollectionPropertyName(): string {\r\n        return \"items\";\r\n    }\r\n\r\n    protected applyBackground() {\r\n        if (this.backgroundImage.isValid()) {\r\n            this.backgroundImage.apply(this.renderedElement);\r\n        }\r\n\r\n        super.applyBackground();\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        this._renderedItems = [];\r\n\r\n        // Cache hostConfig to avoid walking the parent hierarchy several times\r\n        let hostConfig = this.hostConfig;\r\n\r\n        var element = document.createElement(\"div\");\r\n\r\n        if (this.rtl != null && this.rtl) {\r\n            element.dir = \"rtl\";\r\n        }\r\n\r\n        element.classList.add(hostConfig.makeCssClassName(\"ac-container\"));\r\n        element.style.display = \"flex\";\r\n        element.style.flexDirection = \"column\";\r\n\r\n        if (AdaptiveCard.useAdvancedCardBottomTruncation) {\r\n            // Forces the container to be at least as tall as its content.\r\n            //\r\n            // Fixes a quirk in Chrome where, for nested flex elements, the\r\n            // inner element's height would never exceed the outer element's\r\n            // height. This caused overflow truncation to break -- containers\r\n            // would always be measured as not overflowing, since their heights\r\n            // were constrained by their parents as opposed to truly reflecting\r\n            // the height of their content.\r\n            //\r\n            // See the \"Browser Rendering Notes\" section of this answer:\r\n            // https://stackoverflow.com/questions/36247140/why-doesnt-flex-item-shrink-past-content-size\r\n            element.style.minHeight = '-webkit-min-content';\r\n        }\r\n\r\n        switch (this.verticalContentAlignment) {\r\n            case Enums.VerticalAlignment.Center:\r\n                element.style.justifyContent = \"center\";\r\n                break;\r\n            case Enums.VerticalAlignment.Bottom:\r\n                element.style.justifyContent = \"flex-end\";\r\n                break;\r\n            default:\r\n                element.style.justifyContent = \"flex-start\";\r\n                break;\r\n        }\r\n\r\n        if (this._items.length > 0) {\r\n            for (var i = 0; i < this._items.length; i++) {\r\n                var renderedElement = this.isElementAllowed(this._items[i], this.getForbiddenElementTypes()) ? this._items[i].render() : null;\r\n\r\n                if (renderedElement) {\r\n                    if (this._renderedItems.length > 0 && this._items[i].separatorElement) {\r\n                        this._items[i].separatorElement.style.flex = \"0 0 auto\";\r\n\r\n                        Utils.appendChild(element, this._items[i].separatorElement);\r\n                    }\r\n\r\n                    Utils.appendChild(element, renderedElement);\r\n\r\n                    this._renderedItems.push(this._items[i]);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (this.isDesignMode()) {\r\n                var placeholderElement = this.createPlaceholderElement();\r\n                placeholderElement.style.width = \"100%\";\r\n                placeholderElement.style.height = \"100%\";\r\n\r\n                element.appendChild(placeholderElement);\r\n            }\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    protected truncateOverflow(maxHeight: number): boolean {\r\n        // Add 1 to account for rounding differences between browsers\r\n        var boundary = this.renderedElement.offsetTop + maxHeight + 1;\r\n\r\n        var handleElement = (cardElement: CardElement) => {\r\n            let elt = cardElement.renderedElement;\r\n\r\n            if (elt) {\r\n                switch (Utils.getFitStatus(elt, boundary)) {\r\n                    case Enums.ContainerFitStatus.FullyInContainer:\r\n                        let sizeChanged = cardElement['resetOverflow']();\r\n                        // If the element's size changed after resetting content,\r\n                        // we have to check if it still fits fully in the card\r\n                        if (sizeChanged) {\r\n                            handleElement(cardElement);\r\n                        }\r\n                        break;\r\n                    case Enums.ContainerFitStatus.Overflowing:\r\n                        let maxHeight = boundary - elt.offsetTop;\r\n                        cardElement['handleOverflow'](maxHeight);\r\n                        break;\r\n                    case Enums.ContainerFitStatus.FullyOutOfContainer:\r\n                        cardElement['handleOverflow'](0);\r\n                        break;\r\n                }\r\n            }\r\n        };\r\n\r\n        for (let item of this._items) {\r\n            handleElement(item);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    protected undoOverflowTruncation() {\r\n        for (let item of this._items) {\r\n            item['resetOverflow']();\r\n        }\r\n    }\r\n\r\n    protected getHasBackground(): boolean {\r\n        return this.backgroundImage.isValid() || super.getHasBackground();\r\n    }\r\n\r\n    protected get isSelectable(): boolean {\r\n        return true;\r\n    }\r\n\r\n    readonly backgroundImage: BackgroundImage = new BackgroundImage();\r\n\r\n    verticalContentAlignment: Enums.VerticalAlignment = Enums.VerticalAlignment.Top;\r\n    rtl?: boolean = null;\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"backgroundImage\", this.backgroundImage.toJSON());\r\n\r\n        Utils.setEnumProperty(Enums.VerticalAlignment, result, \"verticalContentAlignment\", this.verticalContentAlignment, Enums.VerticalAlignment.Top);\r\n\r\n        if (this._items.length > 0) {\r\n            let elements = [];\r\n\r\n            for (let element of this._items) {\r\n                elements.push(element.toJSON());\r\n            }\r\n\r\n            Utils.setProperty(result, this.getItemsCollectionPropertyName(), elements);\r\n        }\r\n\r\n        Utils.setProperty(result, \"bleed\", this.bleed, false);\r\n\r\n        return result;\r\n    }\r\n\r\n    getItemCount(): number {\r\n        return this._items.length;\r\n    }\r\n\r\n    getItemAt(index: number): CardElement {\r\n        return this._items[index];\r\n    }\r\n\r\n    getFirstVisibleRenderedItem(): CardElement {\r\n        if (this.renderedElement && this._renderedItems && this._renderedItems.length > 0) {\r\n            for (let item of this._renderedItems) {\r\n                if (item.isVisible) {\r\n                    return item;\r\n                }\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getLastVisibleRenderedItem(): CardElement {\r\n        if (this.renderedElement && this._renderedItems && this._renderedItems.length > 0) {\r\n            for (let i = this._renderedItems.length - 1; i >= 0; i--) {\r\n                if (this._renderedItems[i].isVisible) {\r\n                    return this._renderedItems[i];\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Container\";\r\n    }\r\n\r\n    isFirstElement(element: CardElement): boolean {\r\n        let designMode = this.isDesignMode();\r\n\r\n        for (var i = 0; i < this._items.length; i++) {\r\n            if (this._items[i].isVisible || designMode) {\r\n                return this._items[i] == element;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    isLastElement(element: CardElement): boolean {\r\n        let designMode = this.isDesignMode();\r\n\r\n        for (var i = this._items.length - 1; i >= 0; i--) {\r\n            if (this._items[i].isVisible || designMode) {\r\n                return this._items[i] == element;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    isRtl(): boolean {\r\n        if (this.rtl != null) {\r\n            return this.rtl;\r\n        }\r\n        else {\r\n            let parentContainer = this.getParentContainer();\r\n\r\n            return parentContainer ? parentContainer.isRtl() : false;\r\n        }\r\n    }\r\n\r\n    isBleedingAtTop(): boolean {\r\n        let firstRenderedItem = this.getFirstVisibleRenderedItem();\r\n\r\n        return this.isBleeding() || (firstRenderedItem ? firstRenderedItem.isBleedingAtTop() : false);\r\n    }\r\n\r\n    isBleedingAtBottom(): boolean {\r\n        let lastRenderedItem = this.getLastVisibleRenderedItem();\r\n\r\n        return this.isBleeding() || (lastRenderedItem ? lastRenderedItem.isBleedingAtBottom() && lastRenderedItem.getEffectiveStyle() == this.getEffectiveStyle() : false);\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.setShouldFallback(false);\r\n\r\n        this._items = [];\r\n        this._renderedItems = [];\r\n\r\n        this.backgroundImage.reset();\r\n\r\n        let jsonBackgroundImage = json[\"backgroundImage\"];\r\n\r\n        if (jsonBackgroundImage) {\r\n            if (typeof jsonBackgroundImage === \"string\") {\r\n                this.backgroundImage.url = jsonBackgroundImage;\r\n                this.backgroundImage.fillMode = Enums.FillMode.Cover;\r\n            }\r\n            else if (typeof jsonBackgroundImage === \"object\") {\r\n                this.backgroundImage.parse(jsonBackgroundImage, errors);\r\n            }\r\n        }\r\n\r\n        this.verticalContentAlignment = Utils.getEnumValue(Enums.VerticalAlignment, json[\"verticalContentAlignment\"], this.verticalContentAlignment);\r\n\r\n        if (json[this.getItemsCollectionPropertyName()] != null) {\r\n            let items = json[this.getItemsCollectionPropertyName()] as Array<any>;\r\n\r\n            this.clear();\r\n\r\n            for (let i = 0; i < items.length; i++) {\r\n                let element = createElementInstance(\r\n                    this,\r\n                    items[i],\r\n                    !this.isDesignMode(),\r\n                    errors);\r\n\r\n                if (element) {\r\n                    this.insertItemAt(element, -1, true);\r\n                }\r\n            }\r\n        }\r\n\r\n        this.bleed = Utils.getBoolValue(json[\"bleed\"], this.bleed);\r\n    }\r\n\r\n    indexOf(cardElement: CardElement): number {\r\n        return this._items.indexOf(cardElement);\r\n    }\r\n\r\n    addItem(item: CardElement) {\r\n        this.insertItemAt(item, -1, false);\r\n    }\r\n\r\n    insertItemBefore(item: CardElement, insertBefore: CardElement) {\r\n        this.insertItemAt(item, this._items.indexOf(insertBefore), false);\r\n    }\r\n\r\n    insertItemAfter(item: CardElement, insertAfter: CardElement) {\r\n        this.insertItemAt(item, this._items.indexOf(insertAfter) + 1, false);\r\n    }\r\n\r\n    removeItem(item: CardElement): boolean {\r\n        var itemIndex = this._items.indexOf(item);\r\n\r\n        if (itemIndex >= 0) {\r\n            this._items.splice(itemIndex, 1);\r\n\r\n            item.setParent(null);\r\n\r\n            this.updateLayout();\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    clear() {\r\n        this._items = [];\r\n    }\r\n\r\n    getResourceInformation(): Array<Shared.IResourceInformation> {\r\n        let result = super.getResourceInformation();\r\n\r\n        if (this.backgroundImage.isValid()) {\r\n            result.push({ url: this.backgroundImage.url, mimeType: \"image\" });\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getActionById(id: string): Action {\r\n        var result: Action = super.getActionById(id);\r\n\r\n        if (!result) {\r\n            if (this.selectAction) {\r\n                result = this.selectAction.getActionById(id);\r\n            }\r\n\r\n            if (!result) {\r\n                for (var i = 0; i < this._items.length; i++) {\r\n                    result = this._items[i].getActionById(id);\r\n\r\n                    if (result) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    get padding(): Shared.PaddingDefinition {\r\n        return this.getPadding();\r\n    }\r\n\r\n    set padding(value: Shared.PaddingDefinition) {\r\n        this.setPadding(value);\r\n    }\r\n\r\n    get selectAction(): Action {\r\n        return this.getSelectAction();\r\n    }\r\n\r\n    set selectAction(value: Action) {\r\n        this.setSelectAction(value);\r\n    }\r\n\r\n    get bleed(): boolean {\r\n        return this.getBleed();\r\n    }\r\n\r\n    set bleed(value: boolean) {\r\n        this.setBleed(value);\r\n    }\r\n}\r\n\r\nexport type ColumnWidth = Shared.SizeAndUnit | \"auto\" | \"stretch\";\r\n\r\nexport class Column extends Container {\r\n    private _computedWeight: number = 0;\r\n\r\n    protected adjustRenderedElementSize(renderedElement: HTMLElement) {\r\n        const minDesignTimeColumnHeight = 20;\r\n\r\n        if (this.isDesignMode()) {\r\n            renderedElement.style.minWidth = \"20px\";\r\n            renderedElement.style.minHeight = (!this.minPixelHeight ? minDesignTimeColumnHeight : Math.max(this.minPixelHeight, minDesignTimeColumnHeight)) + \"px\";\r\n        }\r\n        else {\r\n            renderedElement.style.minWidth = \"0\";\r\n\r\n            if (this.minPixelHeight) {\r\n                renderedElement.style.minHeight = this.minPixelHeight + \"px\";\r\n            }\r\n        }\r\n\r\n        if (this.width === \"auto\") {\r\n            renderedElement.style.flex = \"0 1 auto\";\r\n        }\r\n        else if (this.width === \"stretch\") {\r\n            renderedElement.style.flex = \"1 1 50px\";\r\n        }\r\n        else {\r\n            let sizeAndUnit = <Shared.SizeAndUnit>this.width;\r\n\r\n            if (sizeAndUnit.unit == Enums.SizeUnit.Pixel) {\r\n                renderedElement.style.flex = \"0 0 auto\";\r\n                renderedElement.style.width = sizeAndUnit.physicalSize + \"px\";\r\n            }\r\n            else {\r\n                renderedElement.style.flex = \"1 1 \" + (this._computedWeight > 0 ? this._computedWeight : sizeAndUnit.physicalSize) + \"%\";\r\n            }\r\n        }\r\n    }\r\n\r\n    protected get separatorOrientation(): Enums.Orientation {\r\n        return Enums.Orientation.Vertical;\r\n    }\r\n\r\n    width: ColumnWidth = \"stretch\";\r\n\r\n    constructor(width: ColumnWidth = \"stretch\") {\r\n        super();\r\n\r\n        this.width = width;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Column\";\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        if (this.width instanceof Shared.SizeAndUnit) {\r\n            if (this.width.unit == Enums.SizeUnit.Pixel) {\r\n                Utils.setProperty(result, \"width\", this.width.physicalSize + \"px\");\r\n            }\r\n            else {\r\n                Utils.setNumberProperty(result, \"width\", this.width.physicalSize);\r\n            }\r\n        }\r\n        else {\r\n            Utils.setProperty(result, \"width\", this.width);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        var jsonWidth = json[\"width\"];\r\n\r\n        if (jsonWidth === undefined) {\r\n            jsonWidth = json[\"size\"];\r\n\r\n            if (jsonWidth !== undefined) {\r\n                raiseParseError(\r\n                    {\r\n                        error: Enums.ValidationError.Deprecated,\r\n                        message: \"The \\\"Column.size\\\" property is deprecated and will be removed. Use the \\\"Column.width\\\" property instead.\"\r\n                    },\r\n                    errors\r\n                );\r\n            }\r\n        }\r\n\r\n        if (jsonWidth) {\r\n            var invalidWidth = false;\r\n\r\n            try {\r\n                this.width = Shared.SizeAndUnit.parse(jsonWidth);\r\n            }\r\n            catch (e) {\r\n                if (typeof jsonWidth === \"string\" && (jsonWidth === \"auto\" || jsonWidth === \"stretch\")) {\r\n                    this.width = jsonWidth;\r\n                }\r\n                else {\r\n                    invalidWidth = true;\r\n                }\r\n            }\r\n\r\n            if (invalidWidth) {\r\n                raiseParseError(\r\n                    {\r\n                        error: Enums.ValidationError.InvalidPropertyValue,\r\n                        message: \"Invalid column width:\" + jsonWidth + \" - defaulting to \\\"auto\\\"\"\r\n                    },\r\n                    errors\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    get hasVisibleSeparator(): boolean {\r\n        if (this.parent && this.parent instanceof ColumnSet) {\r\n            return this.separatorElement && !this.parent.isLeftMostElement(this);\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    get isStandalone(): boolean {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport class ColumnSet extends StylableCardElementContainer {\r\n    private _columns: Array<Column> = [];\r\n    private _renderedColumns: Array<Column>;\r\n\r\n    private createColumnInstance(json: any, errors: Array<HostConfig.IValidationError>): Column {\r\n        return createCardObjectInstance<Column>(\r\n            this,\r\n            json,\r\n            [], // Forbidden types not supported for elements for now\r\n            !this.isDesignMode(),\r\n            (typeName: string) => {\r\n                return !typeName || typeName === \"Column\" ? new Column() : null;\r\n            },\r\n            (typeName: string, errorType: InstanceCreationErrorType) => {\r\n                if (errorType == InstanceCreationErrorType.UnknownType) {\r\n                    return {\r\n                        error: Enums.ValidationError.UnknownElementType,\r\n                        message: \"Unknown element type: \" + typeName + \". Fallback will be used if present.\"\r\n                    }\r\n                }\r\n                else {\r\n                    return {\r\n                        error: Enums.ValidationError.ElementTypeNotAllowed,\r\n                        message: \"Element type \" + typeName + \" isn't allowed in a ColumnSet.\"\r\n                    }\r\n                }\r\n            },\r\n            errors);\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        this._renderedColumns = [];\r\n\r\n        if (this._columns.length > 0) {\r\n            // Cache hostConfig to avoid walking the parent hierarchy several times\r\n            let hostConfig = this.hostConfig;\r\n\r\n            let element = document.createElement(\"div\");\r\n            element.className = hostConfig.makeCssClassName(\"ac-columnSet\");\r\n            element.style.display = \"flex\";\r\n\r\n            if (AdaptiveCard.useAdvancedCardBottomTruncation) {\r\n                // See comment in Container.internalRender()\r\n                element.style.minHeight = '-webkit-min-content';\r\n            }\r\n\r\n            switch (this.horizontalAlignment) {\r\n                case Enums.HorizontalAlignment.Center:\r\n                    element.style.justifyContent = \"center\";\r\n                    break;\r\n                case Enums.HorizontalAlignment.Right:\r\n                    element.style.justifyContent = \"flex-end\";\r\n                    break;\r\n                default:\r\n                    element.style.justifyContent = \"flex-start\";\r\n                    break;\r\n            }\r\n\r\n            let totalWeight: number = 0;\r\n\r\n            for (let column of this._columns) {\r\n                if (column.width instanceof Shared.SizeAndUnit && (column.width.unit == Enums.SizeUnit.Weight)) {\r\n                    totalWeight += column.width.physicalSize;\r\n                }\r\n            }\r\n\r\n            for (let column of this._columns) {\r\n                if (column.width instanceof Shared.SizeAndUnit && column.width.unit == Enums.SizeUnit.Weight && totalWeight > 0) {\r\n                    let computedWeight = 100 / totalWeight * column.width.physicalSize;\r\n\r\n                    // Best way to emulate \"internal\" access I know of\r\n                    column[\"_computedWeight\"] = computedWeight;\r\n                }\r\n\r\n                let renderedColumn = column.render();\r\n\r\n                if (renderedColumn) {\r\n                    if (this._renderedColumns.length > 0 && column.separatorElement) {\r\n                        column.separatorElement.style.flex = \"0 0 auto\";\r\n\r\n                        Utils.appendChild(element, column.separatorElement);\r\n                    }\r\n\r\n                    Utils.appendChild(element, renderedColumn);\r\n\r\n                    this._renderedColumns.push(column);\r\n                }\r\n            }\r\n\r\n            return this._renderedColumns.length > 0 ? element : null;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    protected truncateOverflow(maxHeight: number): boolean {\r\n        for (let column of this._columns) {\r\n            column['handleOverflow'](maxHeight);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    protected undoOverflowTruncation() {\r\n        for (let column of this._columns) {\r\n            column['resetOverflow']();\r\n        }\r\n    }\r\n\r\n    protected get isSelectable(): boolean {\r\n        return true;\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        if (this._columns.length > 0) {\r\n            let columns = [];\r\n\r\n            for (let column of this._columns) {\r\n                columns.push(column.toJSON());\r\n            }\r\n\r\n            Utils.setProperty(result, \"columns\", columns);\r\n        }\r\n\r\n        Utils.setProperty(result, \"bleed\", this.bleed, false);\r\n\r\n        return result;\r\n    }\r\n\r\n    isFirstElement(element: CardElement): boolean {\r\n        for (var i = 0; i < this._columns.length; i++) {\r\n            if (this._columns[i].isVisible) {\r\n                return this._columns[i] == element;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    isBleedingAtTop(): boolean {\r\n        if (this.isBleeding()) {\r\n            return true;\r\n        }\r\n\r\n        if (this._renderedColumns && this._renderedColumns.length > 0) {\r\n            for (let column of this._columns) {\r\n                if (column.isBleedingAtTop()) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    isBleedingAtBottom(): boolean {\r\n        if (this.isBleeding()) {\r\n            return true;\r\n        }\r\n\r\n        if (this._renderedColumns && this._renderedColumns.length > 0) {\r\n            for (let column of this._columns) {\r\n                if (column.isBleedingAtBottom()) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    getCount(): number {\r\n        return this._columns.length;\r\n    }\r\n\r\n    getItemCount(): number {\r\n        return this.getCount();\r\n    }\r\n\r\n    getFirstVisibleRenderedItem(): CardElement {\r\n        if (this.renderedElement && this._renderedColumns && this._renderedColumns.length > 0) {\r\n            return this._renderedColumns[0];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    getLastVisibleRenderedItem(): CardElement {\r\n        if (this.renderedElement && this._renderedColumns && this._renderedColumns.length > 0) {\r\n            return this._renderedColumns[this._renderedColumns.length - 1];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    getColumnAt(index: number): Column {\r\n        return this._columns[index];\r\n    }\r\n\r\n    getItemAt(index: number): CardElement {\r\n        return this.getColumnAt(index);\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"ColumnSet\";\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        if (json[\"columns\"] != null) {\r\n            let jsonColumns = json[\"columns\"] as Array<any>;\r\n\r\n            this._columns = [];\r\n\r\n            for (let i = 0; i < jsonColumns.length; i++) {\r\n                let column = this.createColumnInstance(jsonColumns[i], errors);\r\n\r\n                if (column) {\r\n                    this._columns.push(column);\r\n                }\r\n            }\r\n        }\r\n\r\n        this.bleed = Utils.getBoolValue(json[\"bleed\"], this.bleed);\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        let weightedColumns: number = 0;\r\n        let stretchedColumns: number = 0;\r\n\r\n        for (let column of this._columns) {\r\n            if (typeof column.width === \"number\") {\r\n                weightedColumns++;\r\n            }\r\n            else if (column.width === \"stretch\") {\r\n                stretchedColumns++;\r\n            }\r\n        }\r\n\r\n        if (weightedColumns > 0 && stretchedColumns > 0) {\r\n            context.addFailure(\r\n                this,\r\n                {\r\n                    error: Enums.ValidationError.Hint,\r\n                    message: \"It is not recommended to use weighted and stretched columns in the same ColumnSet, because in such a situation stretched columns will always get the minimum amount of space.\"\r\n                });\r\n        }\r\n    }\r\n\r\n    addColumn(column: Column) {\r\n        if (!column.parent) {\r\n            this._columns.push(column);\r\n\r\n            column.setParent(this);\r\n        }\r\n        else {\r\n            throw new Error(\"This column already belongs to another ColumnSet.\");\r\n        }\r\n    }\r\n\r\n    removeItem(item: CardElement): boolean {\r\n        if (item instanceof Column) {\r\n            var itemIndex = this._columns.indexOf(item);\r\n\r\n            if (itemIndex >= 0) {\r\n                this._columns.splice(itemIndex, 1);\r\n\r\n                item.setParent(null);\r\n\r\n                this.updateLayout();\r\n\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    indexOf(cardElement: CardElement): number {\r\n        return cardElement instanceof Column ? this._columns.indexOf(cardElement) : -1;\r\n    }\r\n\r\n    isLeftMostElement(element: CardElement): boolean {\r\n        return this._columns.indexOf(<Column>element) == 0;\r\n    }\r\n\r\n    isRightMostElement(element: CardElement): boolean {\r\n        return this._columns.indexOf(<Column>element) == this._columns.length - 1;\r\n    }\r\n\r\n    isTopElement(element: CardElement): boolean {\r\n        return this._columns.indexOf(<Column>element) >= 0;\r\n    }\r\n\r\n    isBottomElement(element: CardElement): boolean {\r\n        return this._columns.indexOf(<Column>element) >= 0;\r\n    }\r\n\r\n    getActionById(id: string): Action {\r\n        var result: Action = null;\r\n\r\n        for (var i = 0; i < this._columns.length; i++) {\r\n            result = this._columns[i].getActionById(id);\r\n\r\n            if (result) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    get bleed(): boolean {\r\n        return this.getBleed();\r\n    }\r\n\r\n    set bleed(value: boolean) {\r\n        this.setBleed(value);\r\n    }\r\n\r\n    get padding(): Shared.PaddingDefinition {\r\n        return this.getPadding();\r\n    }\r\n\r\n    set padding(value: Shared.PaddingDefinition) {\r\n        this.setPadding(value);\r\n    }\r\n\r\n    get selectAction(): Action {\r\n        return this.getSelectAction();\r\n    }\r\n\r\n    set selectAction(value: Action) {\r\n        this.setSelectAction(value);\r\n    }\r\n}\r\n\r\nfunction raiseImageLoadedEvent(image: Image) {\r\n    let card = image.getRootElement() as AdaptiveCard;\r\n    let onImageLoadedHandler = (card && card.onImageLoaded) ? card.onImageLoaded : AdaptiveCard.onImageLoaded;\r\n\r\n    if (onImageLoadedHandler) {\r\n        onImageLoadedHandler(image);\r\n    }\r\n}\r\n\r\nfunction raiseAnchorClickedEvent(element: CardElement, anchor: HTMLAnchorElement): boolean {\r\n    let card = element.getRootElement() as AdaptiveCard;\r\n    let onAnchorClickedHandler = (card && card.onAnchorClicked) ? card.onAnchorClicked : AdaptiveCard.onAnchorClicked;\r\n\r\n    return onAnchorClickedHandler != null ? onAnchorClickedHandler(element, anchor) : false;\r\n}\r\n\r\nfunction raiseExecuteActionEvent(action: Action) {\r\n    let card = action.parent.getRootElement() as AdaptiveCard;\r\n    let onExecuteActionHandler = (card && card.onExecuteAction) ? card.onExecuteAction : AdaptiveCard.onExecuteAction;\r\n\r\n    if (onExecuteActionHandler) {\r\n        if (action.prepareForExecution()) {\r\n            onExecuteActionHandler(action);\r\n        }\r\n    }\r\n}\r\n\r\nfunction raiseInlineCardExpandedEvent(action: ShowCardAction, isExpanded: boolean) {\r\n    let card = action.parent.getRootElement() as AdaptiveCard;\r\n    let onInlineCardExpandedHandler = (card && card.onInlineCardExpanded) ? card.onInlineCardExpanded : AdaptiveCard.onInlineCardExpanded;\r\n\r\n    if (onInlineCardExpandedHandler) {\r\n        onInlineCardExpandedHandler(action, isExpanded);\r\n    }\r\n}\r\n\r\nfunction raiseInputValueChangedEvent(input: Input) {\r\n    let card = input.getRootElement() as AdaptiveCard;\r\n    let onInputValueChangedHandler = (card && card.onInputValueChanged) ? card.onInputValueChanged : AdaptiveCard.onInputValueChanged;\r\n\r\n    if (onInputValueChangedHandler) {\r\n        onInputValueChangedHandler(input);\r\n    }\r\n}\r\n\r\nfunction raiseElementVisibilityChangedEvent(element: CardElement, shouldUpdateLayout: boolean = true) {\r\n    let rootElement = element.getRootElement();\r\n\r\n    if (shouldUpdateLayout) {\r\n        rootElement.updateLayout();\r\n    }\r\n\r\n    let card = rootElement as AdaptiveCard;\r\n    let onElementVisibilityChangedHandler = (card && card.onElementVisibilityChanged) ? card.onElementVisibilityChanged : AdaptiveCard.onElementVisibilityChanged;\r\n\r\n    if (onElementVisibilityChangedHandler != null) {\r\n        onElementVisibilityChangedHandler(element);\r\n    }\r\n}\r\n\r\nfunction raiseParseElementEvent(element: CardElement, json: any, errors?: Array<HostConfig.IValidationError>) {\r\n    let card = element.getRootElement() as AdaptiveCard;\r\n    let onParseElementHandler = (card && card.onParseElement) ? card.onParseElement : AdaptiveCard.onParseElement;\r\n\r\n    if (onParseElementHandler != null) {\r\n        onParseElementHandler(element, json, errors);\r\n    }\r\n}\r\n\r\nfunction raiseParseActionEvent(action: Action, json: any, errors?: Array<HostConfig.IValidationError>) {\r\n    let card = action.parent ? action.parent.getRootElement() as AdaptiveCard : null;\r\n    let onParseActionHandler = (card && card.onParseAction) ? card.onParseAction : AdaptiveCard.onParseAction;\r\n\r\n    if (onParseActionHandler != null) {\r\n        onParseActionHandler(action, json, errors);\r\n    }\r\n}\r\n\r\nfunction raiseParseError(error: HostConfig.IValidationError, errors: Array<HostConfig.IValidationError>) {\r\n    if (errors) {\r\n        errors.push(error);\r\n    }\r\n\r\n    if (AdaptiveCard.onParseError != null) {\r\n        AdaptiveCard.onParseError(error);\r\n    }\r\n}\r\n\r\nexport interface ITypeRegistration<T> {\r\n    typeName: string,\r\n    createInstance: () => T;\r\n}\r\n\r\nexport abstract class ContainerWithActions extends Container {\r\n    private _actionCollection: ActionCollection;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        var element = super.internalRender();\r\n\r\n        var renderedActions = this._actionCollection.render(this.hostConfig.actions.actionsOrientation, false);\r\n\r\n        if (renderedActions) {\r\n            Utils.appendChild(\r\n                element,\r\n                Utils.renderSeparation(\r\n                    this.hostConfig,\r\n                    {\r\n                        spacing: this.hostConfig.getEffectiveSpacing(this.hostConfig.actions.spacing),\r\n                        lineThickness: null,\r\n                        lineColor: null\r\n                    },\r\n                    Enums.Orientation.Horizontal));\r\n            Utils.appendChild(element, renderedActions);\r\n        }\r\n\r\n        if (this.renderIfEmpty) {\r\n            return element;\r\n        }\r\n        else {\r\n            return element.children.length > 0 ? element : null;\r\n        }\r\n    }\r\n\r\n    protected getHasExpandedAction(): boolean {\r\n        if (this.renderedActionCount == 0) {\r\n            return false;\r\n        }\r\n        else if (this.renderedActionCount == 1) {\r\n            return this._actionCollection.expandedAction != null && !this.hostConfig.actions.preExpandSingleShowCardAction;\r\n        }\r\n        else {\r\n            return this._actionCollection.expandedAction != null;\r\n        }\r\n    }\r\n\r\n    protected get renderedActionCount(): number {\r\n        return this._actionCollection.renderedActionCount;\r\n    }\r\n\r\n    protected get renderIfEmpty(): boolean {\r\n        return false;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this._actionCollection = new ActionCollection(this);\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"actions\", this._actionCollection.toJSON());\r\n\r\n        return result;\r\n    }\r\n\r\n    getActionCount(): number {\r\n        return this._actionCollection.items.length;\r\n    }\r\n\r\n    getActionAt(index: number): Action {\r\n        if (index >= 0 && index < this.getActionCount()) {\r\n            return this._actionCollection.items[index];\r\n        }\r\n        else {\r\n            super.getActionAt(index);\r\n        }\r\n    }\r\n\r\n    getActionById(id: string): Action {\r\n        var result: Action = this._actionCollection.getActionById(id);\r\n\r\n        return result ? result : super.getActionById(id);\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this._actionCollection.parse(json[\"actions\"], errors);\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        if (this._actionCollection) {\r\n            this._actionCollection.validateProperties(context);\r\n        }\r\n    }\r\n\r\n    isLastElement(element: CardElement): boolean {\r\n        return super.isLastElement(element) && this._actionCollection.items.length == 0;\r\n    }\r\n\r\n    addAction(action: Action) {\r\n        this._actionCollection.addAction(action);\r\n    }\r\n\r\n    clear() {\r\n        super.clear();\r\n\r\n        this._actionCollection.clear();\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        return super.getAllInputs().concat(this._actionCollection.getAllInputs());\r\n    }\r\n\r\n    getResourceInformation(): Array<Shared.IResourceInformation> {\r\n        return super.getResourceInformation().concat(this._actionCollection.getResourceInformation());\r\n    }\r\n\r\n    isBleedingAtBottom(): boolean {\r\n        if (this._actionCollection.renderedActionCount == 0) {\r\n            return super.isBleedingAtBottom();\r\n        }\r\n        else {\r\n            if (this._actionCollection.items.length == 1) {\r\n                return this._actionCollection.expandedAction != null && !this.hostConfig.actions.preExpandSingleShowCardAction;\r\n            }\r\n            else {\r\n                return this._actionCollection.expandedAction != null;\r\n            }\r\n        }\r\n    }\r\n\r\n    get isStandalone(): boolean {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport abstract class TypeRegistry<T> {\r\n    private _items: Array<ITypeRegistration<T>> = [];\r\n\r\n    private findTypeRegistration(typeName: string): ITypeRegistration<T> {\r\n        for (var i = 0; i < this._items.length; i++) {\r\n            if (this._items[i].typeName === typeName) {\r\n                return this._items[i];\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    clear() {\r\n        this._items = [];\r\n    }\r\n\r\n    abstract reset();\r\n\r\n    registerType(typeName: string, createInstance: () => T) {\r\n        var registrationInfo = this.findTypeRegistration(typeName);\r\n\r\n        if (registrationInfo != null) {\r\n            registrationInfo.createInstance = createInstance;\r\n        }\r\n        else {\r\n            registrationInfo = {\r\n                typeName: typeName,\r\n                createInstance: createInstance\r\n            }\r\n\r\n            this._items.push(registrationInfo);\r\n        }\r\n    }\r\n\r\n    unregisterType(typeName: string) {\r\n        for (var i = 0; i < this._items.length; i++) {\r\n            if (this._items[i].typeName === typeName) {\r\n                this._items.splice(i, 1);\r\n\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    createInstance(typeName: string): T {\r\n        var registrationInfo = this.findTypeRegistration(typeName);\r\n\r\n        return registrationInfo ? registrationInfo.createInstance() : null;\r\n    }\r\n\r\n    getItemCount(): number {\r\n        return this._items.length;\r\n    }\r\n\r\n    getItemAt(index: number): ITypeRegistration<T> {\r\n        return this._items[index];\r\n    }\r\n}\r\n\r\nexport class ElementTypeRegistry extends TypeRegistry<CardElement> {\r\n    reset() {\r\n        this.clear();\r\n\r\n        this.registerType(\"Container\", () => { return new Container(); });\r\n        this.registerType(\"TextBlock\", () => { return new TextBlock(); });\r\n        this.registerType(\"RichTextBlock\", () => { return new RichTextBlock(); });\r\n        this.registerType(\"TextRun\", () => { return new TextRun(); });\r\n        this.registerType(\"Image\", () => { return new Image(); });\r\n        this.registerType(\"ImageSet\", () => { return new ImageSet(); });\r\n        this.registerType(\"Media\", () => { return new Media(); });\r\n        this.registerType(\"FactSet\", () => { return new FactSet(); });\r\n        this.registerType(\"ColumnSet\", () => { return new ColumnSet(); });\r\n        this.registerType(\"ActionSet\", () => { return new ActionSet(); });\r\n        this.registerType(\"Input.Text\", () => { return new TextInput(); });\r\n        this.registerType(\"Input.Date\", () => { return new DateInput(); });\r\n        this.registerType(\"Input.Time\", () => { return new TimeInput(); });\r\n        this.registerType(\"Input.Number\", () => { return new NumberInput(); });\r\n        this.registerType(\"Input.ChoiceSet\", () => { return new ChoiceSetInput(); });\r\n        this.registerType(\"Input.Toggle\", () => { return new ToggleInput(); });\r\n    }\r\n}\r\n\r\nexport class ActionTypeRegistry extends TypeRegistry<Action> {\r\n    reset() {\r\n        this.clear();\r\n\r\n        this.registerType(OpenUrlAction.JsonTypeName, () => { return new OpenUrlAction(); });\r\n        this.registerType(SubmitAction.JsonTypeName, () => { return new SubmitAction(); });\r\n        this.registerType(ShowCardAction.JsonTypeName, () => { return new ShowCardAction(); });\r\n        this.registerType(ToggleVisibilityAction.JsonTypeName, () => { return new ToggleVisibilityAction(); });\r\n    }\r\n}\r\n\r\nexport interface IMarkdownProcessingResult {\r\n    didProcess: boolean;\r\n    outputHtml?: any;\r\n}\r\n\r\nexport class AdaptiveCard extends ContainerWithActions {\r\n    private static currentVersion: HostConfig.Version = new HostConfig.Version(1, 2);\r\n\r\n    static useAdvancedTextBlockTruncation: boolean = true;\r\n    static useAdvancedCardBottomTruncation: boolean = false;\r\n    static useMarkdownInRadioButtonAndCheckbox: boolean = true;\r\n    static allowMarkForTextHighlighting: boolean = false;\r\n    static alwaysBleedSeparators: boolean = false;\r\n    static enableFullJsonRoundTrip: boolean = false;\r\n    static useBuiltInInputValidation: boolean = true;\r\n    static displayInputValidationErrors: boolean = true;\r\n\r\n    static readonly elementTypeRegistry = new ElementTypeRegistry();\r\n    static readonly actionTypeRegistry = new ActionTypeRegistry();\r\n\r\n    static onAnchorClicked: (element: CardElement, anchor: HTMLAnchorElement) => boolean = null;\r\n    static onExecuteAction: (action: Action) => void = null;\r\n    static onElementVisibilityChanged: (element: CardElement) => void = null;\r\n    static onImageLoaded: (image: Image) => void = null;\r\n    static onInlineCardExpanded: (action: ShowCardAction, isExpanded: boolean) => void = null;\r\n    static onInputValueChanged: (input: Input) => void = null;\r\n    static onParseElement: (element: CardElement, json: any, errors?: Array<HostConfig.IValidationError>) => void = null;\r\n    static onParseAction: (element: Action, json: any, errors?: Array<HostConfig.IValidationError>) => void = null;\r\n    static onParseError: (error: HostConfig.IValidationError) => void = null;\r\n    static onProcessMarkdown: (text: string, result: IMarkdownProcessingResult) => void = null;\r\n\r\n    static get processMarkdown(): (text: string) => string {\r\n        throw new Error(\"The processMarkdown event has been removed. Please update your code and set onProcessMarkdown instead.\")\r\n    }\r\n\r\n    static set processMarkdown(value: (text: string) => string) {\r\n        throw new Error(\"The processMarkdown event has been removed. Please update your code and set onProcessMarkdown instead.\")\r\n    }\r\n\r\n    static applyMarkdown(text: string): IMarkdownProcessingResult {\r\n        let result: IMarkdownProcessingResult = {\r\n            didProcess: false\r\n        };\r\n\r\n        if (AdaptiveCard.onProcessMarkdown) {\r\n            AdaptiveCard.onProcessMarkdown(text, result);\r\n        }\r\n        else if (window[\"markdownit\"]) {\r\n            // Check for markdownit\r\n            result.outputHtml = window[\"markdownit\"]().render(text);\r\n            result.didProcess = true;\r\n        }\r\n        else {\r\n            console.warn(\"Markdown processing isn't enabled. Please see https://www.npmjs.com/package/adaptivecards#supporting-markdown\")\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    private _cardTypeName?: string = \"AdaptiveCard\";\r\n    private _fallbackCard: AdaptiveCard = null;\r\n\r\n    private isVersionSupported(): boolean {\r\n        if (this.bypassVersionCheck) {\r\n            return true;\r\n        }\r\n        else {\r\n            let unsupportedVersion: boolean =\r\n                !this.version ||\r\n                !this.version.isValid ||\r\n                (AdaptiveCard.currentVersion.major < this.version.major) ||\r\n                (AdaptiveCard.currentVersion.major == this.version.major && AdaptiveCard.currentVersion.minor < this.version.minor);\r\n\r\n            return !unsupportedVersion;\r\n        }\r\n    }\r\n\r\n    protected getItemsCollectionPropertyName(): string {\r\n        return \"body\";\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        var renderedElement = super.internalRender();\r\n\r\n        if (AdaptiveCard.useAdvancedCardBottomTruncation) {\r\n            // Unlike containers, the root card element should be allowed to\r\n            // be shorter than its content (otherwise the overflow truncation\r\n            // logic would never get triggered)\r\n            renderedElement.style.minHeight = null;\r\n        }\r\n\r\n        return renderedElement;\r\n    }\r\n\r\n    protected getHasBackground(): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected getDefaultPadding(): Shared.PaddingDefinition {\r\n        return new Shared.PaddingDefinition(\r\n            Enums.Spacing.Padding,\r\n            Enums.Spacing.Padding,\r\n            Enums.Spacing.Padding,\r\n            Enums.Spacing.Padding);\r\n    }\r\n\r\n    protected get renderIfEmpty(): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected get bypassVersionCheck(): boolean {\r\n        return false;\r\n    }\r\n\r\n    protected get allowCustomStyle() {\r\n        return this.hostConfig.adaptiveCard && this.hostConfig.adaptiveCard.allowCustomStyle;\r\n    }\r\n\r\n    protected get hasBackground(): boolean {\r\n        return true;\r\n    }\r\n\r\n    onAnchorClicked: (element: CardElement, anchor: HTMLAnchorElement) => boolean = null;\r\n    onExecuteAction: (action: Action) => void = null;\r\n    onElementVisibilityChanged: (element: CardElement) => void = null;\r\n    onImageLoaded: (image: Image) => void = null;\r\n    onInlineCardExpanded: (action: ShowCardAction, isExpanded: boolean) => void = null;\r\n    onInputValueChanged: (input: Input) => void = null;\r\n    onParseElement: (element: CardElement, json: any, errors?: Array<HostConfig.IValidationError>) => void = null;\r\n    onParseAction: (element: Action, json: any, errors?: Array<HostConfig.IValidationError>) => void = null;\r\n\r\n    version?: HostConfig.Version = new HostConfig.Version(1, 0);\r\n    fallbackText: string;\r\n    speak: string;\r\n    designMode: boolean = false;\r\n\r\n    getJsonTypeName(): string {\r\n        return \"AdaptiveCard\";\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"$schema\", \"http://adaptivecards.io/schemas/adaptive-card.json\");\r\n\r\n        if (!this.bypassVersionCheck && this.version) {\r\n            Utils.setProperty(result, \"version\", this.version.toString());\r\n        }\r\n\r\n        Utils.setProperty(result, \"fallbackText\", this.fallbackText);\r\n        Utils.setProperty(result, \"lang\", this.lang);\r\n        Utils.setProperty(result, \"speak\", this.speak);\r\n\r\n        return result;\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        if (this._cardTypeName != \"AdaptiveCard\") {\r\n            context.addFailure(\r\n                this,\r\n                {\r\n                    error: Enums.ValidationError.MissingCardType,\r\n                    message: \"Invalid or missing card type. Make sure the card's type property is set to \\\"AdaptiveCard\\\".\"\r\n                });\r\n        }\r\n\r\n        if (!this.bypassVersionCheck && !this.version) {\r\n            context.addFailure(\r\n                this,\r\n                {\r\n                    error: Enums.ValidationError.PropertyCantBeNull,\r\n                    message: \"The version property must be specified.\"\r\n                });\r\n        }\r\n        else if (!this.isVersionSupported()) {\r\n            context.addFailure(\r\n                this,\r\n                {\r\n                    error: Enums.ValidationError.UnsupportedCardVersion,\r\n                    message: \"The specified card version (\" + this.version + \") is not supported. The maximum supported card version is \" + AdaptiveCard.currentVersion\r\n                });\r\n        }\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        this._fallbackCard = null;\r\n\r\n        this._cardTypeName = Utils.getStringValue(json[\"type\"]);\r\n        this.speak = Utils.getStringValue(json[\"speak\"]);\r\n\r\n\t\tvar langId = Utils.getStringValue(json[\"lang\"]);\r\n\r\n        if (langId && typeof langId === \"string\") {\r\n            try {\r\n                this.lang = langId;\r\n            }\r\n            catch (e) {\r\n                raiseParseError(\r\n                    {\r\n                        error: Enums.ValidationError.InvalidPropertyValue,\r\n                        message: e.message\r\n                    },\r\n                    errors\r\n                );\r\n            }\r\n        }\r\n\r\n        this.version = HostConfig.Version.parse(json[\"version\"], errors);\r\n\r\n        this.fallbackText = Utils.getStringValue(json[\"fallbackText\"]);\r\n\r\n        let fallbackElement = createElementInstance(\r\n            null,\r\n            json[\"fallback\"],\r\n            !this.isDesignMode(),\r\n            errors);\r\n\r\n        if (fallbackElement) {\r\n            this._fallbackCard = new AdaptiveCard();\r\n            this._fallbackCard.addItem(fallbackElement);\r\n        }\r\n\r\n        super.parse(json, errors);\r\n    }\r\n\r\n    render(target?: HTMLElement): HTMLElement {\r\n        let renderedCard: HTMLElement;\r\n\r\n        if (this.shouldFallback() && this._fallbackCard) {\r\n            this._fallbackCard.hostConfig = this.hostConfig;\r\n\r\n            renderedCard = this._fallbackCard.render();\r\n        }\r\n        else {\r\n            renderedCard = super.render();\r\n\r\n            if (renderedCard) {\r\n                renderedCard.classList.add(this.hostConfig.makeCssClassName(\"ac-adaptiveCard\"));\r\n\r\n                // Having a tabIndex on the root container for a card can mess up accessibility in some scenarios.\r\n                // However, we've shipped this behavior before, and so can't just turn it off in a point release. For\r\n                // now, to unblock accessibility scenarios for our customers, we've got an option to turn it off. In a\r\n                // future release, we should strongly consider flipping the default such that we *don't* emit a tabIndex\r\n                // by default.\r\n                if (Shared.GlobalSettings.setTabIndexAtCardRoot) {\r\n                    renderedCard.tabIndex = 0;\r\n                }\r\n\r\n                if (!Utils.isNullOrEmpty(this.speak)) {\r\n                    renderedCard.setAttribute(\"aria-label\", this.speak);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (target) {\r\n            target.appendChild(renderedCard);\r\n\r\n            this.updateLayout();\r\n        }\r\n\r\n        return renderedCard;\r\n    }\r\n\r\n    updateLayout(processChildren: boolean = true) {\r\n        super.updateLayout(processChildren);\r\n\r\n        if (AdaptiveCard.useAdvancedCardBottomTruncation && this.isRendered()) {\r\n            var card = this.renderedElement;\r\n            var padding = this.hostConfig.getEffectiveSpacing(Enums.Spacing.Default);\r\n\r\n            this['handleOverflow'](card.offsetHeight - padding);\r\n        }\r\n    }\r\n\r\n    shouldFallback(): boolean {\r\n        return super.shouldFallback() || !this.isVersionSupported();\r\n    }\r\n\r\n    get hasVisibleSeparator(): boolean {\r\n        return false;\r\n    }\r\n}\r\n\r\nclass InlineAdaptiveCard extends AdaptiveCard {\r\n    protected getDefaultPadding(): Shared.PaddingDefinition {\r\n        return new Shared.PaddingDefinition(\r\n            this.suppressStyle ? Enums.Spacing.None : Enums.Spacing.Padding,\r\n            Enums.Spacing.Padding,\r\n            this.suppressStyle ? Enums.Spacing.None : Enums.Spacing.Padding,\r\n            Enums.Spacing.Padding);\r\n    }\r\n\r\n    protected get bypassVersionCheck(): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected get defaultStyle(): string {\r\n        if (this.suppressStyle) {\r\n            return Enums.ContainerStyle.Default;\r\n        }\r\n        else {\r\n            return this.hostConfig.actions.showCard.style ? this.hostConfig.actions.showCard.style : Enums.ContainerStyle.Emphasis;\r\n        }\r\n    }\r\n\r\n    suppressStyle: boolean = false;\r\n\r\n    render(target?: HTMLElement) {\r\n        var renderedCard = super.render(target);\r\n        renderedCard.setAttribute(\"aria-live\", \"polite\");\r\n        renderedCard.removeAttribute(\"tabindex\");\r\n\r\n        return renderedCard;\r\n    }\r\n\r\n    getForbiddenActionTypes(): Array<any> {\r\n        return [ShowCardAction];\r\n    }\r\n}\r\n\r\nconst defaultHostConfig: HostConfig.HostConfig = new HostConfig.HostConfig(\r\n    {\r\n        supportsInteractivity: true,\r\n        spacing: {\r\n            small: 10,\r\n            default: 20,\r\n            medium: 30,\r\n            large: 40,\r\n            extraLarge: 50,\r\n            padding: 20\r\n        },\r\n        separator: {\r\n            lineThickness: 1,\r\n            lineColor: \"#EEEEEE\"\r\n        },\r\n        fontTypes: {\r\n            default: {\r\n                fontFamily: \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\",\r\n                fontSizes: {\r\n                    small: 12,\r\n                    default: 14,\r\n                    medium: 17,\r\n                    large: 21,\r\n                    extraLarge: 26\r\n                },\r\n                fontWeights: {\r\n                    lighter: 200,\r\n                    default: 400,\r\n                    bolder: 600\r\n                }\r\n            },\r\n            monospace: {\r\n                fontFamily: \"'Courier New', Courier, monospace\",\r\n                fontSizes: {\r\n                    small: 12,\r\n                    default: 14,\r\n                    medium: 17,\r\n                    large: 21,\r\n                    extraLarge: 26\r\n                },\r\n                fontWeights: {\r\n                    lighter: 200,\r\n                    default: 400,\r\n                    bolder: 600\r\n                }\r\n            }\r\n        },\r\n        imageSizes: {\r\n            small: 40,\r\n            medium: 80,\r\n            large: 160\r\n        },\r\n        containerStyles: {\r\n            default: {\r\n                backgroundColor: \"#FFFFFF\",\r\n                foregroundColors: {\r\n                    default: {\r\n                        default: \"#333333\",\r\n                        subtle: \"#EE333333\"\r\n                    },\r\n                    dark: {\r\n                        default: \"#000000\",\r\n                        subtle: \"#66000000\"\r\n                    },\r\n                    light: {\r\n                        default: \"#FFFFFF\",\r\n                        subtle: \"#33000000\"\r\n                    },\r\n                    accent: {\r\n                        default: \"#2E89FC\",\r\n                        subtle: \"#882E89FC\"\r\n                    },\r\n                    attention: {\r\n                        default: \"#cc3300\",\r\n                        subtle: \"#DDcc3300\"\r\n                    },\r\n                    good: {\r\n                        default: \"#54a254\",\r\n                        subtle: \"#DD54a254\"\r\n                    },\r\n                    warning: {\r\n                        default: \"#e69500\",\r\n                        subtle: \"#DDe69500\"\r\n                    }\r\n                }\r\n            },\r\n            emphasis: {\r\n                backgroundColor: \"#08000000\",\r\n                foregroundColors: {\r\n                    default: {\r\n                        default: \"#333333\",\r\n                        subtle: \"#EE333333\"\r\n                    },\r\n                    dark: {\r\n                        default: \"#000000\",\r\n                        subtle: \"#66000000\"\r\n                    },\r\n                    light: {\r\n                        default: \"#FFFFFF\",\r\n                        subtle: \"#33000000\"\r\n                    },\r\n                    accent: {\r\n                        default: \"#2E89FC\",\r\n                        subtle: \"#882E89FC\"\r\n                    },\r\n                    attention: {\r\n                        default: \"#cc3300\",\r\n                        subtle: \"#DDcc3300\"\r\n                    },\r\n                    good: {\r\n                        default: \"#54a254\",\r\n                        subtle: \"#DD54a254\"\r\n                    },\r\n                    warning: {\r\n                        default: \"#e69500\",\r\n                        subtle: \"#DDe69500\"\r\n                    }\r\n                }\r\n            },\r\n            accent: {\r\n                backgroundColor: \"#C7DEF9\",\r\n                foregroundColors: {\r\n                    default: {\r\n                        default: \"#333333\",\r\n                        subtle: \"#EE333333\"\r\n                    },\r\n                    dark: {\r\n                        default: \"#000000\",\r\n                        subtle: \"#66000000\"\r\n                    },\r\n                    light: {\r\n                        default: \"#FFFFFF\",\r\n                        subtle: \"#33000000\"\r\n                    },\r\n                    accent: {\r\n                        default: \"#2E89FC\",\r\n                        subtle: \"#882E89FC\"\r\n                    },\r\n                    attention: {\r\n                        default: \"#cc3300\",\r\n                        subtle: \"#DDcc3300\"\r\n                    },\r\n                    good: {\r\n                        default: \"#54a254\",\r\n                        subtle: \"#DD54a254\"\r\n                    },\r\n                    warning: {\r\n                        default: \"#e69500\",\r\n                        subtle: \"#DDe69500\"\r\n                    }\r\n                }\r\n            },\r\n            good: {\r\n                backgroundColor: \"#CCFFCC\",\r\n                foregroundColors: {\r\n                    default: {\r\n                        default: \"#333333\",\r\n                        subtle: \"#EE333333\"\r\n                    },\r\n                    dark: {\r\n                        default: \"#000000\",\r\n                        subtle: \"#66000000\"\r\n                    },\r\n                    light: {\r\n                        default: \"#FFFFFF\",\r\n                        subtle: \"#33000000\"\r\n                    },\r\n                    accent: {\r\n                        default: \"#2E89FC\",\r\n                        subtle: \"#882E89FC\"\r\n                    },\r\n                    attention: {\r\n                        default: \"#cc3300\",\r\n                        subtle: \"#DDcc3300\"\r\n                    },\r\n                    good: {\r\n                        default: \"#54a254\",\r\n                        subtle: \"#DD54a254\"\r\n                    },\r\n                    warning: {\r\n                        default: \"#e69500\",\r\n                        subtle: \"#DDe69500\"\r\n                    }\r\n                }\r\n            },\r\n            attention: {\r\n                backgroundColor: \"#FFC5B2\",\r\n                foregroundColors: {\r\n                    default: {\r\n                        default: \"#333333\",\r\n                        subtle: \"#EE333333\"\r\n                    },\r\n                    dark: {\r\n                        default: \"#000000\",\r\n                        subtle: \"#66000000\"\r\n                    },\r\n                    light: {\r\n                        default: \"#FFFFFF\",\r\n                        subtle: \"#33000000\"\r\n                    },\r\n                    accent: {\r\n                        default: \"#2E89FC\",\r\n                        subtle: \"#882E89FC\"\r\n                    },\r\n                    attention: {\r\n                        default: \"#cc3300\",\r\n                        subtle: \"#DDcc3300\"\r\n                    },\r\n                    good: {\r\n                        default: \"#54a254\",\r\n                        subtle: \"#DD54a254\"\r\n                    },\r\n                    warning: {\r\n                        default: \"#e69500\",\r\n                        subtle: \"#DDe69500\"\r\n                    }\r\n                }\r\n            },\r\n            warning: {\r\n                backgroundColor: \"#FFE2B2\",\r\n                foregroundColors: {\r\n                    default: {\r\n                        default: \"#333333\",\r\n                        subtle: \"#EE333333\"\r\n                    },\r\n                    dark: {\r\n                        default: \"#000000\",\r\n                        subtle: \"#66000000\"\r\n                    },\r\n                    light: {\r\n                        default: \"#FFFFFF\",\r\n                        subtle: \"#33000000\"\r\n                    },\r\n                    accent: {\r\n                        default: \"#2E89FC\",\r\n                        subtle: \"#882E89FC\"\r\n                    },\r\n                    attention: {\r\n                        default: \"#cc3300\",\r\n                        subtle: \"#DDcc3300\"\r\n                    },\r\n                    good: {\r\n                        default: \"#54a254\",\r\n                        subtle: \"#DD54a254\"\r\n                    },\r\n                    warning: {\r\n                        default: \"#e69500\",\r\n                        subtle: \"#DDe69500\"\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        actions: {\r\n            maxActions: 5,\r\n            spacing: Enums.Spacing.Default,\r\n            buttonSpacing: 10,\r\n            showCard: {\r\n                actionMode: Enums.ShowCardActionMode.Inline,\r\n                inlineTopMargin: 16\r\n            },\r\n            actionsOrientation: Enums.Orientation.Horizontal,\r\n            actionAlignment: Enums.ActionAlignment.Left\r\n        },\r\n        adaptiveCard: {\r\n            allowCustomStyle: false\r\n        },\r\n        imageSet: {\r\n            imageSize: Enums.Size.Medium,\r\n            maxImageHeight: 100\r\n        },\r\n        factSet: {\r\n            title: {\r\n                color: Enums.TextColor.Default,\r\n                size: Enums.TextSize.Default,\r\n                isSubtle: false,\r\n                weight: Enums.TextWeight.Bolder,\r\n                wrap: true,\r\n                maxWidth: 150,\r\n            },\r\n            value: {\r\n                color: Enums.TextColor.Default,\r\n                size: Enums.TextSize.Default,\r\n                isSubtle: false,\r\n                weight: Enums.TextWeight.Default,\r\n                wrap: true,\r\n            },\r\n            spacing: 10\r\n        }\r\n    });\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nabstract class AbstractTextFormatter {\r\n    private _regularExpression: RegExp;\r\n\r\n    protected abstract internalFormat(lang: string, matches: RegExpExecArray): string;\r\n\r\n    constructor(regularExpression: RegExp) {\r\n        this._regularExpression = regularExpression;\r\n    }\r\n\r\n    format(lang: string, input: string): string {\r\n        var matches;\r\n        var result = input;\r\n\r\n        while ((matches = this._regularExpression.exec(input)) != null) {\r\n            result = result.replace(matches[0], this.internalFormat(lang, matches));\r\n        };\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nclass DateFormatter extends AbstractTextFormatter {\r\n    protected internalFormat(lang: string, matches: RegExpExecArray): string {\r\n        var date = new Date(Date.parse(matches[1]));\r\n        var format = matches[2] != undefined ? matches[2].toLowerCase() : \"compact\";\r\n\r\n        if (format != \"compact\") {\r\n            return date.toLocaleDateString(lang, { day: \"numeric\", weekday: format, month: format, year: \"numeric\" });\r\n        }\r\n        else {\r\n            return date.toLocaleDateString();\r\n        }\r\n    }\r\n}\r\n\r\nclass TimeFormatter extends AbstractTextFormatter {\r\n    protected internalFormat(lang: string, matches: RegExpExecArray): string {\r\n        var date = new Date(Date.parse(matches[1]));\r\n\r\n        return date.toLocaleTimeString(lang, { hour: 'numeric', minute: '2-digit' });\r\n    }\r\n}\r\n\r\nexport function formatText(lang: string, text: string): string {\r\n    const formatters: Array<AbstractTextFormatter> = [\r\n        new DateFormatter(/\\{{2}DATE\\((\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(?:Z|(?:(?:-|\\+)\\d{2}:\\d{2})))(?:, ?(COMPACT|LONG|SHORT))?\\)\\}{2}/g),\r\n        new TimeFormatter(/\\{{2}TIME\\((\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(?:Z|(?:(?:-|\\+)\\d{2}:\\d{2})))\\)\\}{2}/g)\r\n    ];\r\n\r\n    var result = text;\r\n\r\n    for (var i = 0; i < formatters.length; i++) {\r\n        result = formatters[i].format(lang, result);\r\n    }\r\n\r\n    return result;\r\n}\r\n"],"sourceRoot":""}